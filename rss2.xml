<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>小四儿</title>
    <link>https://www.xiaosige.com/</link>
    
    <image>
      <url>https://www.xiaosige.com/icon.png</url>
      <title>小四儿</title>
      <link>https://www.xiaosige.com/</link>
    </image>
    
    <atom:link href="https://www.xiaosige.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>因上努力，果上随缘！</description>
    <pubDate>Sat, 12 Feb 2022 15:39:58 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Linux编译部署LNMP环境</title>
      <link>https://www.xiaosige.com/post/7eb6696d.html</link>
      <guid>https://www.xiaosige.com/post/7eb6696d.html</guid>
      <pubDate>Sat, 12 Feb 2022 15:25:33 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;  Lnmp架构&lt;br&gt;  Lnmp(web应用软件组合)&lt;br&gt;  Linux+Nginx+Mysql/MariaDB+Perl/PHP/Python一组常用来搭建动态网站或者服务器的开源软件，本身都是各自独立的程序，但是因为常被放在一起使用，拥有了越来越高的兼容度，共同组成了一个强大的Web应用程序平台。&lt;/p&gt;
&lt;p&gt;  LAMP的架构以及通信过程&lt;br&gt;  Lnmp是一个cs架构的平台（client/server架构， 即客户端/服务器架构)，web客户端基于TCP/IP通过http协议发起传送这个请求可能是动态的也可能是静态的，所有的服务器通过发起请求的后缀来判断，如果是静态的就由web服务器自己处理，然后将资源发给客户端。如果请求是动态的这时web服务器会通过FSATCGI协议发给php，通过php模块去MySQL拿数据在通过Nginx交给客户端。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Linux/">Linux</category>
      
      
      <category domain="https://www.xiaosige.com/tags/LNMP/">LNMP</category>
      
      
      <comments>https://www.xiaosige.com/post/7eb6696d.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用Docker安装MongoDB</title>
      <link>https://www.xiaosige.com/post/a639ff5d.html</link>
      <guid>https://www.xiaosige.com/post/a639ff5d.html</guid>
      <pubDate>Fri, 11 Feb 2022 09:05:16 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;获取MongoDB镜像&quot;&gt;&lt;a href=&quot;#获取MongoDB镜像&quot; class=&quot;headerlink&quot; title=&quot;获取MongoDB镜像&quot;&gt;&lt;/a&gt;获取MongoDB镜像&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-docker&quot; data-language=&quot;docker&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;docker pull mongo&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;5.0.6&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Mongo/">Mongo</category>
      
      
      <comments>https://www.xiaosige.com/post/a639ff5d.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>解决Docker容器内无法解析DNS的问题</title>
      <link>https://www.xiaosige.com/post/3458217c.html</link>
      <guid>https://www.xiaosige.com/post/3458217c.html</guid>
      <pubDate>Wed, 08 Dec 2021 15:30:05 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;  最近Docker上重装Nexus3，&lt;code&gt;一直报错 UnknownHostException: rhc.sonatype.com &lt;/code&gt; (在另一个场景中报 NoRouteToHostException: No route to host )&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Nexus/">Nexus</category>
      
      
      <comments>https://www.xiaosige.com/post/3458217c.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Centos7/8 firewall 和 docker 冲突解决</title>
      <link>https://www.xiaosige.com/post/76a6f1b6.html</link>
      <guid>https://www.xiaosige.com/post/76a6f1b6.html</guid>
      <pubDate>Tue, 07 Dec 2021 18:30:52 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;div class=&quot;note success no-icon&quot;&gt;&lt;p&gt;  centos7/8 自带防火墙是firewalld。firewall的底层是使用iptables进行数据过滤，建立在iptables之上，这可能会与 Docker 产生冲突。当 firewalld 启动或者重启的时候，将会从 iptables 中移除 DOCKER 的规则，从而影响了 Docker 的正常工作。当你使用的是 Systemd 的时候， firewalld 会在 Docker 之前启动，但是如果你在 Docker 启动之后再启动 或者重启 firewalld ，你就需要重启 Docker 进程了。&lt;/p&gt;
&lt;/div&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Docker/">Docker</category>
      
      
      <comments>https://www.xiaosige.com/post/76a6f1b6.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Dockerfile构建基础镜像为alpine的jdk1.8镜像</title>
      <link>https://www.xiaosige.com/post/a90d146c.html</link>
      <guid>https://www.xiaosige.com/post/a90d146c.html</guid>
      <pubDate>Sun, 31 Oct 2021 16:41:08 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;新建dockerfile目录&quot;&gt;&lt;a href=&quot;#新建dockerfile目录&quot; class=&quot;headerlink&quot; title=&quot;新建dockerfile目录&quot;&gt;&lt;/a&gt;新建&lt;code&gt;dockerfile&lt;/code&gt;目录&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; /opt/mydockerfile&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Docker/">Docker</category>
      
      
      <comments>https://www.xiaosige.com/post/a90d146c.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Nexus搭建Docker私有仓库</title>
      <link>https://www.xiaosige.com/post/1ed6a709.html</link>
      <guid>https://www.xiaosige.com/post/1ed6a709.html</guid>
      <pubDate>Sat, 30 Oct 2021 16:19:29 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;  Nexus3是Sonatype提供的仓库管理平台，Nuexus Repository OSS3能够支持Maven、npm、Docker、YUM、Helm等格式数据的存储和发布；并且能够与Jekins、SonaQube和Eclipse等工具进行集成。Nexus3支持作为宿主和代理存储库的Docker存储库，可以直接将这些存储库暴露给客户端工具；也可以以存储库组的方式暴露给客户端工具，存储库组是合并了多个存储库的内容的存储库，能够通过一个URL将多个存储库暴露给客户端工具，从而便于用户的使用。通过nexus3自建能够有效减少访问获取镜像的时间和对带宽使用，并能够通过自有的镜像仓库共享企业自己的镜像。在本文中，采用Docker方式安装部署Nexus3。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Nexus/">Nexus</category>
      
      
      <comments>https://www.xiaosige.com/post/1ed6a709.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker 安装 Maven私服 Nexus3</title>
      <link>https://www.xiaosige.com/post/a6836d41.html</link>
      <guid>https://www.xiaosige.com/post/a6836d41.html</guid>
      <pubDate>Tue, 22 Jun 2021 16:48:12 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;  Nexus 是Maven仓库管理器，如果你使用Maven，你可以从Maven中央仓库 下载所需要的构件（artifact），但这通常不是一个好的做法，你应该在本地架设一个Maven仓库服务器，在代理远程仓库的同时维护本地仓库，以节省带宽和时间，Nexus就可以满足这样的需要。此外，他还提供了强大的仓库管理功能，构件搜索功能，它基于REST，友好的UI是一个extjs的REST客户端，它占用较少的内存，基于简单文件系统而非数据库。这些优点使其日趋成为最流行的Maven仓库管理器。除此之外，Nexus还可以管理Docker镜像。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Nexus/">Nexus</category>
      
      
      <comments>https://www.xiaosige.com/post/a6836d41.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux 字符颜色输出</title>
      <link>https://www.xiaosige.com/post/120400e.html</link>
      <guid>https://www.xiaosige.com/post/120400e.html</guid>
      <pubDate>Thu, 17 Jun 2021 18:06:32 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;  没啥的，搞点颜色看看。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Linux/">Linux</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Linux/">Linux</category>
      
      
      <comments>https://www.xiaosige.com/post/120400e.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker安装部署Jenkins</title>
      <link>https://www.xiaosige.com/post/78357a82.html</link>
      <guid>https://www.xiaosige.com/post/78357a82.html</guid>
      <pubDate>Thu, 17 Jun 2021 17:28:48 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;  记录下 Docker 下 Jenkins 的安装。&lt;br&gt;  DockerHub: &lt;a href=&quot;https://hub.docker.com/r/jenkins/jenkins/&quot;&gt;https://hub.docker.com/r/jenkins/jenkins/&lt;/a&gt;&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Gitea/">Gitea</category>
      
      
      <comments>https://www.xiaosige.com/post/78357a82.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker 删除所有悬虚镜像（name 为none , tag 为 none）</title>
      <link>https://www.xiaosige.com/post/d2e31b5e.html</link>
      <guid>https://www.xiaosige.com/post/d2e31b5e.html</guid>
      <pubDate>Sun, 13 Jun 2021 17:30:37 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;什么是-悬虚镜像&quot;&gt;&lt;a href=&quot;#什么是-悬虚镜像&quot; class=&quot;headerlink&quot; title=&quot;什么是 悬虚镜像&quot;&gt;&lt;/a&gt;什么是 悬虚镜像&lt;/h3&gt;&lt;p&gt;  悬虚镜像就是镜像没有仓库名或没有标签查询显示虚悬镜像，在列表中展示为&lt;code&gt; &amp;lt;none&amp;gt;:&amp;lt;none&amp;gt;&lt;/code&gt;&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Docker/">Docker</category>
      
      
      <comments>https://www.xiaosige.com/post/d2e31b5e.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker使用Gitea+Drone实现持续集成(CI/CD)</title>
      <link>https://www.xiaosige.com/post/3abef87b.html</link>
      <guid>https://www.xiaosige.com/post/3abef87b.html</guid>
      <pubDate>Sat, 12 Jun 2021 22:19:21 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;div class=&quot;note success no-icon&quot;&gt;&lt;p&gt;  在开发或生产环境中，我们经常会搞一套自动化部署方案（俗称一键部署）。比较流行的一种就是Gitlab+Jenkins实现方案，不过这种方案占用内存比较大，没有个8G内存，很难流畅运行，而且部署起来也不快。最近发现一款神器Drone，轻量级CI/DI工具，结合Gogs使用内存占用不到1G，几行脚本就能实现自动化部署，推荐给大家！&lt;/p&gt;
&lt;/div&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Drone/">Drone</category>
      
      
      <comments>https://www.xiaosige.com/post/3abef87b.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker安装Gitea</title>
      <link>https://www.xiaosige.com/post/853577ec.html</link>
      <guid>https://www.xiaosige.com/post/853577ec.html</guid>
      <pubDate>Fri, 11 Jun 2021 18:42:29 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;  Gitea是一个极易安装，运行非常快速，安装和使用体验良好的自建Git服务。采用Go作为后端语言，这使得只要生成一个可执行程序即可。并且他还支持跨平台，支持Linux、macOS和Windows以及各种架构，除了x86，amd64，还包括ARM和 PowerPC。&lt;/p&gt;
&lt;p&gt;  Github地址：&lt;a href=&quot;https://github.com/go-gitea/gitea&quot;&gt;https://github.com/go-gitea/gitea&lt;/a&gt;&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Gitea/">Gitea</category>
      
      
      <comments>https://www.xiaosige.com/post/853577ec.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>MyBatis-Plus 实现敏感数据的加密</title>
      <link>https://www.xiaosige.com/post/55d89d2f.html</link>
      <guid>https://www.xiaosige.com/post/55d89d2f.html</guid>
      <pubDate>Fri, 11 Jun 2021 10:56:49 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;  在做项目时，需要实现对身份证,密码等敏感数据的加密，即不能以明文存储密码到数据库。&lt;br&gt;  以下采用&lt;code&gt;TypeHandler&lt;/code&gt;形式。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Java/">Java</category>
      
      
      <category domain="https://www.xiaosige.com/tags/MyBatis-Plus/">MyBatis-Plus</category>
      
      
      <comments>https://www.xiaosige.com/post/55d89d2f.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>MyBatis-Plus - xml中如何使用autoResultMap构造的ResultMap</title>
      <link>https://www.xiaosige.com/post/b7c3ab9f.html</link>
      <guid>https://www.xiaosige.com/post/b7c3ab9f.html</guid>
      <pubDate>Fri, 11 Jun 2021 10:23:46 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;  MyBatis Plus有一个很大的缺陷，就是insert和select的时候使用的ResultMap是不同的，修复的办法就是在实体类上增加注解&lt;code&gt;@TableName(autoResultMap = true)&lt;/code&gt;。但是这个autoResultMap并不能使用在自定义的方法上，只在MyBatis Plus内置方法上生效。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Java/">Java</category>
      
      
      <category domain="https://www.xiaosige.com/tags/MyBatis-Plus/">MyBatis-Plus</category>
      
      
      <comments>https://www.xiaosige.com/post/b7c3ab9f.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker 查看端口占用列表</title>
      <link>https://www.xiaosige.com/post/cb326ecf.html</link>
      <guid>https://www.xiaosige.com/post/cb326ecf.html</guid>
      <pubDate>Wed, 26 May 2021 18:30:16 GMT</pubDate>
      
      <description>&lt;p&gt;  我们在部署新项目时，不知道启动的容器都占用了那些端口，docker ps 眼花缭乱。我们可以使用netstat看一下。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Docker/">Docker</category>
      
      
      <comments>https://www.xiaosige.com/post/cb326ecf.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker中搭建Jira</title>
      <link>https://www.xiaosige.com/post/4ed27834.html</link>
      <guid>https://www.xiaosige.com/post/4ed27834.html</guid>
      <pubDate>Fri, 14 May 2021 15:59:08 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;  JIRA 是 Atlassian 公司出品的项目与事务跟踪工具，被广泛应用于缺陷跟踪、客户服务、需求收集、流程审批、任务跟踪、项目跟踪和敏捷管理等工作领域。&lt;br&gt;  Centos下安装参考：&lt;a href=&quot;/post/afb30e04.html&quot; title=&quot;Centos下Jira8.x版本安装与破解&quot;&gt;Centos下Jira8.x版本安装与破解&lt;/a&gt;。&lt;br&gt;  下面介绍是采用&lt;code&gt;docker&lt;/code&gt;来进行部署。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Jira/">Jira</category>
      
      
      <comments>https://www.xiaosige.com/post/4ed27834.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Centos8安装Docker</title>
      <link>https://www.xiaosige.com/post/a00f9d53.html</link>
      <guid>https://www.xiaosige.com/post/a00f9d53.html</guid>
      <pubDate>Mon, 10 May 2021 08:17:18 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;p&gt;  服务器版本:CentOS 8.2 64位&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Centos/">Centos</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Docker/">Docker</category>
      
      
      <comments>https://www.xiaosige.com/post/a00f9d53.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker安装portainer-ce2.0</title>
      <link>https://www.xiaosige.com/post/5086702b.html</link>
      <guid>https://www.xiaosige.com/post/5086702b.html</guid>
      <pubDate>Mon, 10 May 2021 07:44:46 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;  Portainer是Docker的图形化管理工具，提供状态显示面板、应用模板快速部署、容器镜像网络数据卷的基本操作（包括上传下载镜像，创建容器等操作）、事件日志显示、容器控制台操作、Swarm集群和服务等集中管理和操作、登录用户管理和控制等功能。功能十分全面，基本能满足中小型单位对容器管理的全部需求。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/GitLab/">GitLab</category>
      
      
      <comments>https://www.xiaosige.com/post/5086702b.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Centos8防火墙设置</title>
      <link>https://www.xiaosige.com/post/e0840970.html</link>
      <guid>https://www.xiaosige.com/post/e0840970.html</guid>
      <pubDate>Mon, 10 May 2021 06:44:59 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;  centos7以前的版本默认使用iptables服务进行管理防火墙规则。centos7以及其以上版本默认使用firewalld服务管理防火墙。所以在centos8中，就使用其默认的firewalld配置防火墙。&lt;br&gt;  firewalld和iptables的官方说明可以参照&lt;a href=&quot;https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/security_guide/sec-using_firewalls#sec-Comparison_of_Firewalld_to_system-config-firewall_and_iptables&quot;&gt;https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/security_guide/sec-using_firewalls#sec-Comparison_of_Firewalld_to_system-config-firewall_and_iptables&lt;/a&gt;&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Linux/">Linux</category>
      
      
      <category domain="https://www.xiaosige.com/tags/Linux/">Linux</category>
      
      
      <comments>https://www.xiaosige.com/post/e0840970.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker 安装 GitLab</title>
      <link>https://www.xiaosige.com/post/6af4ceb4.html</link>
      <guid>https://www.xiaosige.com/post/6af4ceb4.html</guid>
      <pubDate>Sun, 09 May 2021 12:12:04 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;一，介绍&quot;&gt;&lt;a href=&quot;#一，介绍&quot; class=&quot;headerlink&quot; title=&quot;一，介绍&quot;&gt;&lt;/a&gt;一，介绍&lt;/h3&gt;&lt;p&gt;  GitLab 分为社区版（Community Edition，缩写为 CE）和 企业版（Enterprise Edition，缩写为 EE）。社区版是免费的，而企业版包含一些收费服务，一般来说个人开发者用社区版就足够了。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.xiaosige.com/categories/Docker/">Docker</category>
      
      
      <category domain="https://www.xiaosige.com/tags/GitLab/">GitLab</category>
      
      
      <comments>https://www.xiaosige.com/post/6af4ceb4.html#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
