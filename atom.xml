<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小四儿</title>
  <icon>https://www.xiaosige.com/icon.png</icon>
  <subtitle>心之所愿，无所不至！</subtitle>
  <link href="https://www.xiaosige.com/atom.xml" rel="self"/>
  
  <link href="https://www.xiaosige.com/"/>
  <updated>2022-05-09T07:25:05.460Z</updated>
  <id>https://www.xiaosige.com/</id>
  
  <author>
    <name>leeze</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Docker】之部署skywalking实现全链路监控功能</title>
    <link href="https://www.xiaosige.com/post/4612f524.html"/>
    <id>https://www.xiaosige.com/post/4612f524.html</id>
    <published>2022-05-09T05:07:58.000Z</published>
    <updated>2022-05-09T07:25:05.460Z</updated>
    
    
    <summary type="html">&lt;img data-src=&quot;/post/4612f524/skywalking-001.png&quot; class=&quot;&quot;&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="APM" scheme="https://www.xiaosige.com/tags/APM/"/>
    
  </entry>
  
  <entry>
    <title>【Docker】之安装 RabbitMQ</title>
    <link href="https://www.xiaosige.com/post/c0af152c.html"/>
    <id>https://www.xiaosige.com/post/c0af152c.html</id>
    <published>2022-05-08T14:42:50.000Z</published>
    <updated>2022-05-08T15:56:38.482Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;拉取镜像&quot;&gt;&lt;a href=&quot;#拉取镜像&quot; class=&quot;headerlink&quot; title=&quot;拉取镜像&quot;&gt;&lt;/a&gt;拉取镜像&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-docker&quot; data-language=&quot;docker&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# (镜像未配有控制台)&lt;/span&gt;
docker pull rabbitmq:3.9.16
&lt;span class=&quot;token comment&quot;&gt;# (镜像配有控制台)&lt;/span&gt;
docker pull rabbitmq:3.9.16-management&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;  &lt;code&gt;注意此处需要安装management的版本才有界面，其他tag的版本是没有管理界面的&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="MQ" scheme="https://www.xiaosige.com/tags/MQ/"/>
    
  </entry>
  
  <entry>
    <title>【Docker】之安装 ElasticSearch</title>
    <link href="https://www.xiaosige.com/post/5aa01560.html"/>
    <id>https://www.xiaosige.com/post/5aa01560.html</id>
    <published>2022-05-08T12:48:43.000Z</published>
    <updated>2022-05-09T06:25:39.991Z</updated>
    
    
    <summary type="html">&lt;img data-src=&quot;/post/5aa01560/docker001.jpeg&quot; class=&quot;&quot;&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="ElasticSearch" scheme="https://www.xiaosige.com/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>Dockerfile 镜像打包，保存镜像至本地，导入镜像</title>
    <link href="https://www.xiaosige.com/post/887706e1.html"/>
    <id>https://www.xiaosige.com/post/887706e1.html</id>
    <published>2022-04-29T03:17:56.000Z</published>
    <updated>2022-04-29T03:43:23.675Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;打包镜像&quot;&gt;&lt;a href=&quot;#打包镜像&quot; class=&quot;headerlink&quot; title=&quot;打包镜像&quot;&gt;&lt;/a&gt;打包镜像&lt;/h3&gt;&lt;p&gt;  在Dockerfile 目录下cmd窗口执行以下命令：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-docker&quot; data-language=&quot;docker&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;docker build -t 镜像名称 -f Dockerfile .&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>【解决】Idea中Pom.xml变灰并加横线</title>
    <link href="https://www.xiaosige.com/post/454169be.html"/>
    <id>https://www.xiaosige.com/post/454169be.html</id>
    <published>2022-04-26T20:12:56.000Z</published>
    <updated>2022-04-26T20:22:19.627Z</updated>
    
    
    <summary type="html">&lt;p&gt;  问题描述：有时候我们在删除某些项目，重新新建之后有时候会发现&lt;code&gt;pom.xml&lt;/code&gt;文件上有&lt;code&gt;一条横线&lt;/code&gt;，解决方式如下:&lt;/p&gt;</summary>
    
    
    
    <category term="Idea" scheme="https://www.xiaosige.com/categories/Idea/"/>
    
    
    <category term="Idea" scheme="https://www.xiaosige.com/tags/Idea/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 配置 HTTPS（多域名）</title>
    <link href="https://www.xiaosige.com/post/643b08ac.html"/>
    <id>https://www.xiaosige.com/post/643b08ac.html</id>
    <published>2022-04-20T22:10:10.000Z</published>
    <updated>2022-04-20T22:16:54.807Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;Nginx-配置&quot;&gt;&lt;a href=&quot;#Nginx-配置&quot; class=&quot;headerlink&quot; title=&quot;Nginx 配置&quot;&gt;&lt;/a&gt;Nginx 配置&lt;/h3&gt;&lt;p&gt;  首先, 需要把 &lt;code&gt;http&lt;/code&gt; 都转发到 &lt;code&gt;https&lt;/code&gt;, 需要使用 &lt;code&gt;rewrite&lt;/code&gt;, 这样, 当访问 &lt;code&gt;http://example.cn&lt;/code&gt; 会自动转发到 &lt;code&gt;https://example.cn&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Nginx" scheme="https://www.xiaosige.com/categories/Nginx/"/>
    
    
    <category term="Nginx" scheme="https://www.xiaosige.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat---setenv.sh</title>
    <link href="https://www.xiaosige.com/post/38ddfd80.html"/>
    <id>https://www.xiaosige.com/post/38ddfd80.html</id>
    <published>2022-04-20T10:28:23.000Z</published>
    <updated>2022-04-20T10:31:23.239Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;tomcat-setenv-sh&quot;&gt;&lt;a href=&quot;#tomcat-setenv-sh&quot; class=&quot;headerlink&quot; title=&quot;tomcat,setenv.sh&quot;&gt;&lt;/a&gt;tomcat,setenv.sh&lt;/h2&gt;&lt;p&gt;  代码比较简单&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://www.xiaosige.com/categories/Linux/"/>
    
    
    <category term="Tomcat" scheme="https://www.xiaosige.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>java visualVM(jconsole)远程监控服务器java进程</title>
    <link href="https://www.xiaosige.com/post/dc26ce6d.html"/>
    <id>https://www.xiaosige.com/post/dc26ce6d.html</id>
    <published>2022-04-20T06:37:13.000Z</published>
    <updated>2022-04-20T13:43:45.950Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;JMX方式（jconsole也可通过此方式进行连接）&quot;&gt;&lt;a href=&quot;#JMX方式（jconsole也可通过此方式进行连接）&quot; class=&quot;headerlink&quot; title=&quot;JMX方式（jconsole也可通过此方式进行连接）&quot;&gt;&lt;/a&gt;JMX方式（jconsole也可通过此方式进行连接）&lt;/h2&gt;&lt;p&gt;  jmx方式能监控到CPU信息，但无法使用visualVM的visualVM GC插件&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://www.xiaosige.com/categories/Java/"/>
    
    
    <category term="Jdk" scheme="https://www.xiaosige.com/tags/Jdk/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用VMWare虚拟，设置网络</title>
    <link href="https://www.xiaosige.com/post/942dd570.html"/>
    <id>https://www.xiaosige.com/post/942dd570.html</id>
    <published>2022-04-11T10:15:59.000Z</published>
    <updated>2022-04-11T10:25:00.982Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;vmnet8重启网卡&quot;&gt;&lt;a href=&quot;#vmnet8重启网卡&quot; class=&quot;headerlink&quot; title=&quot;vmnet8重启网卡&quot;&gt;&lt;/a&gt;vmnet8重启网卡&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt;  /Applications/VMware&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt; Fusion.app/Contents/Library/vmnet-cli --start
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt;  /Applications/VMware&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt; Fusion.app/Contents/Library/vmnet-cli --stop
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt;  /Applications/VMware&lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt; Fusion.app/Contents/Library/vmnet-cli --status&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Mac" scheme="https://www.xiaosige.com/categories/Mac/"/>
    
    
    <category term="VM" scheme="https://www.xiaosige.com/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>Linux 解决开机启动时的 systemd-modules-load.service 失败的问题</title>
    <link href="https://www.xiaosige.com/post/f25aacc.html"/>
    <id>https://www.xiaosige.com/post/f25aacc.html</id>
    <published>2022-04-07T04:50:34.000Z</published>
    <updated>2022-04-07T05:38:53.917Z</updated>
    
    
    <summary type="html">&lt;p&gt;  !解决开机启动时的systemd-modules-load.service失败的问题&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://www.xiaosige.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://www.xiaosige.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【Docker】之安装Redis6并且配置redis.conf</title>
    <link href="https://www.xiaosige.com/post/63ae3ee4.html"/>
    <id>https://www.xiaosige.com/post/63ae3ee4.html</id>
    <published>2022-03-30T16:26:15.000Z</published>
    <updated>2022-05-09T06:46:42.618Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;安装方式一&quot;&gt;&lt;a href=&quot;#安装方式一&quot; class=&quot;headerlink&quot; title=&quot;安装方式一&quot;&gt;&lt;/a&gt;安装方式一&lt;/h3&gt;&lt;h4 id=&quot;拉取Docker的Redis镜像&quot;&gt;&lt;a href=&quot;#拉取Docker的Redis镜像&quot; class=&quot;headerlink&quot; title=&quot;拉取Docker的Redis镜像&quot;&gt;&lt;/a&gt;拉取Docker的Redis镜像&lt;/h4&gt;&lt;pre class=&quot;line-numbers language-docker&quot; data-language=&quot;docker&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;docker pull redis:6.2.6&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Redis" scheme="https://www.xiaosige.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Docker 启动 WARNING：IPv4 forwarding is disabled. Networking will not work.</title>
    <link href="https://www.xiaosige.com/post/f745277d.html"/>
    <id>https://www.xiaosige.com/post/f745277d.html</id>
    <published>2022-03-30T14:58:23.000Z</published>
    <updated>2022-03-30T15:07:24.871Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;  Centos 7 docker 启动了一个web服务 但是启动时 报：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;WARNING: IPv4 forwarding is disabled. Networking will not work.&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux编译部署LNMP环境</title>
    <link href="https://www.xiaosige.com/post/7eb6696d.html"/>
    <id>https://www.xiaosige.com/post/7eb6696d.html</id>
    <published>2022-02-12T15:25:33.000Z</published>
    <updated>2022-04-07T05:09:22.834Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;  Lnmp架构&lt;br&gt;  Lnmp(web应用软件组合)&lt;br&gt;  Linux+Nginx+Mysql/MariaDB+Perl/PHP/Python一组常用来搭建动态网站或者服务器的开源软件，本身都是各自独立的程序，但是因为常被放在一起使用，拥有了越来越高的兼容度，共同组成了一个强大的Web应用程序平台。&lt;/p&gt;
&lt;p&gt;  LAMP的架构以及通信过程&lt;br&gt;  Lnmp是一个cs架构的平台（client/server架构， 即客户端/服务器架构)，web客户端基于TCP/IP通过http协议发起传送这个请求可能是动态的也可能是静态的，所有的服务器通过发起请求的后缀来判断，如果是静态的就由web服务器自己处理，然后将资源发给客户端。如果请求是动态的这时web服务器会通过FSATCGI协议发给php，通过php模块去MySQL拿数据在通过Nginx交给客户端。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://www.xiaosige.com/categories/Linux/"/>
    
    
    <category term="LNMP" scheme="https://www.xiaosige.com/tags/LNMP/"/>
    
  </entry>
  
  <entry>
    <title>【Docker】之安装MongoDB</title>
    <link href="https://www.xiaosige.com/post/a639ff5d.html"/>
    <id>https://www.xiaosige.com/post/a639ff5d.html</id>
    <published>2022-02-11T09:05:16.000Z</published>
    <updated>2022-05-09T06:46:42.596Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;安装mongodb&quot;&gt;&lt;a href=&quot;#安装mongodb&quot; class=&quot;headerlink&quot; title=&quot;安装mongodb&quot;&gt;&lt;/a&gt;安装mongodb&lt;/h3&gt;&lt;h4 id=&quot;获取MongoDB镜像&quot;&gt;&lt;a href=&quot;#获取MongoDB镜像&quot; class=&quot;headerlink&quot; title=&quot;获取MongoDB镜像&quot;&gt;&lt;/a&gt;获取MongoDB镜像&lt;/h4&gt;&lt;pre class=&quot;line-numbers language-docker&quot; data-language=&quot;docker&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;docker pull mongo:5.0.6&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Mongo" scheme="https://www.xiaosige.com/tags/Mongo/"/>
    
  </entry>
  
  <entry>
    <title>解决Docker容器内无法解析DNS的问题</title>
    <link href="https://www.xiaosige.com/post/3458217c.html"/>
    <id>https://www.xiaosige.com/post/3458217c.html</id>
    <published>2021-12-08T15:30:05.000Z</published>
    <updated>2022-04-12T15:31:12.539Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;  最近Docker上重装Nexus3，&lt;code&gt;一直报错 UnknownHostException: rhc.sonatype.com &lt;/code&gt; (在另一个场景中报 NoRouteToHostException: No route to host )&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Nexus" scheme="https://www.xiaosige.com/tags/Nexus/"/>
    
  </entry>
  
  <entry>
    <title>Centos7/8 firewall 和 docker 冲突解决</title>
    <link href="https://www.xiaosige.com/post/76a6f1b6.html"/>
    <id>https://www.xiaosige.com/post/76a6f1b6.html</id>
    <published>2021-12-07T18:30:52.000Z</published>
    <updated>2021-12-07T19:03:03.072Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;div class=&quot;note success no-icon&quot;&gt;&lt;p&gt;  centos7/8 自带防火墙是firewalld。firewall的底层是使用iptables进行数据过滤，建立在iptables之上，这可能会与 Docker 产生冲突。当 firewalld 启动或者重启的时候，将会从 iptables 中移除 DOCKER 的规则，从而影响了 Docker 的正常工作。当你使用的是 Systemd 的时候， firewalld 会在 Docker 之前启动，但是如果你在 Docker 启动之后再启动 或者重启 firewalld ，你就需要重启 Docker 进程了。&lt;/p&gt;
&lt;/div&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Dockerfile构建基础镜像为alpine的jdk1.8镜像</title>
    <link href="https://www.xiaosige.com/post/a90d146c.html"/>
    <id>https://www.xiaosige.com/post/a90d146c.html</id>
    <published>2021-10-31T16:41:08.000Z</published>
    <updated>2022-04-09T09:45:50.767Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;新建dockerfile目录&quot;&gt;&lt;a href=&quot;#新建dockerfile目录&quot; class=&quot;headerlink&quot; title=&quot;新建dockerfile目录&quot;&gt;&lt;/a&gt;新建&lt;code&gt;dockerfile&lt;/code&gt;目录&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; /opt/mydockerfile&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Nexus搭建Docker私有仓库</title>
    <link href="https://www.xiaosige.com/post/1ed6a709.html"/>
    <id>https://www.xiaosige.com/post/1ed6a709.html</id>
    <published>2021-10-30T16:19:29.000Z</published>
    <updated>2022-02-10T17:56:20.536Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;  Nexus3是Sonatype提供的仓库管理平台，Nuexus Repository OSS3能够支持Maven、npm、Docker、YUM、Helm等格式数据的存储和发布；并且能够与Jekins、SonaQube和Eclipse等工具进行集成。Nexus3支持作为宿主和代理存储库的Docker存储库，可以直接将这些存储库暴露给客户端工具；也可以以存储库组的方式暴露给客户端工具，存储库组是合并了多个存储库的内容的存储库，能够通过一个URL将多个存储库暴露给客户端工具，从而便于用户的使用。通过nexus3自建能够有效减少访问获取镜像的时间和对带宽使用，并能够通过自有的镜像仓库共享企业自己的镜像。在本文中，采用Docker方式安装部署Nexus3。&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Nexus" scheme="https://www.xiaosige.com/tags/Nexus/"/>
    
  </entry>
  
  <entry>
    <title>【Docker】之安装 Maven私服 Nexus3</title>
    <link href="https://www.xiaosige.com/post/a6836d41.html"/>
    <id>https://www.xiaosige.com/post/a6836d41.html</id>
    <published>2021-06-22T16:48:12.000Z</published>
    <updated>2022-05-09T06:46:42.588Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;  Nexus 是Maven仓库管理器，如果你使用Maven，你可以从Maven中央仓库 下载所需要的构件（artifact），但这通常不是一个好的做法，你应该在本地架设一个Maven仓库服务器，在代理远程仓库的同时维护本地仓库，以节省带宽和时间，Nexus就可以满足这样的需要。此外，他还提供了强大的仓库管理功能，构件搜索功能，它基于REST，友好的UI是一个extjs的REST客户端，它占用较少的内存，基于简单文件系统而非数据库。这些优点使其日趋成为最流行的Maven仓库管理器。除此之外，Nexus还可以管理Docker镜像。&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://www.xiaosige.com/categories/Docker/"/>
    
    
    <category term="Nexus" scheme="https://www.xiaosige.com/tags/Nexus/"/>
    
  </entry>
  
  <entry>
    <title>Linux 字符颜色输出</title>
    <link href="https://www.xiaosige.com/post/120400e.html"/>
    <id>https://www.xiaosige.com/post/120400e.html</id>
    <published>2021-06-17T18:06:32.000Z</published>
    <updated>2021-06-17T18:16:50.847Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;  没啥的，搞点颜色看看。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://www.xiaosige.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://www.xiaosige.com/tags/Linux/"/>
    
  </entry>
  
</feed>
