<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo之搭建个人博客</title>
    <url>/post/dfea82e5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>  &emsp;&emsp;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。hexo 博客在 Linux 系统中搭建是非常简单的，在 WIN 系统中比较复杂，我们接触的手机📱永远要比电脑的时间要多那么我们可以在安卓手机上使用 termux 来搭建，这样随时随地都可以写做和发表文章。</p>
  <a id="more"></a> 

<h2 id="前期工作"><a href="#前期工作" class="headerlink" title="前期工作"></a>前期工作</h2><pre><code>注册 github 账号
添加 username.github.io 仓库
本地搭建 git 环境
配置 ssh
本地连接 github


安装 Node.js
安装 git</code></pre>
<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure>

<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>&emsp;&emsp; 安装完成之后，新建一个文件夹(例如: blog)，执行以下命令进行初始化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">或</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>

<h4 id="进入文件夹"><a href="#进入文件夹" class="headerlink" title="进入文件夹"></a>进入文件夹</h4><p>&emsp;&emsp; 进入 blog 文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure>

<h4 id="安装核心组件"><a href="#安装核心组件" class="headerlink" title="安装核心组件"></a>安装核心组件</h4><p>&emsp;&emsp; 安装 npm 核心组件支持</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 新建完成后，文件夹目录<br> <div class="note primary no-icon"><p>_config.yml 文件是网站的配置文件，可以在其中配置网站的大部分参数。<br>package.json 文件是应用程序的信息。<br>source 是资源文件夹，是用来存放 xxxu 用户资源的地方。<br>themes 是主题文件夹，Hexo 会根据主题来生成不同的静态页面。<br>scaffolds 是模板件夹，当新建文章的时候，Hexo 会根据模板来建立文件。</p>
</div></p>
<h3 id="安装-NexT-主题"><a href="#安装-NexT-主题" class="headerlink" title="安装 NexT 主题"></a>安装 NexT 主题</h3><h4 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h4><p>&emsp;&emsp; 下载主题，<a href="https://hexo.io/">Hexo</a> 的主题非常丰富可以去<a href="https://hexo.io/themes/">官方主题</a>下载；下面有演示我使用的主题 <a href="https://github.com/theme-next/hexo-theme-next">next</a></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/theme-next/</span>hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure>


<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>&emsp;&emsp; 在站点配置文件_config.yml 开启 next 主题，修改<code>theme</code>属性，注意 <code>theme: </code>后要加<code>空格</code>，具体的站点和主题信息配置请自行去 <a href="https://hexo.io/zh-cn/">hexo</a> 和 <a href="http://theme-next.iissnan.com/">next 主题</a>文档查看</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">theme: <span class="keyword">next</span></span><br></pre></td></tr></table></figure>


<h3 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h3><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo g <span class="comment">#生成静态页面，生成的内容在public文件夹下</span></span><br><span class="line"><span class="variable">$ </span>hexo s <span class="comment">#启动本地服务，进行文章预览调试。hexo s --debug 命令可以用来调试</span></span><br></pre></td></tr></table></figure>


<h3 id="配置-ssh-密钥及-github-或者-gitee-部署"><a href="#配置-ssh-密钥及-github-或者-gitee-部署" class="headerlink" title="配置 ssh 密钥及 github 或者 gitee 部署"></a>配置 ssh 密钥及 github 或者 gitee 部署</h3><p>&emsp;&emsp; 配置 git</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>--global user.name <span class="string">&quot;your name&quot;</span></span><br><span class="line">$ git<span class="built_in"> config </span>--global user.email <span class="string">&quot;email@email.com&quot;</span></span><br><span class="line">省略。。。</span><br></pre></td></tr></table></figure>


<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>&emsp;&emsp; <strong><mark class="label danger">1，</mark></strong> 安装 hexo-deployer-git 插件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure>


<p>&emsp;&emsp; <strong><mark class="label danger">2，</mark></strong> 打开 Hexo 主文件夹下的_config.yml，设置其中的 deploy 参数</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">    <span class="attribute">type</span>: git </span><br><span class="line">    <span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:stiverick610/stiverick610.github.io.git</span><br><span class="line">    <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; <strong><mark class="label danger">3，</mark></strong> 安装完成插件之后，使用以下命令部署</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo d -g <span class="comment">#在部署前先生成</span></span><br></pre></td></tr></table></figure>


<h3 id="Next-常用命令"><a href="#Next-常用命令" class="headerlink" title="Next 常用命令"></a>Next 常用命令</h3><p>&emsp;&emsp; 常用命令</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo clean     <span class="comment"># 清理之前生成的内容，即public文件</span></span><br><span class="line"><span class="variable">$ </span>hexo g         <span class="comment"># 生成静态文件</span></span><br><span class="line"><span class="variable">$ </span>hexo d         <span class="comment"># 部署</span></span><br><span class="line"><span class="variable">$ </span>hexo s         <span class="comment"># 启动本地服务，可以通过http://localhost:4000查看</span></span><br><span class="line"><span class="variable">$ </span>hexo s --debug <span class="comment"># 使用debug模式启动服务</span></span><br></pre></td></tr></table></figure>

<h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>&emsp;&emsp; <strong><mark class="label danger">1，</mark></strong> 在 github 新建一个叫 blog 的仓库。</p>
<p>&emsp;&emsp; <strong><mark class="label danger">2，</mark></strong> 在本地博客文件夹创建 git 版本库，如果没有安装 git 必须先安装 git。</p>
<p>&emsp;&emsp; <strong><mark class="label danger">3，</mark></strong> 进入需要备份 blog 目录。</p>
<p>&emsp;&emsp; <strong><mark class="label danger">4，</mark></strong> 创建版本库。</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git init</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; 这个时候 blog 的版本库已经创建好了。<br>&emsp;&emsp; 验证是否成功，如果有一个.git 的隐藏文件就说明创建成功。<br>&emsp;&emsp; 查看隐藏文件</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ls -a</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; <strong><mark class="label danger">5，</mark></strong> 连接上面 github 创建的仓库</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">git</span> remote <span class="keyword">add</span> origin git<span class="comment">@github.com:you name/blog.git</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; <strong><mark class="label danger">6，</mark></strong> 添加备份文件 source/themes/ _config.yml scaffolds/package.json .gitignore 这些文件需要备份</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">git add <span class="keyword">source</span><span class="regexp">/ themes/</span> _config.yml scaffolds/ <span class="keyword">package</span>.json .gitignore</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 或</p>
<p>&emsp;&emsp; 修改.gitignore文件（如果没有请手动创建一个），在里面加入<code>*.log</code> 和 <code>public/</code> 以及<code>.deploy*/</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi .gitignore</span><br><span class="line"></span><br><span class="line">   .DS_Store</span><br><span class="line">   themes/</span><br><span class="line">   db.json</span><br><span class="line">   *.<span class="built_in">log</span></span><br><span class="line">   node_modules/</span><br><span class="line">   public/</span><br><span class="line">   .deploy*/</span><br><span class="line">   .idea/</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; <strong><mark class="label danger">7，</mark></strong> 注释备份内容，明确的注释可以回退版本</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git</span> commit -m <span class="string">&quot;博客备份&quot;</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; <strong><mark class="label danger">8，</mark></strong> 第一次强制上传文件到 github 仓库</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">push</span> -u <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 这样博客就备份成功了，之后备份直接前面 6 、7 步，第 8 部直接使用下面命令就可以了</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; <strong><mark class="label danger">9，</mark></strong> 安装<code>shelljs</code>模块,实现自动备份。</p>
<p>&emsp;&emsp; 要实现这个自动备份功能，需要依赖NodeJs的一个<code>shelljs</code>模块,该模块重新包装了<code>child_process</code>,调用系统命令更加的方便。（其实就是因为博主懒( ╯▽╰)）该模块需要安装后使用。</p>
<p>&emsp;&emsp; 在命令中键入以下命令，完成<code>shelljs</code>模块的安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save shelljs</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 编写自动备份脚本</p>
<p>&emsp;&emsp; 待到模块安装完成，在<code>Hexo根目录</code>的<code>scripts</code>文件夹下新建一个<code>js文件</code>，文件名<code>随意取</code>。</p>
<p>&emsp;&emsp; 如果没有<code>scripts</code>目录，请新建一个。</p>
<p>&emsp;&emsp; 然后在脚本中，写入以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">require(<span class="string">&#x27;shelljs/global&#x27;</span>);</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">	hexo.on(<span class="string">&#x27;deployAfter&#x27;</span>, <span class="function"><span class="title">function</span></span>() &#123;//当deploy完成后执行备份</span><br><span class="line">		run();</span><br><span class="line">	&#125;);</span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line">	console.log(<span class="string">&quot;产生了一个错误&lt;(￣3￣)&gt; !，错误详情为：&quot;</span> + e.toString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">run</span></span>() &#123;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">which</span>(<span class="string">&#x27;git&#x27;</span>)) &#123;</span><br><span class="line">		<span class="built_in">echo</span>(<span class="string">&#x27;Sorry, this script requires git&#x27;</span>);</span><br><span class="line">		<span class="built_in">exit</span>(1);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">echo</span>(<span class="string">&quot;======================Auto Backup Begin===========================&quot;</span>);</span><br><span class="line">		<span class="built_in">cd</span>(<span class="string">&#x27;~/git/blog&#x27;</span>);    //此处修改为Hexo根目录路径</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">exec</span>(<span class="string">&#x27;git add --all&#x27;</span>).code !== 0) &#123;</span><br><span class="line">			<span class="built_in">echo</span>(<span class="string">&#x27;Error: Git add failed&#x27;</span>);</span><br><span class="line">			<span class="built_in">exit</span>(1);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">exec</span>(<span class="string">&#x27;git commit -am &quot;Form auto backup script\&#x27;</span>s commit<span class="string">&quot;&#x27;).code !== 0) &#123;</span></span><br><span class="line"><span class="string">			echo(&#x27;Error: Git commit failed&#x27;);</span></span><br><span class="line"><span class="string">			exit(1);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		if (exec(&#x27;git push origin master&#x27;).code !== 0) &#123;</span></span><br><span class="line"><span class="string">			echo(&#x27;Error: Git push failed&#x27;);</span></span><br><span class="line"><span class="string">			exit(1);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		echo(&quot;</span>==================Auto Backup Complete============================<span class="string">&quot;)</span></span><br><span class="line"><span class="string">	&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>其中，需要修改第<code>17</code>行的<code>~/git/blog</code>路径为Hexo的根目录路径。（脚本中的路径为博主的Hexo路径）</li>
<li>如果你的Git远程仓库名称不为<code>origin</code>的话，还需要修改第<code>28</code>行执行的push命令，修改成自己的远程仓库名和相应的分支名。</li>
</ul>
<p>&emsp;&emsp; 保存脚本并退出，然后执行hexo deploy命令，将会得到类似以下结果:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend <span class="built_in">dirs</span>...</span><br><span class="line">[master 2fd18b4] Site updated: 2020-03-02 13:46:34</span><br><span class="line"> 4 files changed, 42 insertions(+), 4 deletions(-)</span><br><span class="line">枚举对象: 19, 完成.</span><br><span class="line">对象计数中: 100% (19/19), 完成.</span><br><span class="line">使用 8 个线程进行压缩</span><br><span class="line">压缩对象中: 100% (8/8), 完成.</span><br><span class="line">写入对象中: 100% (10/10), 4.25 KiB | 1.06 MiB/s, 完成.</span><br><span class="line">总共 10 （差异 7），复用 0 （差异 0）</span><br><span class="line">remote: Resolving deltas: 100% (7/7), completed with 7 <span class="built_in">local</span> objects.</span><br><span class="line">To github.com:leeze2012/leeze2012.github.io.git</span><br><span class="line">   42f1ef1..2fd18b4  HEAD -&gt; master</span><br><span class="line">分支 <span class="string">&#x27;master&#x27;</span> 设置为跟踪来自 <span class="string">&#x27;git@github.com:leeze2012/leeze2012.github.io.git&#x27;</span> 的远程分支 <span class="string">&#x27;master&#x27;</span>。</span><br><span class="line">INFO  Deploy <span class="keyword">done</span>: git</span><br><span class="line">INFO  Deploying: baidu_url_submitter</span><br><span class="line">INFO  Submitting urls</span><br><span class="line">https://blog.xiaosige.com/post/c1dab809.html</span><br><span class="line">https://blog.xiaosige.com/post/73879c7f.html</span><br><span class="line">&#123;<span class="string">&quot;remain&quot;</span>:99984,<span class="string">&quot;success&quot;</span>:2&#125;</span><br><span class="line">INFO  Deploy <span class="keyword">done</span>: baidu_url_submitter</span><br><span class="line">======================Auto Backup Begin===========================</span><br><span class="line">[master af0e0a8] Form auto backup script<span class="string">&#x27;s commit</span></span><br><span class="line"><span class="string"> 2 files changed, 75 insertions(+)</span></span><br><span class="line"><span class="string"> create mode 100644 scripts/.bc.js.swo</span></span><br><span class="line"><span class="string">To github.com:leeze2012/blog.git</span></span><br><span class="line"><span class="string">   49dd62c..af0e0a8  master -&gt; master</span></span><br><span class="line"><span class="string">==================Auto Backup Complete============================</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 这样子，每次更新博文并<code>deploy</code>到服务器上之后，备份就自动启动并完成备份啦</p>
<h2 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h2><p>&emsp;&emsp; git clone 自己备份的博客源代码克隆备份的 bolg 源文件地址是你自己的地址这里不做演示</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">git clone <span class="tag">&lt;<span class="name">版本库的网址</span>&gt;</span> <span class="tag">&lt;<span class="name">本地目录名</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">cd</span> <span class="string">bolg</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">init</span></span><br><span class="line"><span class="attr">...</span></span><br><span class="line"><span class="attr">npm</span> <span class="string">install</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; 安装相应插件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-searchdb <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> valine <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-symbols-<span class="keyword">count</span>-<span class="built_in">time</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-tag-aplayer <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-tag-dplayer <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-baidu-<span class="keyword">url</span>-submit <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-abbrlink <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-blog-<span class="keyword">encrypt</span> <span class="comment">--save</span></span><br><span class="line"></span><br><span class="line">npm <span class="keyword">uninstall</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">index</span>-pin-top <span class="comment">--save</span></span><br><span class="line"></span><br><span class="line">npm <span class="keyword">install</span> hexo-asset-image <span class="comment">--save  (推荐这个) </span></span><br><span class="line"></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; <strong><code>注：</code></strong> ，<code>hexo-asset-image</code>参考：<a href="/post/172c7c2b.html" title="hexo之图片问题">hexo之图片问题</a></p>
<p>&emsp;&emsp; <strong><code>一些东西摘自网上，未亲自验证。</code></strong></p>
<br>

<blockquote>
<p>其他博客<br><a href="https://www.simon96.online/">遇见西门</a><br><a href="https://zhousiwei.gitee.io/">試毅-思伟</a><br><a href="https://blog.dlzhang.com/">班班碎碎念</a><br><a href="https://me.idealli.com/">小红鸡</a></p>
</blockquote>
<hr>

<blockquote>
<p>其他相关链接<br><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/">【持续更新】最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析</a><br><a href="https://github.com/coneycode/hexo-git-backup">hexo-git-backup</a><br><a href="https://www.hojun.cn/2018/01/25/Hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%E2%80%94%E5%A6%88%E5%A6%88%E5%86%8D%E4%B9%9F%E4%B8%8D%E7%94%A8%E6%8B%85%E5%BF%83%E4%BD%A0%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2/">Hexo博客备份</a><br><a href="https://notes.doublemine.me/2015-07-06-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2%E6%BA%90%E6%96%87%E4%BB%B6.html">Doublemine</a><br><a href="https://www.dazhuanlan.com/2019/10/25/5db2632c401b8/">大专栏</a></p>
</blockquote>
]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Jira8.x版本安装与破解</title>
    <url>/post/afb30e04.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp; JIRA 是 Atlassian 公司出品的项目与事务跟踪工具，被广泛应用于缺陷跟踪、客户服务、需求收集、流程审批、任务跟踪、项目跟踪和敏捷管理等工作领域。</p>
<a id="more"></a>

<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol>
<li><p>Jdk1.8以上</p>
</li>
<li><p>Mysql驱动：<a href="https://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.49/mysql-connector-java-5.1.49.jar">mysql-connector-java-5.1.49.jar</a> , <a href="https://repo1.maven.org/maven2/mysql/mysql-connector-java/">其他</a></p>
</li>
<li><p>JIRA安装包：<a href="https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-8.5.7-x64.bin">atlassian-jira-software-8.5.7-x64.bin</a> , <a href="https://www.atlassian.com/zh/software/jira/download/data-center">其他</a></p>
</li>
<li><p>破解包：<a href="https://gitee.com/pengzhile/atlassian-agent/attach_files/283101/download">atlassian-agent-v1.2.3</a>  , <a href="https://gitee.com/pengzhile/atlassian-agent/releases">其他</a>   </p>
</li>
<li><p>机子分配的内存适当大些。</p>
</li>
</ol>
<h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>&emsp;&emsp; <strong><mark class="label danger">1，</mark></strong> 先把上面下载的软件包放到同一目录下，比如<code>/tmp</code>目录下，然后输入下面的命令进行安装：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> <span class="selector-tag">atlassian-agent-v1</span><span class="selector-class">.2</span><span class="selector-class">.3</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./atlassian-jira-software-8.5.7-x64.bin <span class="comment"># 下面执行的是默认的</span></span><br></pre></td></tr></table></figure>
<img src="/post/afb30e04/jira-001.png" class title="JIRA安装图">

<p>&emsp;&emsp;安装路径：   <code>/opt/atlassian/jira</code><br>&emsp;&emsp;数据存放路径：<code>/var/atlassian/application-data/jira</code><br>&emsp;&emsp;HTTP Port: <code>8080</code><br>&emsp;&emsp;RMI Port:  <code>8005</code></p>
<p>&emsp;&emsp; <strong><mark class="label danger">2，</mark></strong> 复制相关包(驱动包，破解包)：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">cp atlassian-agent-v1.<span class="number">2.3</span>/atlassian-agent.jar /home/jira1/</span><br><span class="line">cp atlassian-agent-v1.<span class="number">2.3</span>/atlassian-agent.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/<span class="class"><span class="keyword">lib</span>/</span></span><br><span class="line">cp mysql-connector-java-<span class="number">5.1</span>.<span class="number">49</span>.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/<span class="class"><span class="keyword">lib</span>/</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; <strong><mark class="label danger">3，</mark></strong> 更改相关配置</p>
<p>&emsp;&emsp; 破解：<code>/opt/atlassian/jira/bin/setenv.sh</code></p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">vi /opt/atlassian/jira/bin/setenv.sh</span><br><span class="line"><span class="deletion">- export JAVA_OPTS # 70行的(其实，不用删的，嘿嘿，我是为了突出修改)</span></span><br><span class="line"><span class="addition">+ export JAVA_OPTS=&quot;-javaagent:/home/jira1/atlassian-agent.jar $&#123;JAVA_OPTS&#125;&quot;</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; 个人习惯，把Java改了,默认<code>OpenJDK</code>,改成<code>Java(TM) SE </code></p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># DO NOT remove the following line</span><br><span class="line"><span class="addition">+ JAVA_HOME=&quot;/usr/java/jdk1.8.0_261-amd64&quot;; export JAVA_HOME</span></span><br><span class="line"><span class="deletion">- JAVA_HOME=&quot;/opt/atlassian/jira/jre&quot;; export JAVA_HOME</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; 更改端口（默认8080）：<br>&emsp;&emsp; <code>lsof -i:8080</code>，<code>ss -tanlp</code> , 如果被占用</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vi <span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>conf/server.xml</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; 将 <strong><code>Server port（8005）</code></strong> and the <strong><code>Connector port （8080）</code></strong> 改了。</p>
<p>&emsp;&emsp; 配置jira_home（默认不做更改）</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vi <span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>atlassian-jira<span class="regexp">/WEB-INF/</span>classes/jira-application.properties</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; <code>（路径需根据实际情况配置，而且需要注意此路径配置不能和安装软件同一个目录，否则报错）</code></p>
<p>&emsp;&emsp; <strong><mark class="label danger">4，</mark></strong> 启动：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>bin/start-jira.sh</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; 日志：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">tail -f -n <span class="number">500</span> <span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>logs/catalina.out</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; <strong><mark class="label danger">5，</mark></strong> 页面配置</p>
<p>&emsp;&emsp; 访问地址：<a href="http://10.211.55.61:8080/">http://10.211.55.61:8080</a>,</p>
<img src="/post/afb30e04/jira-002.png" class title="中文">
<img src="/post/afb30e04/jira-003.png" class title="自定义">

<p>&emsp;&emsp; 创建数据库：</p>
<p>&emsp;&emsp; 如果是选择Mysql，建议使用Mysql5.6或者Mysql5.7，这样不容易出错。另外在创建数据库时建议选择UTF8编码，目前不支持UTF8MB4。<br>&emsp;&emsp; <a href="https://confluence.atlassian.com/adminjiraserver085/connecting-jira-applications-to-mysql-5-7-981154582.html">参考</a></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> jiradb <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; 如果，想添加DB用户的话：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> jira;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;jira&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identifiedby <span class="string">&#x27;jira&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span><span class="string">&#x27;jira&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 配置DB数据，并测试，如下图：</p>
<img src="/post/afb30e04/jira-004.png" class title="DB配置">
<p>&emsp;&emsp; 测试OK，点击<code>下一步</code>:</p>
<img src="/post/afb30e04/jira-005.png" class title="DB配置">
<p>&emsp;&emsp; 此时，发现服务停止，<code>tail -f -n 500 /opt/atlassian/jira/logs/catalina.out</code>,后台报错：</p>
<blockquote>
<p>&emsp;&emsp; WARN: Establishing SSL connection without server’s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn’t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to ‘false’. You need either to explicitly disable SSL by setting <code>useSSL=false</code>, or set useSSL=true and provide truststore for server certificate</p>
</blockquote>
<p>&emsp;&emsp; 查看<code>/var/atlassian/application-data/jira</code>,新生成<code>dbconfig.xml</code>,<code>原先没有的</code></p>
<p>&emsp;&emsp; 解决：<a href="https://community.atlassian.com/t5/Jira-Core-questions/JIRA-and-MySql-5-7-with-SSL/qaq-p/1251720">参考1</a> ， <a href="https://community.atlassian.com/t5/Jira-questions/useSSL-false-with-Jira-ServiceDesk/qaq-p/1088212">参考2</a> </p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vi <span class="regexp">/var/</span>atlassian<span class="regexp">/application-data/</span>jira/dbconfig.xml</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp; DB的URL末尾加上<code>&amp;amp;useSSL=false</code>，我们习惯加<code>&amp;</code>,但是这里却是<code>&amp;amp;</code>。</p>
<img src="/post/afb30e04/jira-006.png" class title="SSL">

<p>&emsp;&emsp; 重新启动：<code>/opt/atlassian/jira/bin/start-jira.sh</code></p>
<img src="/post/afb30e04/jira-007.png" class title="Title+URL">

<img src="/post/afb30e04/jira-008.png" class title="KEY">

<p>&emsp;&emsp; 根据Server ID 生成license Key：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>jre<span class="regexp">/bin/</span>java -jar <span class="regexp">/home/</span>jira1<span class="regexp">/atlassian-agent.jar -p jira -m jira@jira.com -n jira -o https:/</span><span class="regexp">/jira.com -s BFZ0-PD41-I9AX-YXDP</span></span><br></pre></td></tr></table></figure>
<br>
<div class="note default no-icon"><p>-p jira(安装的是jira产品)，具体的可以根据-p进行参考<br>-m <a href="mailto:&#106;&#105;&#x72;&#x61;&#x40;&#106;&#x69;&#x72;&#97;&#46;&#99;&#x6f;&#x6d;">&#106;&#105;&#x72;&#x61;&#x40;&#106;&#x69;&#x72;&#97;&#46;&#99;&#x6f;&#x6d;</a>(随意写)<br>-n jira(随意写)<br>-o <a href="https://jira.com/">https://jira.com</a> (随意写)<br>-s BFZ0-PD41-I9AX-YXDP (即jira显示的服务器ID)</p>
</div>
<br>

<img src="/post/afb30e04/jira-009.png" class title="KEY">
<p>&emsp;&emsp; 复制生成的KEY，点击<code>Next</code>：</p>
<img src="/post/afb30e04/jira-010.png" class title="KEY">
<p>&emsp;&emsp; 创建账户：</p>
<img src="/post/afb30e04/jira-011.png" class title="Admin">
<p>&emsp;&emsp; Email配置，跳过</p>
<img src="/post/afb30e04/jira-012.png" class title="Email">

<p>。。。。。。。。。</p>
<p>&emsp;&emsp; <strong><mark class="label danger">6，</mark></strong> 如果页面配置失败或者想要重新配置实例，可以把原来的实例删除：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">rm <span class="regexp">/var/</span>atlassian<span class="regexp">/application-data/</span>jira/* -rf</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 然后再重新进行Web页面配置。</p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>&emsp;&emsp; 1，虚拟机装的，原先内存2G，老报memory问题，关闭服务</p>
<div class="note danger no-icon"><p>error=’Cannot allocate memory’ </p>
</div>

<p>&emsp;&emsp; 把本地内存最好调大点,我任性给了8G，哈哈。。。</p>
<img src="/post/afb30e04/jira-013.png" class title="Email">


<p>&emsp;&emsp; <code>vi /opt/atlassian/jira/bin/setenv.sh</code></p>
<blockquote>
<p>JVM_MINIMUM_MEMORY=”768m”<br>  JVM_MAXIMUM_MEMORY=”4096m”</p>
</blockquote>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h3><p>&emsp;&emsp; 常用的几个地址路径：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">DB设置：`<span class="regexp">/var/</span>atlassian<span class="regexp">/application-data/</span>jira/dbconfig.xml`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">启动：<span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>bin/start-jira.sh</span><br><span class="line"></span><br><span class="line">日志：tail -f -n <span class="number">500</span> <span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>logs/catalina.out</span><br><span class="line"></span><br><span class="line"><span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>atlassian-jira<span class="regexp">/WEB-INF/</span>classes/database-defaults</span><br><span class="line"></span><br><span class="line"><span class="regexp">/var/</span>atlassian<span class="regexp">/application-data/</span>jira</span><br><span class="line"></span><br><span class="line">vi <span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span>conf/server.xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="regexp">/opt/</span>atlassian<span class="regexp">/jira/</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Jira</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac正确的安装和使用nvm</title>
    <url>/post/c0a81ac4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h4 id="了解nvm"><a href="#了解nvm" class="headerlink" title="了解nvm"></a>了解nvm</h4><p>&emsp;&emsp;目前主流的node版本管理工具有两种，nvm和n。两者差异挺大的。</p>
<p>&emsp;&emsp;总的来说，nvm有点类似于 Python 的 virtualenv 或者 Ruby 的 rvm，每个node版本的模块都会被安装在各自版本的沙箱里面（因此切换版本后模块需重新安装），因此考虑到需要时常对node版本进行切换测试兼容性和一些模块对node版本的限制，我选择了使用nvm作为管理工具，下面就来说说nvm的安装和使用过程。</p>
<a id="more"></a>


<h4 id="nvm、node、npm之间的关系和区别"><a href="#nvm、node、npm之间的关系和区别" class="headerlink" title="nvm、node、npm之间的关系和区别"></a>nvm、node、npm之间的关系和区别</h4><h5 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h5><p>  &emsp;&emsp; <strong>nvm：nodejs 版本管理工具。</strong></p>
<p>  &emsp;&emsp;也就是说：一个 nvm 可以管理很多 node 版本和 npm 版本。</p>
<p>  &emsp;&emsp;这个技术出现的原因， 是由于不同的项目node版本也不同，有的是5.0.1， 有的是6.3.2。 如果node出现版本不对，运行 某个应用时，很可能就会遇到各种莫名其妙的问题 。</p>
<p>  &emsp;&emsp; <strong>nodejs：在项目开发时的所需要的代码库</strong></p>
<p>  &emsp;&emsp; <strong>npm：nodejs 包管理工具。</strong></p>
<p>  &emsp;&emsp;在安装的 nodejs 的时候，npm 也会跟着一起安装，它是包管理工具。</p>
<p>  &emsp;&emsp;npm 管理 nodejs 中的第三方插件。他的作用与Ruby中的 bundler及Java中的maven相同，都是对第三方依赖进行管理的。</p>
<h5 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h5><p>   &emsp;&emsp;nvm 管理 nodejs 和 npm 的版本</p>
<p>   &emsp;&emsp;npm 可以管理 nodejs 的第三方插件</p>
   <img src="/post/c0a81ac4/nvmMac001.png" class title="nvm、node、npm关系图">



<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>&emsp;&emsp;这里主要介绍mac的安装(linux可以参照),windows系统的话可以参考<a href="https://cnodejs.org/topic/5338c5db7cbade005b023c98">windows</a></p>
<h4 id="不推荐的安装方法"><a href="#不推荐的安装方法" class="headerlink" title="不推荐的安装方法"></a>不推荐的安装方法</h4><p>&emsp;&emsp;一开始我是使用homebrew来安装的,安装命令如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;安装完后，为了让你可以直接在shell使用nvm指令，必须在你的<code> .bash_profile</code> 加入以下这行（习惯把设定放在.bashrc的人可以把以下的.bash_profile改成.bashrc）(注:如果没有这个文件,可以touch创建)</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">source <span class="constructor">$(<span class="params">brew</span> --<span class="params">prefix</span> <span class="params">nvm</span>)</span>/nvm.sh</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;或者直接输入以下这行来加入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;source <span class="subst">$(brew --prefix nvm)</span>/nvm.sh&quot;</span> &gt;&gt; .bash_profile</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;记得重新source你的 .bash_profile 来让设定生效</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>. ~<span class="regexp">/.bash_profile</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;OK，以上就完成了nvm的安裝。</p>
<p>&emsp;&emsp;我们来装一下 node v5.12.0</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nvm install <span class="number">5</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;安装成功后,使用nvm use 来切换版本</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm</span> use v<span class="number">5</span>.<span class="number">12</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;如，出现错误如下:</p>
 <div class="note danger no-icon"><p>nvm is not compatible with the npm config “prefix” option: currently set to “/Users/fabian/.nvm/versions/node/v0.12.7”<br>Run <code>nvm use --delete-prefix v4.6.2</code> to unset it.</p>
</div>

<p>&emsp;&emsp;所以只能安装提示,使用</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm</span> use --delete-prefix v<span class="number">4</span>.<span class="number">6</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;成功切换。</p>
<p>&emsp;&emsp;至于为什么用homebrew安装会出现上面的问题,可参考Github上的一个<a href="https://github.com/nvm-sh/nvm/issues/855">issue</a>。</p>
<p>&emsp;&emsp;查看<a href="https://github.com/nvm-sh/nvm">nvm文档</a>发现:文档中Installation 那一小节倒数第二行有一句Homebrew installation is not supported.，由此可见，没事儿还是要多看看文档。</p>
<h4 id="推荐的安装方法"><a href="#推荐的安装方法" class="headerlink" title="推荐的安装方法"></a>推荐的安装方法</h4><h5 id="卸载已安装到全局的-node-npm"><a href="#卸载已安装到全局的-node-npm" class="headerlink" title="卸载已安装到全局的 node/npm"></a><strong><em>卸载已安装到全局的 node/npm</em></strong></h5><p>&emsp;&emsp;如果之前是在官网下载的 node 安装包，运行后会自动安装在全局目录，其中</p>
<p>&emsp;&emsp;node 命令在 <code>/usr/local/bin/node</code> ，</p>
<p>&emsp;&emsp;npm 命令在全局 <code>node_modules</code> 目录中，具体路径为 <code>/usr/local/lib/node_modules/npm</code></p>
<p>&emsp;&emsp;安装 nvm 之后最好先删除下已安装的 node 和全局 node 模块：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">npm ls -g --depth=<span class="number">0</span> <span class="comment">#查看已经安装在全局的模块，以便删除这些全局模块后再按照不同的 node 版本重新进行全局安装</span></span><br><span class="line"></span><br><span class="line">sudo rm -rf <span class="regexp">/usr/</span>local<span class="regexp">/lib/</span>node_modules <span class="comment">#删除全局 node_modules 目录</span></span><br><span class="line">sudo rm <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>node <span class="comment">#删除 node</span></span><br><span class="line">cd  <span class="regexp">/usr/</span>local<span class="regexp">/bin &amp;&amp; ls -l | grep &quot;../</span>lib<span class="regexp">/node_modules/</span><span class="string">&quot; | awk &#x27;&#123;print $9&#125;&#x27;| xargs rm #删除全局 node 模块注册的软链</span></span><br></pre></td></tr></table></figure>

<h5 id="安装-nvm"><a href="#安装-nvm" class="headerlink" title="安装 nvm"></a><strong><em>安装 nvm</em></strong></h5><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">curl -o- https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/nvm-sh/</span>nvm<span class="regexp">/v0.35.3/i</span>nstall.sh | bash</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;<code>如果报错</code>，解决办法：通过修改<mark> hosts </mark>解决此问题。</p>
<p>&emsp;&emsp;查询真实IP，在 <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 查询 raw.githubusercontent.com 的真实IP。</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">#修改hosts</span><br><span class="line">sudo vim /etc/hosts</span><br><span class="line"></span><br><span class="line">#添加如下内容：</span><br><span class="line"><span class="number">199.232.28.133</span> raw.githubusercontent.com</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;安装完成后请重新打开终端环境，Mac 下推荐使用 oh-my-zsh 代替默认的 bash shell。 安装完成后,发现使用 <strong><mark class="label danger">nvm install stable 安装node速度很慢</mark></strong> ,原因嘛,大概大家都知道我大天朝的国情。 接下来介绍如何使用国内镜像快速安装node: 把环境变量 <code>NVM_NODEJS_ORG_MIRROR</code>, 那么我建议你加入到<code> .bash_profile</code> 文件中:</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># nvm</span></span><br><span class="line">export NVM_NODEJS_ORG_MIRROR=https:<span class="regexp">//</span>npm.taobao.org<span class="regexp">/mirrors/</span>node</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;然后你可以继续非常方便地安装各个版本的 node 了.</p>
<p><font color="LightCoral" size="4">查看</font><mark> node  </mark>版本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">nvm <span class="built_in">ls</span><span class="literal">-remote</span>     <span class="comment"># 远端版本</span></span><br><span class="line">nvm <span class="built_in">ls</span>            <span class="comment"># 本地已安装的版本</span></span><br></pre></td></tr></table></figure>


<p><font color="LightCoral" size="4">安装</font><mark> node </mark>版本</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm</span> install node                            # 安装最新版本</span><br><span class="line"><span class="attribute">nvm</span> install <span class="number">6</span>.<span class="number">14</span>.<span class="number">4</span> # or <span class="number">10</span>.<span class="number">10</span>.<span class="number">0</span>, <span class="number">8</span>.<span class="number">9</span>.<span class="number">1</span>, etc # 安装指定版本</span><br></pre></td></tr></table></figure>


<p><font color="LightCoral" size="4">使用</font><mark> node </mark>版本</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">nvm use <span class="keyword">node</span>    <span class="title"># 使用最新版本</span></span><br><span class="line"><span class="title">nvm</span> use <span class="number">12.13</span>.<span class="number">0</span> <span class="comment"># 使用指定版本</span></span><br></pre></td></tr></table></figure>

<p><font color="LightCoral" size="4">查看</font><mark> node  </mark>版本 <em><mark class="label warning">安装位置</mark></em></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm</span> which <span class="number">5</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>

<h5 id="使用-cnpm-加速-npm"><a href="#使用-cnpm-加速-npm" class="headerlink" title="使用 cnpm 加速 npm"></a><strong><em>使用 cnpm 加速 npm</em></strong></h5><p>&emsp;&emsp;同理 nvm , npm 默认是从国外的源获取和下载包信息, 不慢才奇怪. 可以通过简单的 —registry 参数, 使用国内的镜像 <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a> :</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ npm --registry=https:<span class="regexp">//</span>registry.npm.taobao.org install koa</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;于是屏幕又哗啦哗啦地一大片输出</p>
<div class="note default no-icon"><p>$ npm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a> install koa<br>npm http GET <a href="https://registry.npm.taobao.org/koa">https://registry.npm.taobao.org/koa</a><br>npm http 200 <a href="https://registry.npm.taobao.org/koa">https://registry.npm.taobao.org/koa</a><br>…<br>npm http 200 <a href="https://registry.npm.taobao.org/negotiator">https://registry.npm.taobao.org/negotiator</a><br>npm http 200 <a href="https://registry.npm.taobao.org/keygrip">https://registry.npm.taobao.org/keygrip</a><br>koa<a href="/user/0">@0</a>.5.2 node_modules/koa<br>├── koa-compose<a href="/user/2">@2</a>.2.0<br>├── statuses<a href="/user/1">@1</a>.0.2<br>├── finished<a href="/user/1">@1</a>.1.1<br>├── escape-html<a href="/user/1">@1</a>.0.1<br>├── only<a href="/user/0">@0</a>.0.2<br>├── debug<a href="/user/0">@0</a>.8.0<br>├── fresh<a href="/user/0">@0</a>.2.2<br>├── type-is<a href="/user/1">@1</a>.0.1<br>├── delegates<a href="/user/0">@0</a>.0.3<br>├── mime<a href="/user/1">@1</a>.2.11<br>├── co<a href="/user/3">@3</a>.0.5<br>├── accepts<a href="/user/1">@1</a>.0.1 (negotiator<a href="/user/0">@0</a>.4.2)<br>└── cookies<a href="/user/0">@0</a>.4.0 (keygrip<a href="/user/1">@1</a>.0.0)</p>
</div>

<p>&emsp;&emsp;但是毕竟镜像跟官方的 npm 源还是会有一个同步时间差异, 目前 cnpm 的默认同步时间间隔是 15 分钟. 如果你是模块发布者, 或者你想马上同步一个模块, 那么推荐你安装 cnpm cli:</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ npm --registry=https:<span class="regexp">//</span>registry.npm.taobao.org install cnpm -g</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;通过 cnpm 命令行, 你可以快速同步任意模块:</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">$ cnpm sync koa <span class="built_in">connect</span> mocha</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;呃, 我就是不想安装 cnpm cli 怎么办? 哈哈, 早就想到你会这么懒了, 于是我们还有一个 web 页面:</p>
<p>&emsp;&emsp;例如我想马上同步 koa, 直接打开浏览器: <a href="https://npm.taobao.org/sync/koa">https://npm.taobao.org/sync/koa</a></p>
<p>&emsp;&emsp;或者你是命令行控, 通过 open 命令打开:</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ open https:<span class="regexp">//</span>npm.taobao.org<span class="regexp">/sync/</span>koa</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;如果你安装的模块依赖了 C++ 模块, 需要编译, 肯定会通过 node-gyp 来编译, node-gyp 在第一次编译的时候, 需要依赖 node 源代码, 于是又会去 node dist 下载, 于是大家又会吐槽, 怎么 npm 安装这么慢…</p>
<p>&emsp;&emsp;好吧, 于是又要提到 <code>--disturl</code> 参数, 通过七牛的镜像来下载:</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ npm --registry=https:<span class="regexp">//</span>registry.npm.taobao.org --disturl=https:<span class="regexp">//</span>npm.taobao.org<span class="regexp">/mirrors/</span>node install microtime</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;再次要提到 cnpm cli, 它已经默认将 –registry 和 –disturl 都配置好了, 谁用谁知道 如果不想使用cnpm cli，可以</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">npm <span class="built_in">config</span> <span class="built_in">set</span> registry https:<span class="comment">//registry.npm.taobao.org --global</span></span><br><span class="line">npm <span class="built_in">config</span> <span class="built_in">set</span> disturl https:<span class="comment">//npm.taobao.org/dist --global</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;查看npm的配置</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">npm<span class="built_in"> config </span>ls # npm的配置</span><br></pre></td></tr></table></figure>

<h3 id="nvm常用命令"><a href="#nvm常用命令" class="headerlink" title="nvm常用命令"></a>nvm常用命令</h3><ol>
<li>nvm install <version> ## 安装指定版本，可模糊安装，如：安装v4.4.0，既可nvm install v4.4.0，又可nvm install 4.4</version></li>
<li>nvm uninstall <version> ## 删除已安装的指定版本，语法与install类似</version></li>
<li>nvm use <version> ## 切换使用指定的版本node</version></li>
<li>nvm ls ## 列出所有安装的版本</li>
<li>nvm ls-remote ## 列出所以远程服务器的版本（官方node version list）</li>
<li>nvm current ## 显示当前的版本</li>
<li>nvm alias <name> <version> ## 给不同的版本号添加别名</version></name></li>
<li>nvm unalias <name> ## 删除已定义的别名</name></li>
<li>nvm reinstall-packages <version> ## 在当前版本node环境下，重新全局安装指定版本号的npm包</version></li>
</ol>
<h3 id="附-MAC-的-bash-profile"><a href="#附-MAC-的-bash-profile" class="headerlink" title="附: MAC 的 .bash_profile"></a>附: MAC 的 <code>.bash_profile</code></h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">NVM_DIR</span>=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  # This loads nvm</span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  # This loads nvm bash_completi    on</span><br><span class="line"> </span><br><span class="line"><span class="comment"># nvm 改为国内node镜像</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">NVM_NODEJS_ORG_MIRROR</span>=https://npm.taobao.org/mirrors/node</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Nvm</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot项目添加外部Jar包</title>
    <url>/post/afccf6ff.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;SpringBoot项目引入外部jar包是非常方便的。</p>
<p>&emsp;&emsp;1，首先在src同级目录建一个lib文件夹，将第三方jar包放到这个文件内，比如我将ojdbc6.jar 这个jar包放到这个地方。<br>&emsp;&emsp;2，接着我们需要在pom.xml文件里配置jar的maven坐标，不过这个坐标比较特殊，我们需要直接定位到我们上一步添加的文件，而不是从Maven仓库里面去下载，以ojdbc6.jar为例，配置依赖如下：</p>
<a id="more"></a>

<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;com.oracle&lt;<span class="regexp">/groupId&gt;</span></span><br><span class="line"><span class="regexp">	&lt;artifactId&gt;ojdbc6&lt;/artifact</span>Id&gt;</span><br><span class="line">	&lt;version&gt;<span class="number">12.1</span>.<span class="number">0.2</span>.<span class="number">0</span>&lt;<span class="regexp">/version&gt;</span></span><br><span class="line"><span class="regexp">	&lt;scope&gt;system&lt;/scope</span>&gt;</span><br><span class="line">	&lt;systemPath&gt;$&#123;project.basedir&#125;/<span class="class"><span class="keyword">lib</span>/<span class="title">ojdbc6</span>.<span class="title">jar</span>&lt;/<span class="title">systemPath</span>&gt;</span></span><br><span class="line">&lt;<span class="regexp">/dependency&gt;</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这里比较特殊的是<code>systemPath</code>，常见的Maven坐标是没有这个的，这里面直接指定该jar的相对路径（相对项目的根目录），这样Maven在编译的时候就不会从中央仓库里面去下载该jar包了。但只配置这个还不行，还需要配置SpringBoot编译时插件属性<code>includeSystemScope</code>，具体如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">includeSystemScope</span>&gt;</span>true<span class="tag">&lt;/<span class="name">includeSystemScope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;上面配置完毕，我们就可以直接执行<code>mvn clean install</code>进行打包，然后我们查看打好的jar包里面包含的jar包，会发现ojdbc6.jar这个包已经正确被包含进去了。</p>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>js实现高精度计算</title>
    <url>/post/26f63a55.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="js实现高精度计算，金钱价格计算，避免数字计算精度丢失问题"><a href="#js实现高精度计算，金钱价格计算，避免数字计算精度丢失问题" class="headerlink" title="js实现高精度计算，金钱价格计算，避免数字计算精度丢失问题"></a>js实现高精度计算，金钱价格计算，避免数字计算精度丢失问题</h4><p>下载地址：<a href="/download/js-big-decimal.min.js">js-big-decimal.min.js</a></p>
<a id="more"></a>

<p>使用方法：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/js-big-decimal.min.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p>1，加法：</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="constructor">BigDecimal(<span class="string">&quot;3.059&quot;</span>)</span>.add(<span class="keyword">new</span> <span class="constructor">BigDecimal(<span class="string">&quot;7.559595&quot;</span>)</span>).set<span class="constructor">Scale(2, MathContext.ROUND_HALF_UP)</span>.<span class="keyword">to</span><span class="constructor">String()</span>;</span><br></pre></td></tr></table></figure>
<p>2，减法：</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type">BigDecimal</span>(<span class="string">&quot;2.123123213120&quot;</span>).subtract(<span class="keyword">new</span> <span class="type">BigDecimal</span>(<span class="string">&quot;2.55555555&quot;</span>))</span><br></pre></td></tr></table></figure>
<p>3，乘法：</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type">BigDecimal</span>(<span class="string">&quot;2.21312312312&quot;</span>).multiply(<span class="keyword">new</span> <span class="type">BigDecimal</span>(<span class="string">&quot;123123&quot;</span>))</span><br></pre></td></tr></table></figure>
<p>4，除法：</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="type">BigDecimal</span>(<span class="string">&quot;2.4123123&quot;</span>).divide(<span class="keyword">new</span> <span class="type">BigDecimal</span>(<span class="string">&quot;1231231232&quot;</span>), def)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Decimal</tag>
      </tags>
  </entry>
  <entry>
    <title>linux下mongo启动关闭重启方法</title>
    <url>/post/91eed2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1-启动"><a href="#1-启动" class="headerlink" title="1.  启动"></a>1.  启动</h4><p>&emsp;&emsp;启动<code>mongodb</code>首先要指定mongo的<code>数据</code>目录和<code>日志</code>文件路径，如:  <code>/data/mongodb/</code>,<code>/var/log/mongodb/mongodb.log</code><br>&emsp;&emsp;启动命令： </p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/mongdb/</span>bin<span class="regexp">/mongod -port 27017 --dbpath /</span>data<span class="regexp">/mongodb/</span> --logpath <span class="regexp">/var/m</span>ongodb/mongodb.log</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="2-通过配置文件配置："><a href="#2-通过配置文件配置：" class="headerlink" title="2.  通过配置文件配置："></a>2.  通过配置文件配置：</h4><p>&emsp;&emsp;<code>vim mongodb.conf </code>   </p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#数据库路径</span></span><br><span class="line"><span class="attr">dbpath</span>=/usr/local/mongodb/data/</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志输出文件路径</span></span><br><span class="line"><span class="attr">logpath</span>=/usr/local/mongodb/log/mongodb.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#错误日志采用追加模式，配置这个选项后mongodb的日志会追加到现有的日志文件，而不是从新创建一个新文件</span></span><br><span class="line"><span class="attr">logappend</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启用日志文件，默认启用</span></span><br><span class="line"><span class="attr">journal</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span></span><br><span class="line"><span class="attr">quiet</span>=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否后台启动，有这个参数，就可以实现后台运行</span></span><br><span class="line"><span class="attr">fork</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#端口号 默认为27017</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">27017</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#远程连接</span></span><br><span class="line"><span class="attr">bind_ip</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;启动命令： </p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>loca<span class="regexp">/mongodb/</span>bin/mongod -f mongodb.conf</span><br></pre></td></tr></table></figure>

<h4 id="3-后台启动"><a href="#3-后台启动" class="headerlink" title="3. 后台启动"></a>3. 后台启动</h4><p>&emsp;&emsp;1，使用<code>--fork</code> 选项将会通知 mongod 在后台运行    </p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/mongodb/</span>bin<span class="regexp">/mongod  -port 10001 --dbpath /</span>data<span class="regexp">/mongodb/</span> --logpath <span class="regexp">/var/m</span>ongodb/mongodb.log --fork  </span><br></pre></td></tr></table></figure>


<p>&emsp;&emsp;2，使用<code>&amp;</code>后台启动      </p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/mongodb/</span>bin<span class="regexp">/mongod  -port 10001 --dbpath /</span>data<span class="regexp">/mongodb/</span> --logpath <span class="regexp">/var/m</span>ongodb/mongodb.log &amp;</span><br></pre></td></tr></table></figure>

<h4 id="4-关闭"><a href="#4-关闭" class="headerlink" title="4. 关闭"></a>4. 关闭</h4><p>&emsp;&emsp; pkill mongod</p>
<p>&emsp;&emsp; 进入mongo shell ：运行 db.shuidownServer()</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Mongo</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot项目配置多数据源</title>
    <url>/post/a810e572.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;由于对接的项目比较老，要与其数据库进行交互，而且数据库类型不一致，所以我们的项目需要支持多数据源（接口平台），这个还是非常好配置的，SpringBoot给我们提供了多数据源配置的方案，并且每个数据源对应一个JdbcTemplate，这样就方便很多，具体配置如下：</p>
<a id="more"></a>

<h4 id="application-properties文件内配置多数据源信息"><a href="#application-properties文件内配置多数据源信息" class="headerlink" title="application.properties文件内配置多数据源信息"></a>application.properties文件内配置多数据源信息</h4><p>&emsp;&emsp;首先在application.properties或者yml文件内配置多数据源信息，具体配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ds1数据源配置</span></span><br><span class="line"><span class="attr">spring.datasource.ds1.type</span>=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line"><span class="attr">spring.datasource.ds1.driver-class-name</span>=com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">spring.datasource.ds1.url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/zz?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8</span><br><span class="line"><span class="attr">spring.datasource.ds1.username</span>=zz</span><br><span class="line"><span class="attr">spring.datasource.ds1.password</span>=zz</span><br><span class="line"></span><br><span class="line"><span class="comment"># ds2数据源配置</span></span><br><span class="line"><span class="attr">spring.datasource.ds2.driver-class-name</span>=oracle.jdbc.driver.OracleDriver</span><br><span class="line"><span class="attr">spring.datasource.ds2.url</span>=jdbc:oracle:thin:@localhost:<span class="number">1521</span>:orcl</span><br><span class="line"><span class="attr">spring.datasource.ds2.username</span>=system</span><br><span class="line"><span class="attr">spring.datasource.ds2.password</span>=<span class="number">050508</span></span><br></pre></td></tr></table></figure>

<h4 id="指定数据源与配置信息"><a href="#指定数据源与配置信息" class="headerlink" title="指定数据源与配置信息"></a>指定数据源与配置信息</h4><p>&emsp;&emsp;上面我们配置好了数据源，但是已经不是SpringBoot默认的数据源配置信息了，所以我们还要指定不同的数据源实例对应哪个配置信息，配置如下：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多数据源配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Configuration</span></span><br><span class="line">public class DataSourceConfig &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * ds1数据源配置</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @return 配置信息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="variable">@Primary</span></span><br><span class="line">  <span class="variable">@Bean</span>(name = <span class="string">&quot;ds1DataSourceProperties&quot;</span>)</span><br><span class="line">  <span class="variable">@ConfigurationProperties</span>(prefix = <span class="string">&quot;spring.datasource.ds1&quot;</span>)</span><br><span class="line">  public DataSourceProperties ds1DataSourceProperties() &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">DataSourceProperties</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * ds1数据源</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param dataSourceProperties 配置信息</span></span><br><span class="line"><span class="comment">   * @return 数据源实例</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  @<span class="selector-tag">Primary</span></span><br><span class="line">  @<span class="selector-tag">Bean</span>(name = <span class="string">&quot;ds1DataSource&quot;</span>)</span><br><span class="line">  <span class="selector-tag">public</span> <span class="selector-tag">DataSource</span> <span class="selector-tag">ds1DataSource</span>(<span class="variable">@Qualifier</span>(<span class="string">&quot;ds1DataSourceProperties&quot;</span>) DataSourceProperties dataSourceProperties) &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">dataSourceProperties</span><span class="selector-class">.initializeDataSourceBuilder</span>()<span class="selector-class">.build</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * ds2数据源配置</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @return 配置信息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  @<span class="selector-tag">Primary</span></span><br><span class="line">  @<span class="selector-tag">Bean</span>(name = <span class="string">&quot;ds2DataSourceProperties&quot;</span>)</span><br><span class="line">  @<span class="selector-tag">ConfigurationProperties</span>(prefix = <span class="string">&quot;spring.datasource.ds2&quot;</span>)</span><br><span class="line">  <span class="selector-tag">public</span> <span class="selector-tag">DataSourceProperties</span> <span class="selector-tag">ds2DataSourceProperties</span>() &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">DataSourceProperties</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * ds2数据源</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param dataSourceProperties 配置信息</span></span><br><span class="line"><span class="comment">   * @return 数据源实例</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  @<span class="selector-tag">Primary</span></span><br><span class="line">  @<span class="selector-tag">Bean</span>(name = <span class="string">&quot;ds2DataSource&quot;</span>)</span><br><span class="line">  <span class="selector-tag">public</span> <span class="selector-tag">DataSource</span> <span class="selector-tag">ds2DataSource</span>(<span class="variable">@Qualifier</span>(<span class="string">&quot;ds2DataSourceProperties&quot;</span>) DataSourceProperties dataSourceProperties) &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">dataSourceProperties</span><span class="selector-class">.initializeDataSourceBuilder</span>()<span class="selector-class">.build</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="配置JdbcTemplate与数据源关系"><a href="#配置JdbcTemplate与数据源关系" class="headerlink" title="配置JdbcTemplate与数据源关系"></a>配置JdbcTemplate与数据源关系</h4><p>&emsp;&emsp;配置完数据源信息，我们想直接用不同的JdbcTemplate来操作不同的数据库，所以我们还要创建几个<code>JdbcTemplate</code>实例，并且这些实例与不同的数据源进行绑定，配置信息如下：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JdbcTemplate 多数据源配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @author 明山</span></span><br><span class="line"><span class="comment"> * @see DataSourceConfig</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">@Configuration</span></span><br><span class="line">public class JdbcTemplateDataSourceConfig &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * ds1 JdbcTemplate 配置</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param dataSource 数据源</span></span><br><span class="line"><span class="comment">   * @return JdbcTemplate</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="variable">@Primary</span></span><br><span class="line">  <span class="variable">@Bean</span>(name = <span class="string">&quot;ds1JdbcTemplate&quot;</span>)</span><br><span class="line">  public JdbcTemplate jdbcTemplate(<span class="variable">@Qualifier</span>(<span class="string">&quot;ds1DataSource&quot;</span>) DataSource dataSource) &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">JdbcTemplate</span>(dataSource);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *ds2 JdbcTemplate 配置</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param dataSource 数据源</span></span><br><span class="line"><span class="comment">   * @return JdbcTemplate</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  @<span class="selector-tag">Bean</span>(name = <span class="string">&quot;ds2JdbcTemplate&quot;</span>)</span><br><span class="line">  <span class="selector-tag">public</span> <span class="selector-tag">JdbcTemplate</span> <span class="selector-tag">hdwmsJdbcTemplate</span>(<span class="variable">@Qualifier</span>(<span class="string">&quot;ds2DataSource&quot;</span>) DataSource dataSource) &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">JdbcTemplate</span>(dataSource);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="使用JdbcTemplate"><a href="#使用JdbcTemplate" class="headerlink" title="使用JdbcTemplate"></a>使用JdbcTemplate</h4><p>&emsp;&emsp;配置完后，我们可以直接在具体的类中使用了，使用方式如下：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@Autowired</span></span><br><span class="line"><span class="variable">@Qualifier</span>(<span class="string">&quot;ds1JdbcTemplate&quot;</span>)</span><br><span class="line">private JdbcTemplate ds1JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="variable">@Autowired</span></span><br><span class="line"><span class="variable">@Qualifier</span>(<span class="string">&quot;ds2JdbcTemplate&quot;</span>)</span><br><span class="line">private JdbcTemplate ds2JdbcTemplate;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot配置静态资源不重启即时生效</title>
    <url>/post/f3f7b1c5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在项目中，用到了模板引擎,每次修改一个 html，要重启才生效,配置不重启也实时生效,可以提供开发效率</p>
<a id="more"></a>

<p>在<code>pom</code>中直接引入依赖<code>spring-boot-devtools</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">     &lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>在 <code>automatically.properties</code> 中 <code>开启application.properties</code> 开启页面热价值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#页面热加载</span></span><br><span class="line">spring.thymeleaf.cache = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>点击<code>File</code> -&gt; <code>Settings</code> -&gt; <code>Build-Execution-Deplyment</code> -&gt; <code>Compiler</code>，选中打勾 <code>Build project</code></p>
<img src="/post/f3f7b1c5/springbootstatic.png" class title="设置开启实时生效">]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot配置logback.xml日志信息</title>
    <url>/post/4d8e6ca2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>由于<code>Spring Boot</code> 默认的日志框架 <code>Logback</code>,直接在resource下创建<code>logback-spring.xml</code><br>创建logback-spring.xml文件</p>
<a id="more"></a>

<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">configuration</span>  <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;10 seconds&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 日志级别从低到高分为TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL，如果设置为WARN，则低于WARN的信息都不会输出 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- de<span class="doctag">bug:</span>当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>logback<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“$</span></span><span class="template-variable">&#123;&#125;</span><span class="xml"><span class="comment">”来使用变量。 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;log.path&quot;</span> <span class="attr">value</span>=<span class="string">&quot;D:/data/edu&quot;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 彩色日志 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 配置格式变量：CONSOLE_LOG_PATTERN 彩色日志格式 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- magenta:洋红 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- boldMagenta:粗红--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- cyan:青色 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- white:白色 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- magenta:洋红 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE_LOG_PATTERN&quot;</span></span></span></span><br><span class="line"><span class="xml">              value=&quot;%yellow(%date</span><span class="template-variable">&#123;yyyy-MM-dd HH:mm:ss&#125;</span><span class="xml">) |%highlight(%-5level) |%blue(%thread) |%blue(%file:%line) |%green(%logger) |%cyan(%msg%n)&quot;/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--输出到控制台--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 例如：如果此处配置了INFO级别，则后面其他位置即使配置了DEBUG级别的日志，也不会被输出 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>$</span><span class="template-variable">&#123;CONSOLE_LOG_PATTERN&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!-- 设置字符集 --&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--输出到文件--&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 时间滚动输出 level为 INFO 日志 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;INFO_FILE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$</span><span class="template-variable">&#123;log.path&#125;</span><span class="xml">/log_info.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d</span><span class="template-variable">&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;</span><span class="xml"> [%thread] %-5level %logger</span><span class="template-variable">&#123;50&#125;</span><span class="xml"> - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!-- 每天日志归档路径以及格式 --&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$</span><span class="template-variable">&#123;log.path&#125;</span><span class="xml">/info/log-info-%d</span><span class="template-variable">&#123;yyyy-MM-dd&#125;</span><span class="xml">.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 此日志文件只记录info级别的 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 时间滚动输出 level为 WARN 日志 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;WARN_FILE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$</span><span class="template-variable">&#123;log.path&#125;</span><span class="xml">/log_warn.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d</span><span class="template-variable">&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;</span><span class="xml"> [%thread] %-5level %logger</span><span class="template-variable">&#123;50&#125;</span><span class="xml"> - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 此处设置字符集 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$</span><span class="template-variable">&#123;log.path&#125;</span><span class="xml">/warn/log-warn-%d</span><span class="template-variable">&#123;yyyy-MM-dd&#125;</span><span class="xml">.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 此日志文件只记录warn级别的 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>warn<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 时间滚动输出 level为 ERROR 日志 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;ERROR_FILE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$</span><span class="template-variable">&#123;log.path&#125;</span><span class="xml">/log_error.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d</span><span class="template-variable">&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;</span><span class="xml"> [%thread] %-5level %logger</span><span class="template-variable">&#123;50&#125;</span><span class="xml"> - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 此处设置字符集 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$</span><span class="template-variable">&#123;log.path&#125;</span><span class="xml">/error/log-error-%d</span><span class="template-variable">&#123;yyyy-MM-dd&#125;</span><span class="xml">.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 此日志文件只记录ERROR级别的 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">logger</span>&gt;</span>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<span class="tag">&lt;<span class="name">appender</span>&gt;</span>。</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">logger</span>&gt;</span>仅有一个name属性，</span></span><br><span class="line"><span class="xml">        一个可选的level和一个可选的addtivity属性。</span></span><br><span class="line"><span class="xml">        name:用来指定受此logger约束的某一个包或者具体的某一个类。</span></span><br><span class="line"><span class="xml">        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，</span></span><br><span class="line"><span class="xml">              如果未设置此属性，那么当前logger将会继承上级的级别。</span></span><br><span class="line"><span class="xml">    --&gt;</span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">        使用mybatis的时候，sql语句是debug下才会打印，而这里我们只配置了info，所以想要查看sql语句的话，有以下两种操作：</span></span><br><span class="line"><span class="xml">        第一种把<span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span>改成<span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span>这样就会打印sql，不过这样日志那边会出现很多其他消息</span></span><br><span class="line"><span class="xml">        第二种就是单独给mapper下目录配置DEBUG模式，代码如下，这样配置sql语句会打印，其他还是正常DEBUG级别：</span></span><br><span class="line"><span class="xml">     --&gt;</span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--开发环境:打印控制台--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">&quot;dev&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--可以输出项目中的debug日志，包括mybatis的sql日志--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.guli&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="xml">            root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性</span></span><br><span class="line"><span class="xml">            level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，默认是DEBUG</span></span><br><span class="line"><span class="xml">            可以包含零个或多个appender元素。</span></span><br><span class="line"><span class="xml">        --&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;INFO_FILE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;WARN_FILE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;ERROR_FILE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--生产环境:输出到文件--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">&quot;pro&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;DEBUG_FILE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;INFO_FILE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;ERROR_FILE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;WARN_FILE&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在<code>applicationyml</code>配置环境</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta">##环境设置</span></span><br><span class="line"><span class="symbol"> profiles:</span></span><br><span class="line"><span class="symbol">   active:</span> dev</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>控制台输入彩色,然后去日志存储目录中分表有log_error.log log_info.log log_warn.log 3个文件</p>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven打包跳过test测试类</title>
    <url>/post/454608c3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="记录一下，有两种方式："><a href="#记录一下，有两种方式：" class="headerlink" title="记录一下，有两种方式："></a>记录一下，有两种方式：</h4><a id="more"></a>

<ol>
<li><p>传统方式</p>
<p>命令带上参数 <code>mvn install -Dmaven.test.skip=true</code> 即可</p>
</li>
<li><p>plugin方式</p>
<p>在 pom 文件中加入一个 plugin</p>
</li>
</ol>
   <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skip</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>连接 MySQL 8.0 时，加密方式不兼容的解决方法</title>
    <url>/post/170d9336.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><div class="note info no-icon"><p>报错如下： “Authentication plugin ‘caching_sha2_password’ cannot be loaded”。</p>
</div>

<p><escape><a id="more"></a></escape></p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><div class="note info no-icon"><p>问题的原因：是从<code>MySQL8.0 </code>开始，默认的加密规则使用的是 <code>caching_sha2_password</code>。</p>
</div>


<ol>
<li>首先找到当前数据库用户root的加密规则</li>
</ol>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">mysql&gt;use mysql; </span><br><span class="line">mysql&gt;<span class="keyword">select</span> <span class="keyword">user</span>, host, plugin <span class="keyword">from</span> <span class="keyword">user</span></span><br></pre></td></tr></table></figure>
<br>

<img src="/post/170d9336/mysqlpassword1.png" class title="USER">

<ol start="2">
<li>修改加密规则为“mysql_native_password”</li>
</ol>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">ALTER<span class="built_in"> USER </span><span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;<code>注： password 替换为 root 的密码； 或者直接更新这一行 pluggin字段 的值为 “mysql_native_password”</code></p>
<p>&emsp;&emsp;修改my.cnf配置文件，加入</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+  default-authentication-plugin=mysql_native_password</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;但是这个配置参数只对新的用户起作用，对于老的，比如root那就要重新设置一下密码</p>
<p>&emsp;&emsp;对与那个用户使用了哪种认证插件，你可以去mysql的用户表去查看plugin字段</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"><span class="keyword">use</span> mysql</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;接着我们修改root的认证插件</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">ALTER<span class="built_in"> USER </span><span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;password&#x27;</span> PASSWORD EXPIRE NEVER;</span><br><span class="line">ALTER<span class="built_in"> USER </span><span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;之后就好了.</p>
<p>&emsp;&emsp;完成后效果如下：</p>
<img src="/post/170d9336/mysqlpassword2.png" class title="PASS">

<h3 id="更为优雅的解决方案"><a href="#更为优雅的解决方案" class="headerlink" title="更为优雅的解决方案"></a>更为优雅的解决方案</h3><p> &emsp;&emsp;又重新回到了 MySQL 官方在docker的仓库中，仔细的阅读了一遍官方的说明。<br> 其实，我们在启动MySQL 容器的时候，是可以修改一些设置的。主要有2种方式。</p>
<ol>
<li>自定义配置文件，并 mount 到 container里。这样在MySQL启动时，会加载我们的配置文件。 </li>
<li>启动MySQL容器是传入CMD，通过命令修改默认加密规则（下面绿色部分）</li>
</ol>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># docker run -d -e MYSQL_ROOT_PASSWORD=<span class="number">123456</span> -e MYSQL_DATABASE=weather_db -p <span class="number">3307</span>:<span class="number">3306</span> --name test-mysql --restart always -v  <span class="regexp">/home/</span>ct<span class="regexp">/mysql/</span>data:<span class="regexp">/var/</span>lib/mysql  </span><br><span class="line">mysql:<span class="number">8.0</span>.<span class="number">12</span>  --<span class="keyword">default</span>-authentication-plugin=mysql_native_password</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>为MySQL数据库分配指定用户</title>
    <url>/post/409d24a5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>日常语句</p>
</blockquote>
<p><escape><a id="more"></a></escape></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建用户</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> kanyme <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;kanyme&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 授权</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> kanyme_db.* <span class="keyword">to</span> kanyme@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 刷新权限</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="string">&#x27;kanyme&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码</span></span><br><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> <span class="keyword">password</span> = <span class="keyword">password</span>(<span class="string">&#x27;kanyme_new&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span> = <span class="string">&#x27;kanyme&#x27;</span> <span class="keyword">and</span> host = <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 新版</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span><span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;kanyme_new&#x27;</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> kanyme@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-- 修改Root用户密码</span><br><span class="line">update mysql.user <span class="built_in">set</span> authentication_string=<span class="string">&quot;kanyme_new&quot;</span> WHERE user=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<br>
<div class="note info no-icon"><p>mysql 5.7.9 之后取消了password 函数，authentication_string=password(“123456”) 会报错</p>
</div>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Meting漂亮的背景音乐播放器</title>
    <url>/post/c1dab809.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success no-icon"><p>&emsp;以前就很想给网站加上一个背景音乐播放器！并且这个播放器要简洁大气，Meting完美的阐释了这句话！</p>
</div>

<img src="/post/c1dab809/meting.png" class title="Meting">

<a id="more"></a>

<!-- require APlayer -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">
<script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>
<!-- require MetingJS -->
<script src="https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js"></script>

<p><meting-js server="netease" type="playlist" list-folded="true" theme="#eb7aab" id="14721111"><br></meting-js></p>
<p>&emsp;&emsp;在Github的开源地址：<a href="https://github.com/metowolf/MetingJS">https://github.com/metowolf/MetingJS</a></p>
<p>&emsp;&emsp;如果你想在你的网站上添加Meting你可以这么做，找到一个公共的页面在底部添加上下面的代码:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meting-js</span> <span class="attr">server</span>=<span class="string">&quot;netease&quot;</span> <span class="attr">type</span>=<span class="string">&quot;playlist&quot;</span> <span class="attr">id</span>=<span class="string">&quot;2287227122&quot;</span> <span class="attr">fixed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoplay</span>=<span class="string">&quot;false&quot;</span> <span class="attr">order</span>=<span class="string">&quot;random&quot;</span> <span class="attr">theme</span>=<span class="string">&quot;#eb7aab&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">meting-js</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://npm.elemecdn.com/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://npm.elemecdn.com/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://npm.elemecdn.com/meting@2.0.1/dist/Meting.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="keyword">var</span> meting_api = <span class="string">&#x27;https://service-opb3o3ky-1251733603.gz.apigw.tencentcs.com/release/Meting?server=:server&amp;type=:type&amp;id=:id&amp;r=:r&#x27;</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meting-js</span> <span class="attr">auto</span>=<span class="string">&quot;https://music.163.com/#/playlist?id=2287227122&quot;</span> <span class="attr">order</span>=<span class="string">&quot;random&quot;</span> <span class="attr">theme</span>=<span class="string">&quot;#0073aa&quot;</span> <span class="attr">list-folded</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">meting-js</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br>

<p>&emsp;&emsp;这样你的网站就会有一个在左下角收缩的播放器了！如果你想换歌单可以在meting-js标签中修改id属性！这样就完成了是不是很简单！</p>
<p><meting-js auto="https://music.163.com/#/playlist?id=2287227122" order="random" theme="#0073aa" list-folded="true"></meting-js></p>
<br>

<blockquote>
<p>其他播放器<br><a href="https://yy.mosq.cn/">漫音乐播放器</a><br><a href="https://player.hexiongbiao.cn/">宅音乐播放器</a></p>
</blockquote>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Meting</tag>
      </tags>
  </entry>
  <entry>
    <title>linux搭建GitLab</title>
    <url>/post/73879c7f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-初始GitLab"><a href="#1-初始GitLab" class="headerlink" title="1.初始GitLab"></a>1.初始GitLab</h3><p>&emsp;&emsp;GitLab是利用Ruby on Rails一个开源的版本管理系统，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。<br>&emsp;&emsp;与Github类似，GitLab能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序(Wall)进行交流。<br>&emsp;&emsp;它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。</p>
<a id="more"></a>


<h3 id="2-准备安装GitLab"><a href="#2-准备安装GitLab" class="headerlink" title="2.准备安装GitLab"></a>2.准备安装GitLab</h3><p>&emsp;&emsp;<code>yum install -y postfix sshd policycoreutils-python</code></p>
<ul>
<li><code>postfix</code> 邮件通知</li>
<li><code>sshd</code> ssh服务(一般系统已经有了,可以不装)</li>
<li><code>policycoreutils-python</code> GitLab必备依赖</li>
</ul>
<p>&emsp;&emsp;设置postfix开机自启: <code>chkconfig --add postfix</code></p>
<h3 id="3-开始安装GitLab"><a href="#3-开始安装GitLab" class="headerlink" title="3.开始安装GitLab"></a>3.开始安装GitLab</h3><p>&emsp;&emsp;官方下载地址：<a href="https://packages.gitlab.com/gitlab/gitlab-ce">https://packages.gitlab.com/gitlab/gitlab-ce</a><br>&emsp;&emsp;国内镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-12.7.6-ce.0.el6.x86_64.rpm</span><br><span class="line">yum install -y gitlab-ce-12.7.6-ce.0.el6.x86_64.rpm</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-配置GitLab"><a href="#4-配置GitLab" class="headerlink" title="4.配置GitLab"></a>4.配置GitLab</h3><p>&emsp;&emsp;主要配置两个地方: 访问GitLab的IP地址和发送邮件的账号配置</p>
<p>&emsp;&emsp;<code>vim /etc/gitlab/gitlab.rb</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">external_url <span class="string">&#x27;http://192.168.183.200&#x27;</span> <span class="comment"># 你自己的IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Email Settings</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_email_enabled&#x27;</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_email_from&#x27;</span>] = <span class="string">&#x27;你的邮箱&#x27;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_email_display_name&#x27;</span>] = <span class="string">&#x27;邮件名字&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### GitLab email server settings</span></span><br><span class="line"><span class="comment">### 这里邮件服务器使用的是QQ企业邮箱,163自行修改</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_enable&#x27;</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_address&#x27;</span>] = <span class="string">&quot;smtp.exmail.qq.com&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_port&#x27;</span>] = 465</span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_user_name&#x27;</span>] = <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_password&#x27;</span>] = <span class="string">&quot;邮箱密码&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_authentication&#x27;</span>] = <span class="string">&quot;login&quot;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_enable_starttls_auto&#x27;</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;smtp_tls&#x27;</span>] = <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;ESC保存并退出 :<code>wq</code></p>
<h3 id="5-更改gitlab默认端口"><a href="#5-更改gitlab默认端口" class="headerlink" title="5.更改gitlab默认端口"></a>5.更改gitlab默认端口</h3><p>&emsp;&emsp;若linux服务器的80和8080端口都已经被使用，则需修改gitlab监听的端口</p>
<p>&emsp;&emsp;修改路径文件：<code>vim /etc/gitlab/gitlab.rb</code></p>
<p>&emsp;&emsp;1、修改<code>external_url</code>  （将前面的#注释符号去掉）,我改成了8099</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## GitLab URL</span></span><br><span class="line"><span class="comment">##! URL on which GitLab will be reachable.</span></span><br><span class="line"><span class="comment">##! For more details on configuring external_url see:</span></span><br><span class="line"><span class="comment">##! https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab</span></span><br><span class="line"><span class="comment">##!</span></span><br><span class="line"><span class="comment">##! Note: During installation/upgrades, the value of the environment variable</span></span><br><span class="line"><span class="comment">##! EXTERNAL_URL will be used to populate/replace this value.</span></span><br><span class="line"><span class="comment">##! On AWS EC2 instances, we also attempt to fetch the public hostname/IP</span></span><br><span class="line"><span class="comment">##! address from AWS. For more details, see:</span></span><br><span class="line"><span class="comment">##! https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html</span></span><br><span class="line">external_url <span class="string">&#x27;http://10.211.55.61:8099&#x27;</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;2、找到Advanced settings 下的8080端口 将端口改成自己备用端口号<br>&emsp;&emsp;（<code>不能和上面url端口号相同，会冲突占用！</code>），我改的28080</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">### Advanced settings</span></span><br><span class="line"><span class="comment"># unicorn[&#x27;listen&#x27;] = &#x27;localhost&#x27;</span></span><br><span class="line"> unicorn[<span class="string">&#x27;port&#x27;</span>] = 28080</span><br><span class="line"><span class="comment"># unicorn[&#x27;socket&#x27;] = &#x27;/var/opt/gitlab/gitlab-rails/sockets/gitlab.socket&#x27;</span></span><br><span class="line"><span class="comment"># unicorn[&#x27;pidfile&#x27;] = &#x27;/opt/gitlab/var/unicorn/unicorn.pid&#x27;</span></span><br><span class="line"><span class="comment"># unicorn[&#x27;tcp_nopush&#x27;] = true</span></span><br><span class="line"><span class="comment"># unicorn[&#x27;backlog_socket&#x27;] = 1024</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;3、运行下面命令</p>
<pre><code>     sudo gitlab-ctl stop --停止服务
     sudo gitlab-ctl reconfigure --启动服务
     sudo gitlab-ctl start --启动所有gitlab组件</code></pre>
<p>&emsp;&emsp;4、若访问不了gitlab，尝试关闭或开放防火墙</p>
<h3 id="6-启动GitLab"><a href="#6-启动GitLab" class="headerlink" title="6.启动GitLab"></a>6.启动GitLab</h3><p>&emsp;&emsp;刷新配置: <code>gitlab-ctl reconfigure</code><br>&emsp;&emsp;重启服务: <code>gitlab-ctl restart</code></p>
<h3 id="7-访问GitLab"><a href="#7-访问GitLab" class="headerlink" title="7.访问GitLab"></a>7.访问GitLab</h3><p>&emsp;&emsp;此时还不能访问,需要关闭防火墙 <code>service iptables stop</code> 或者 在防火墙中开放8099端口:</p>
<p>&emsp;&emsp;编辑iptables <code>vi /etc/sysconfig/iptables</code></p>
<p>&emsp;&emsp;添加配置 <code>-A INPUT -m state --state NEW -m tcp -p tcp --dport 8099 -j ACCEPT</code></p>
<p>&emsp;&emsp;重启防火墙 <code>service iptables restart</code></p>
<p>&emsp;&emsp;访问 <a href="http://10.211.55.61:8099/">http://10.211.55.61:8099/</a></p>
<p>&emsp;&emsp;第一次登录需要修改<code>root</code>密码, 密码8位以上,修改完就可以登录</p>
<h3 id="8-Linux下Gitlab个人界面汉化"><a href="#8-Linux下Gitlab个人界面汉化" class="headerlink" title="8.Linux下Gitlab个人界面汉化"></a>8.Linux下Gitlab个人界面汉化</h3><p>&emsp;&emsp;1.进入个人用户界面<br>&emsp;&emsp;点击右上角<code>个人头像-&gt;settings-&gt;profile-&gt;Preferred language</code><br>&emsp;&emsp;2.默认是english,可以切换中文<br>&emsp;&emsp;3.再刷新一下，我们看见语言变成中文了<br>&emsp;&emsp;4.不过其它账号登录依然是英文，只有当前账号登录才会显示成功切换的语言</p>
<h3 id="9-GitLab基本操作"><a href="#9-GitLab基本操作" class="headerlink" title="9.GitLab基本操作"></a>9.GitLab基本操作</h3><p>&emsp;&emsp;添加用户2种方式: root后台添加和自己注册</p>
<p>&emsp;&emsp;用户权限:</p>
<pre><code>Regular: 可以访问自己组和项目
Admin: 可以访问所有组和项目</code></pre>
<p>&emsp;&emsp;添加组</p>
<p>&emsp;&emsp;组权限</p>
<pre><code>Private: 私用,只允许组成员可见
Internal: 内部,所有登录用户可见
Public: 公共,所有人可见</code></pre>
<p>&emsp;&emsp;创建仓库和添加成员到组,很简单,不再赘述. 重点说下仓库成员权限,</p>
<pre><code>Guest：可以创建issue、发表评论，不能读写版本库
Reporter：可以克隆代码，不能提交，QA、PM可以赋予这个权限
Developer：可以克隆代码、开发、提交、push，RD可以赋予这个权限
Master：可以创建项目、添加tag、保护分支、添加项目成员、编辑项目，核心RD负责人可以赋予这个权限
Owner：可以设置项目访问权限 - Visibility Level、删除项目、迁移项目、管理组成员，开发组leader可以赋予这个权限</code></pre>
<h3 id="10-Gitlab相关操作及说明"><a href="#10-Gitlab相关操作及说明" class="headerlink" title="10.Gitlab相关操作及说明"></a>10.Gitlab相关操作及说明</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="regexp">/etc/gi</span>tlab/gitlab.rb          <span class="comment">#gitlab配置文件</span></span><br><span class="line"><span class="regexp">/opt/gi</span>tlab                    <span class="comment">#gitlab的程序安装目录</span></span><br><span class="line"><span class="regexp">/var/</span>opt/gitlab                <span class="comment">#gitlab目录数据目录</span></span><br><span class="line"><span class="regexp">/var/</span>opt<span class="regexp">/gitlab/gi</span>t-data       <span class="comment">#存放仓库数据</span></span><br><span class="line">gitlab-ctl reconfigure         <span class="comment">#重新加载配置</span></span><br><span class="line">gitlab-ctl status              <span class="comment">#查看当前gitlab所有服务运行状态</span></span><br><span class="line">gitlab-ctl stop                <span class="comment">#停止gitlab服务</span></span><br><span class="line">gitlab-ctl stop nginx          <span class="comment">#单独停止某个服务</span></span><br><span class="line">gitlab-ctl tail                <span class="comment">#查看所有服务的日志</span></span><br><span class="line"></span><br><span class="line">Gitlab的服务构成：</span><br><span class="line">nginx：                 静态web服务器</span><br><span class="line">gitlab-workhorse        轻量级反向代理服务器</span><br><span class="line">logrotate              日志文件管理工具</span><br><span class="line">postgresql             数据库</span><br><span class="line">redis                  缓存数据库</span><br><span class="line">sidekiq                用于在后台执行队列任务（异步执行）</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>GitLab</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP7 安装 event 扩展</title>
    <url>/post/c42ce648.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success no-icon"><p>&emsp;&emsp;Libevent 是一个用C语言编写的、轻量级的开源高性能I/O框架，支持多种 I/O 多路复用技术： epoll、 poll、 dev/poll、 select 和 kqueue 等；支持 I/O，定时器和信号等事件；注册事件优先级。PHP提供了对应的扩展 libevent、 Event 。</p>
<p>&emsp;&emsp;相比 libevent ext, event ext 拥有更好的性能表现和更全面的API，可以让我们更友好的使用 Libevent。</p>
</div>

<a id="more"></a>

<h4 id="安装-Libevent-库"><a href="#安装-Libevent-库" class="headerlink" title="安装 Libevent 库"></a>安装 Libevent 库</h4><p>&emsp;&emsp; php event 扩展 依赖 Libevent 库，需要先编译安装（注意是 Libevent 库，非 libevent 扩展）。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone --depth=<span class="number">1</span> https:<span class="regexp">//gi</span>thub.com<span class="regexp">/nmathewson/</span>Libevent.git</span><br><span class="line">cd Libevent</span><br><span class="line">./autogen.sh</span><br><span class="line"></span><br><span class="line">.<span class="regexp">/configure --prefix=/u</span>sr<span class="regexp">/local/</span>libevent</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h4 id="安装-Event-扩展"><a href="#安装-Event-扩展" class="headerlink" title="安装 Event 扩展"></a>安装 Event 扩展</h4><p>&emsp;&emsp; 可以直接使用 pecl 安装</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">pecl <span class="keyword">install</span> <span class="keyword">event</span></span><br><span class="line">downloading <span class="keyword">event</span><span class="number">-2.5</span><span class="number">.3</span>.tgz ...</span><br><span class="line"><span class="keyword">Starting</span> <span class="keyword">to</span> download <span class="keyword">event</span><span class="number">-2.5</span><span class="number">.3</span>.tgz (<span class="number">140</span>,<span class="number">913</span> <span class="keyword">bytes</span>)</span><br><span class="line">..............................done: <span class="number">140</span>,<span class="number">913</span> <span class="keyword">bytes</span></span><br><span class="line"><span class="number">50</span> <span class="keyword">source</span> files, building</span><br><span class="line">running: phpize</span><br><span class="line">Configuring <span class="keyword">for</span>:</span><br><span class="line">PHP Api <span class="keyword">Version</span>:         <span class="number">20180731</span></span><br><span class="line">Zend <span class="keyword">Module</span> Api <span class="keyword">No</span>:      <span class="number">20180731</span></span><br><span class="line">Zend Extension Api <span class="keyword">No</span>:   <span class="number">320180731</span></span><br><span class="line"><span class="keyword">Enable</span> internal debugging <span class="keyword">in</span> <span class="keyword">Event</span> [<span class="keyword">no</span>] : </span><br><span class="line"><span class="keyword">Enable</span> sockets support <span class="keyword">in</span> <span class="keyword">Event</span> [yes] : </span><br><span class="line">libevent installation prefix [/usr] : /usr/<span class="keyword">local</span>/libevent</span><br><span class="line">...</span><br><span class="line"><span class="keyword">Build</span> process completed successfully</span><br><span class="line">Installing <span class="string">&#x27;/usr/local/php/lib/php/extensions/no-debug-non-zts-20180731/event.so&#x27;</span></span><br><span class="line"><span class="keyword">install</span> ok: channel://pecl.php.net/<span class="keyword">event</span><span class="number">-2.5</span><span class="number">.3</span></span><br><span class="line">Extension <span class="keyword">event</span> enabled <span class="keyword">in</span> php.ini</span><br></pre></td></tr></table></figure>



<p>&emsp;&emsp; 查看安装结果</p>
<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# php <span class="comment">--ri event</span></span><br><span class="line"></span><br><span class="line"><span class="title">event</span></span><br><span class="line"></span><br><span class="line"><span class="type">Event</span> sup<span class="keyword">port</span> =&gt; enabled</span><br><span class="line"><span class="type">Sockets</span> sup<span class="keyword">port</span> =&gt; enabled</span><br><span class="line"><span class="type">Debug</span> sup<span class="keyword">port</span> =&gt; disabled</span><br><span class="line"><span class="type">Extra</span> functionality sup<span class="keyword">port</span> including HTTP, DNS, and RPC =&gt; enabled</span><br><span class="line"><span class="type">OpenSSL</span> sup<span class="keyword">port</span> =&gt; enabled</span><br><span class="line"><span class="type">Thread</span> safety sup<span class="keyword">port</span> =&gt; disabled</span><br><span class="line"><span class="type">Extension</span> version =&gt; <span class="number">2.5</span><span class="number">.3</span></span><br><span class="line"><span class="title">libevent2</span> headers version =&gt; <span class="number">2.2</span><span class="number">.0</span>-alpha-dev</span><br></pre></td></tr></table></figure>

<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>&emsp;&emsp; 1,<code>问题</code>，<code>pecl install event</code>连不上，下载失败。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">pecl</span> <span class="selector-tag">channel-update</span> <span class="selector-tag">pecl</span><span class="selector-class">.php</span><span class="selector-class">.net</span></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 2,<code>问题</code>，<code>pecl channel-update pecl.php.net 失败</code></p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">pecl channel-update pecl.php.net</span><br><span class="line"></span><br><span class="line">Updating channel &quot;pecl.php.net&quot;</span><br><span class="line"><span class="keyword">Error: </span>No version number found in &lt;channel&gt; tag</span><br><span class="line">Invalid channel.xml file</span><br></pre></td></tr></table></figure>
<br>
&emsp;&emsp; 解决方案：

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pecl channel-update https://pecl.php.net/channel.xml</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 6 安装 MySQL 8.0.+</title>
    <url>/post/577cb4e8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="一、Linux下MySQL安装-YUM"><a href="#一、Linux下MySQL安装-YUM" class="headerlink" title="一、Linux下MySQL安装(YUM)"></a>一、Linux下MySQL安装(YUM)</h3><h4 id="1、检查并删除已经安装的MySql"><a href="#1、检查并删除已经安装的MySql" class="headerlink" title="1、检查并删除已经安装的MySql"></a>1、检查并删除已经安装的MySql</h4><ul>
<li>检查MariaDB</li>
</ul>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">shell</span>&gt; rpm -qa|grep mariadb</span><br><span class="line"><span class="attribute">mariadb</span>-server-<span class="number">5</span>.<span class="number">5</span>.<span class="number">60</span>-<span class="number">1</span>.el<span class="number">7</span>_<span class="number">5</span>.x<span class="number">86</span>_<span class="number">64</span></span><br><span class="line"><span class="attribute">mariadb</span>-<span class="number">5</span>.<span class="number">5</span>.<span class="number">60</span>-<span class="number">1</span>.el<span class="number">7</span>_<span class="number">5</span>.x<span class="number">86</span>_<span class="number">64</span></span><br><span class="line"><span class="attribute">mariadb</span>-libs-<span class="number">5</span>.<span class="number">5</span>.<span class="number">60</span>-<span class="number">1</span>.el<span class="number">7</span>_<span class="number">5</span>.x<span class="number">86</span>_<span class="number">64</span></span><br></pre></td></tr></table></figure>

<p><escape><a id="more"></a></escape></p>
<ul>
<li>删除mariadb</li>
</ul>
<p>&emsp;&emsp;如果不存在（上面检查结果返回空）则跳过步骤</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; rpm -e --nodeps mariadb-server</span><br><span class="line">shell&gt; rpm -e --nodeps mariadb</span><br><span class="line">shell&gt; rpm -e --nodeps mariadb-libs</span><br></pre></td></tr></table></figure>


<p>&emsp;&emsp;其实yum方式安装是可以不用删除mariadb的，安装MySQL会覆盖掉之前已存在的mariadb</p>
<ul>
<li>检查MySQL</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; rpm -qa|grep mysql</span><br></pre></td></tr></table></figure>

<ul>
<li>删除MySQL</li>
</ul>
<p>&emsp;&emsp;如果不存在（上面检查结果返回空）则跳过步骤</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; rpm -e --nodeps xxx</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 或</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -e --nodeps `rpm -qa | grep mysql`</span><br></pre></td></tr></table></figure>

<h4 id="2、添加MySQL-Yum-Repository"><a href="#2、添加MySQL-Yum-Repository" class="headerlink" title="2、添加MySQL Yum Repository"></a>2、添加MySQL Yum Repository</h4><blockquote>
<p>从CentOS 7开始，MariaDB成为Yum源中默认的数据库安装包。<br>也就是说在CentOS 7及以上的系统中使用yum安装MySQL默认安装的会是MariaDB（MySQL的一个分支）。<br>如果想安装官方MySQL版本，需要使用MySQL提供的Yum源。</p>
</blockquote>
<ul>
<li>下载MySQL源</li>
</ul>
<p>&emsp;&emsp;官网地址：<a href="https://dev.mysql.com/downloads/repo/yum/">https://dev.mysql.com/downloads/repo/yum/</a></p>
<ul>
<li>查看系统版本：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsb_release -a   查看系统版本</span><br><span class="line">getconf LONG_BIT 查看系统位数</span><br><span class="line"></span><br><span class="line">查看系统版本</span><br><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure>

<ul>
<li>选择对应的版本进行下载</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://repo.mysql.com//mysql80-community-release-el6-3.noarch.rpm</span><br></pre></td></tr></table></figure>

<ul>
<li>安装MySQL源</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh  mysql80-community-release-el6-3.noarch.rpm</span><br></pre></td></tr></table></figure>

<ul>
<li>检查是否安装成功</li>
</ul>
<p>&emsp;&emsp;执行成功后会在<code>/etc/yum.repos.d/</code>目录下生成两个repo文件<code>mysql-community.repo</code>及 <code>mysql-community-source.repo</code></p>
<p>&emsp;&emsp;并且通过yum repolist可以看到mysql相关资源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; yum repolist enabled | grep <span class="string">&quot;mysql.*-community.*&quot;</span></span><br><span class="line">!mysql-connectors-community/x86_64 MySQL Connectors Community                108</span><br><span class="line">!mysql-tools-community/x86_64      MySQL Tools Community                      90</span><br><span class="line">!mysql80-community/x86_64          MySQL 8.0 Community Server                113</span><br></pre></td></tr></table></figure>

<h4 id="3、选择MySQL版本"><a href="#3、选择MySQL版本" class="headerlink" title="3、选择MySQL版本"></a>3、选择MySQL版本</h4><blockquote>
<p>使用MySQL Yum Repository安装MySQL，<br>默认会选择当前最新的稳定版本，例如通过上面的MySQL源进行安装的话，默安装会选择MySQL 8.0版本，<br>如果就是想要安装该版本，可以直接跳过此步骤，<br>如果不是，比如我这里希望安装MySQL5.7版本，就需要“切换一下版本”：</p>
</blockquote>
<ul>
<li>查看当前MySQL Yum Repository中所有MySQL版本（每个版本在不同的子仓库中）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; yum repolist all | grep mysql</span><br></pre></td></tr></table></figure>

<ul>
<li>切换版本</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; sudo yum-config-manager --<span class="built_in">disable</span> mysql80-community</span><br><span class="line">shell&gt; sudo yum-config-manager --<span class="built_in">enable</span> mysql57-community</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;除了使用yum-config-manager之外，还可以直接编辑<code>/etc/yum.repos.d/mysql-community.repo</code>文件</p>
<p>&emsp;&emsp;enabled=0禁用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysql80-community]</span><br><span class="line">name=MySQL 8.0 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-8.0-community/el/7/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;enabled=1启用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable to use MySQL 5.7</span></span><br><span class="line">[mysql57-community]</span><br><span class="line">name=MySQL 5.7 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure>

<ul>
<li>检查当前启用的MySQL仓库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; yum repolist enabled | grep mysql</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;如果同时启用了多个仓库，安装时会选择最新版本</p>
<h4 id="4、安装MySQL"><a href="#4、安装MySQL" class="headerlink" title="4、安装MySQL"></a>4、安装MySQL</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; sudo yum install mysql-community-server</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;该命令会安装MySQL服务器 (mysql-community-server) 及其所需的依赖、相关组件，包括mysql-community-client、mysql-community-common、mysql-community-libs等</p>
<p>&emsp;&emsp;如果带宽不够，这个步骤时间会比较长，请耐心等待~</p>
<p>&emsp;&emsp;或</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install mysql-server</span><br></pre></td></tr></table></figure>

<h4 id="5、查询是否安装成功"><a href="#5、查询是否安装成功" class="headerlink" title="5、查询是否安装成功"></a>5、查询是否安装成功</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqladmin -V</span><br></pre></td></tr></table></figure>

<h4 id="6、启动MySQL"><a href="#6、启动MySQL" class="headerlink" title="6、启动MySQL"></a>6、启动MySQL</h4><p>&emsp;&emsp;启动前<code>最好</code>修改<code>/etc/my.cnf</code>配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line"></span><br><span class="line"> 添加：</span><br><span class="line"></span><br><span class="line"><span class="comment"># leeze</span></span><br><span class="line">port = 3306</span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="comment">#忘记密码时使用</span></span><br><span class="line"><span class="comment">#skip-grant-tables</span></span><br><span class="line"><span class="comment">#设置协议认证方式</span></span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br></pre></td></tr></table></figure>


<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; sudo service mysqld start</span><br></pre></td></tr></table></figure>

<ul>
<li>其他命令：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service mysqld status</span><br><span class="line">service mysqld stop</span><br><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure>

<h4 id="7、修改密码"><a href="#7、修改密码" class="headerlink" title="7、修改密码"></a>7、修改密码</h4><ul>
<li>初始密码</li>
</ul>
<p>&emsp;&emsp;MySQL第一次启动后会创建超级管理员账号root@localhost，初始密码存储在日志文件中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; sudo grep <span class="string">&#x27;temporary password&#x27;</span> /var/<span class="built_in">log</span>/mysqld.log</span><br></pre></td></tr></table></figure>

<ul>
<li>修改默认密码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shell&gt; mysql -uroot -p</span><br></pre></td></tr></table></figure>

<ul>
<li>修改密码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Cn@12345678&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;<code>这里会遇到一个问题</code>，mysql默认的密码规则必须包含特殊字符、大写字母、小写字母、数字、一定长度<br>&emsp;&emsp;并且对密码要求严格，至少8位，包含大小写等，</p>
<p>&emsp;&emsp;密码策略的所有参数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">&#x27;validate_password%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">&#x27;%validate_password.policy%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">&#x27;%validate_password.length%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;若想设置成123456，则要以下两条命令：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">set</span> global validate_password.<span class="attribute">policy</span>=0;  #设置为弱口令</span><br><span class="line"><span class="builtin-name">set</span> global validate_password.<span class="attribute">length</span>=1;  #密码最小长度为1</span><br><span class="line"></span><br><span class="line">alter<span class="built_in"> user </span>user() identified by <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>


<h4 id="8、允许root远程访问"><a href="#8、允许root远程访问" class="headerlink" title="8、允许root远程访问"></a>8、允许root远程访问</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#任何主机</span></span><br><span class="line">mysql&gt;GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;root&#x27;</span> WITH GRANT OPTION;</span><br><span class="line"><span class="comment">#指定主机</span></span><br><span class="line">mysql&gt;GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;xxxx&#x27;</span>@’xx.xx.xx.xx’ IDENTIFIED BY <span class="string">&#x27;xxxx&#x27;</span> WITH GRANT OPTION;</span><br><span class="line"><span class="comment"># 然后刷新权限</span></span><br><span class="line">mysql&gt;flush privileges;</span><br></pre></td></tr></table></figure>

<ul>
<li>首先查看用户表</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host,<span class="keyword">plugin</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;发现登录主机是localhost，当然不能登录，把root用户的localhost设置为%，这样任意主机都可以连接。</p>
<p>&emsp;&emsp;修改连接权限(%表示所有ip，如果只指定某台电脑，则改成相应的ip)</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">update<span class="built_in"> user </span><span class="builtin-name">set</span> <span class="attribute">host</span>=<span class="string">&#x27;%&#x27;</span> where<span class="built_in"> user </span>=<span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>更改加密方式</li>
</ul>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">update<span class="built_in"> user </span><span class="builtin-name">set</span> <span class="attribute">plugin</span>=<span class="string">&#x27;mysql_native_password&#x27;</span> where<span class="built_in"> user </span>=<span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>授权远程连接</li>
</ul>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> root@<span class="string">&#x27;%&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>执行刷新权限</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>centos系统之部署ShowDoc</title>
    <url>/post/ef6fd2ef.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><div class="note info no-icon"><p>&emsp;&emsp;showdoc是一个php语言编写的API文档系统，专为程序员设计，界面布局简单功能强大，支持在线和私服部署。</p>
</div>

<a id="more"></a>

<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol>
<li>支持markdown语法</li>
<li>支持多用户协作，你可以在项目下面随意添加多个用户一起完成api文档的写作。</li>
<li>可以分享并导出项目，生成需要的文档格式如doc，可以离线浏览</li>
<li>支持响应式，手机电脑同样精彩</li>
<li>支持项目转让</li>
<li>支持模版插入</li>
<li>支持历史版本，你可以把操作恢复到以前的版本。</li>
<li>showdoc完全开源</li>
<li>可以部署到自己的服务器</li>
<li>如果在线使用，可以设置自己的个性域名，也可以对文档进行加密，浏览者需要密码才能访问</li>
<li>可以通过一个在线测试api的工具，直接生成markdown，你几乎不用写代码就能过所有的参数自动生成</li>
</ol>
<br>

<p>&emsp;&emsp; 下载地址：<a href="https://github.com/star7th/showdoc">https://github.com/star7th/showdoc</a><br>&emsp;&emsp; 官网地址：<a href="https://www.showdoc.cc/">https://www.showdoc.cc</a></p>
<h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>&emsp;&emsp; showdoc需要运行在<code>php</code>环境上，因此需要安装好<code>nginx</code>和<code>php</code><br>&emsp;&emsp; nginx和php的安装步骤这里不再赘述，网上相关安装教程数不胜数</p>
<p>&emsp;&emsp; <code>注意php版本最好5.4以上</code></p>
<h4 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h4><p>&emsp;&emsp; <a href="https://github.com/star7th/showdoc">https://github.com/star7th/showdoc</a></p>
<p>&emsp;&emsp; 将zip包传到部署好的nginx和php所在服务器<br>&emsp;&emsp; 放到nginx默认的网站目录html下解压</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">unzip showdoc-<span class="literal">master</span>.zip </span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>&emsp;&emsp; 请确保nginx和php对源码包下这5个目录可写权限：<br>&emsp;&emsp; /Application/Runtime 、 /Public/Uploads 、 /Sqlite 、 /Sqlite、showdoc.db.php</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">chown -R nginx.nginx  <span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>html/showdoc-master</span><br><span class="line"><span class="comment"># nginx.nignx表示属主和属组，主与组的名字取决于nginx和php的启动用户是谁</span></span><br><span class="line"><span class="comment"># 如果不太理解，也可以直接chmod 777 -R 对以上的几个目录分别授予写入权限</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">cd</span> <span class="string">showdoc-master/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">chmod</span> <span class="string">777 -R server/</span></span><br><span class="line"><span class="attr">chmod</span> <span class="string">777 -R Public/Uploads/</span></span><br><span class="line"><span class="attr">chmod</span> <span class="string">777 -R install/</span></span><br><span class="line"><span class="attr">chmod</span> <span class="string">777 -R Sqlite/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="安装showdoc"><a href="#安装showdoc" class="headerlink" title="安装showdoc"></a>安装showdoc</h4><p>&emsp;&emsp; showdoc采用web安装方式，非常人性化<br>&emsp;&emsp; 检查nginx和php是否启动成功，配置好nginx虚拟主机目录指向showdoc目录并关联php</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置nginx虚拟主机目录指向showdoc源码包目录</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> <span class="regexp">showdoc.*</span>*<span class="regexp">*.com</span>;</span><br><span class="line">    <span class="attribute">root</span>  /usr/local/nginx/showdoc-master;</span><br><span class="line">    <span class="attribute">index</span> index.php index.html;</span><br><span class="line">   </span><br><span class="line"><span class="comment">#配置nginx关联php</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span> <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">        <span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">        <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">        <span class="attribute">fastcgi_param</span> SCRIPT_FILENAME  <span class="variable">$DOCUMENT_ROOT</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 在浏览器访问 <a href="http://showdoc.***.com/install/">http://showdoc.***.com/install/</a> 按步骤安装即可。</p>
<p>&emsp;&emsp; 。。。</p>
<p>&emsp;&emsp; 按网页中提示删除install目录(防止重装)：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">rm -rf  <span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>html<span class="regexp">/showdoc-master/i</span>nstall/</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp; 安装完毕后可使用 <a href="http://showdoc.***.com/index.php">http://showdoc.***.com/index.php</a> 访问登录首页，默认账号showdoc（密码：123456）登录，也可以自行注册账户）</p>
<p>&emsp;&emsp; <code>至此showdoc部署完成，尽情探索吧</code></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>API文档系统</category>
      </categories>
      <tags>
        <tag>ShowDoc</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven 打包将 system 的文件添加到 war 中</title>
    <url>/post/63dee017.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="文章背景"><a href="#文章背景" class="headerlink" title="文章背景"></a>文章背景</h4><div class="note info no-icon"><p>&emsp;&emsp; 在个人的工作中使用了百度的编辑器的jar文件，但是在阿里云的maven镜像中是没有这个文件的，以前自己的私服里面有这个文件。<br>后面使用，<scope>system</scope> 添加后发现不能打包的war文件中。<br>对于国内的互联网的资料，我个人的意见是能用 English 的还是用这样的方式去查询吧。</p>
</div>

<a id="more"></a>

<h4 id="基础姿势"><a href="#基础姿势" class="headerlink" title="基础姿势"></a>基础姿势</h4><div class="note info no-icon"><p>个人在网络上寻找到的资料很多都是使用 spring-boot-maven-plugin 的 plugin ，首先我们来了解下作用域：</p>
<ul>
<li>compile 默认的scope，表示 dependency 都可以在生命周期中使用。而且，这些dependencies 会传递到依赖的项目中。适用于所有阶段，会随着项目一起发布</li>
<li>provided 跟compile相似，但是表明了dependency 由JDK或者容器提供，例如Servlet AP和一些Java EE APIs。这个scope 只能作用在编译和测试时，同时没有传递性。</li>
<li>runtime 表示dependency不作用在编译时，但会作用在运行和测试时，如JDBC驱动，适用运行和测试阶段。</li>
<li>test 表示dependency作用在测试时，不作用在运行时。 只在测试时使用，用于编译和运行测试代码。不会随项目发布。</li>
<li>system 跟provided 相似，但是在系统中要以外部JAR包的形式提供，maven不会在repository查找它。</li>
</ul>
</div>

<br>

<blockquote>
<p>下面添加一个解决依赖冲突的办法，这个是题外话。</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这里是举个栗子，我们在添加别人写好的工具类的时候，会自动依赖很多jar，并且和项目本身的jar有冲突，用这个可以解决。其他是本地一定有引用这个jar文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hamcrest-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hamcrest<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><blockquote>
<p>这边先给出spring-boot-maven-plugin的配置，至于能不能将本地 jar 打入 war 中自己测试（实践出真知）：</p>
</blockquote>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring-boot.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">includeSystemScope</span>&gt;</span>true<span class="tag">&lt;/<span class="name">includeSystemScope</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>以下是我本地使用的百度的UE编辑器的jar</p>
</blockquote>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- 百度的编辑器，这个在自己的私服上面，如果要使用的话需要配置 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baidu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ueditor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">systemPath</span>&gt;</span>$</span><span class="template-variable">&#123;project.basedir&#125;</span><span class="xml">/libs/ueditor-1.1.2.jar<span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 记得这个地方要添加版本的，反正我很奇怪没有添加版本是正常运行了 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">webResources</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$</span><span class="template-variable">&#123;project.basedir&#125;</span><span class="xml">/libs<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>WEB-INF/lib<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.jar<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">webResources</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>linux之使用alternatives 切换Java版本</title>
    <url>/post/4824a74d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> xception in thread “main” java.lang.UnsupportedClassVersionError: M : Unsupported major.minor version</p>
<p>在linux上编译的java程序，在运行的时候报这个错误。</p>
<a id="more"></a>

<p>经过查找原来是javac的版本和java的版本不一致导致的，</p>
<p>因为我机器上安装了系统自带的java-1.5.0-gcj和1.7.0的openjdk，另外我还自己安装了1.8.0的Oracle 官方的jdk</p>
<p>导致编译器的版本和运行器的版本不一致。</p>
<p>解决这个问题的方法是使用alternatives 切换默认的java命令</p>
<p>这个工具的大概原理是</p>
<p>在/usr/bin目录下创建一个符号链接，指向/etc/alternatives/ 下的的文件，而该文件依然是一个符号链接，举个栗子</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">[root@node1 mec]# ll <span class="regexp">/usr/</span>bin/java</span><br><span class="line">lrwxrwxrwx. <span class="number">1</span> root root <span class="number">22</span> <span class="number">4</span>月  <span class="number">16</span> <span class="number">16</span>:<span class="number">06</span> <span class="regexp">/usr/</span>bin<span class="regexp">/java -&gt; /</span>etc<span class="regexp">/alternatives/</span>java</span><br></pre></td></tr></table></figure>

<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">[root@node1 mec]# ll  <span class="regexp">/etc/</span>alternatives/java</span><br><span class="line">lrwxrwxrwx. <span class="number">1</span> root root <span class="number">26</span> <span class="number">4</span>月  <span class="number">16</span> <span class="number">16</span>:<span class="number">06</span> <span class="regexp">/etc/</span>alternatives<span class="regexp">/java -&gt; /u</span>sr<span class="regexp">/java/</span><span class="keyword">default</span><span class="regexp">/bin/</span>java</span><br></pre></td></tr></table></figure>

<p>/etc/alternatives/java会指向最终的可执行文件，如果你有3个版本的java</p>
<p>就需要运行 </p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">[root@node1 mec]<span class="comment"># alternatives --config java</span></span><br><span class="line"></span><br><span class="line">共有 <span class="number">3</span> 个程序提供“java”。</span><br><span class="line"></span><br><span class="line">  选择    命令</span><br><span class="line">-----------------------------------------------</span><br><span class="line">   <span class="number">1</span>           /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">jvm</span>/<span class="title">jre</span>-1.5.0-<span class="title">gcj</span>/<span class="title">bin</span>/<span class="title">java</span></span></span><br><span class="line">*  <span class="number">2</span>           /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">jvm</span>/<span class="title">jre</span>-1.7.0-<span class="title">openjdk</span>.<span class="title">x86_64</span>/<span class="title">bin</span>/<span class="title">java</span></span></span><br><span class="line"> + <span class="number">3</span>           /usr/java/default/bin/java</span><br><span class="line"></span><br><span class="line">按 Enter 来保存当前选择[+]，或键入选择号码：</span><br></pre></td></tr></table></figure>

<p>然后选择你想要选择的选项保存就好了</p>
<p>如果这个列表里面没有你想要的而且已经安装了的程序，就需要添加 命令为</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">alternatives --install <span class="regexp">/usr/</span>bin<span class="regexp">/java java /u</span>sr<span class="regexp">/java/</span><span class="keyword">default</span><span class="regexp">/bin/</span>java <span class="number">500</span></span><br></pre></td></tr></table></figure>

<p>这个命令实际操作的是 /var/lib/alternatives目录下对应的文件</p>
<p>alternatives的安装删除显示等操作都是通过读取和修改这个目录下的文件实现的，而且是文本文件，感兴趣的可以取阅读一下</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Jdk</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux之安装jdk及环境配置</title>
    <url>/post/2aaf08ad.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="一、Linux下JDK安装"><a href="#一、Linux下JDK安装" class="headerlink" title="一、Linux下JDK安装"></a>一、Linux下JDK安装</h4><h5 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h5><p><code>通过yum安装的默认路径为：/usr/lib/jvm</code></p>
<a id="more"></a>

<ol>
<li>首先执行以下命令查看可安装的jdk版本</li>

<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">yum -y list <span class="keyword">java*</span></span><br><span class="line"><span class="keyword">or</span></span><br><span class="line"><span class="keyword">yum </span>search <span class="keyword">jdk</span></span><br><span class="line"><span class="keyword"></span></span><br></pre></td></tr></table></figure>


<li>选择自己需要的jdk版本进行安装，比如这里安装1.8，执行以下命令：</li>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">yum</span> install -y java-<span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>-openjdk-devel.x<span class="number">86</span>_<span class="number">64</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
等待安装完成即可。

<li>安装完成之后，查看安装的jdk版本，输入以下指令：</li>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">java -<span class="built_in">version</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
此处便可以看到自己安装的jdk版本信息。
你如果好奇这个自动安装把jdk安装到哪里去了，其实你可以在usr/lib/jvm下找到它们。
ok，完成！

<li>卸载</li>

<p> 检测是否已经安装JDK<br> <figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">rpm -<span class="keyword">qa</span> | <span class="keyword">grep</span> jdk</span><br></pre></td></tr></table></figure></p>
<p> 卸载系统自带jdk</p>
<p> 删除系统自带JDK的命令，两种方法都可以：</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-e</span> –<span class="selector-tag">nodeps</span> <span class="selector-tag">java-1</span><span class="selector-class">.6</span><span class="selector-class">.0-openjdk-1</span><span class="selector-class">.6</span><span class="selector-class">.0</span><span class="selector-class">.0-1</span><span class="selector-class">.41</span><span class="selector-class">.1</span><span class="selector-class">.10</span><span class="selector-class">.4</span><span class="selector-class">.e16</span><span class="selector-class">.x86_64</span></span><br><span class="line"><span class="selector-tag">OR</span></span><br><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">-y</span> <span class="selector-tag">remove</span>  <span class="selector-tag">java-1</span><span class="selector-class">.6</span><span class="selector-class">.0-openjdk-1</span><span class="selector-class">.6</span><span class="selector-class">.0</span><span class="selector-class">.0-1</span><span class="selector-class">.41</span><span class="selector-class">.1</span><span class="selector-class">.10</span><span class="selector-class">.4</span><span class="selector-class">.el6</span><span class="selector-class">.x86_64</span></span><br></pre></td></tr></table></figure>

<p> 继续用第一步的命令检测，或者用：</p>
 <figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">rpm -<span class="keyword">qa</span> | <span class="keyword">grep</span> gcj</span><br></pre></td></tr></table></figure>
<p> 然后再用上面删除的方法把libgcj和java-gcj的文件删掉.</p>
</ol>

<h5 id="rpm安装"><a href="#rpm安装" class="headerlink" title="rpm安装"></a>rpm安装</h5><ol>
<li>获取文件权限</li>

<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">chmod</span> -R <span class="number">777</span>    /storage/sdc-data/software/jdk-<span class="number">8</span>u<span class="number">65</span>-linux-x<span class="number">64</span>.rpm</span><br></pre></td></tr></table></figure>

<li>安装JDK</li>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">rpm -ivh  <span class="regexp">/storage/</span>sdc-data<span class="regexp">/software/</span>jdk-<span class="number">8</span>u65-linux-x64.rpm</span><br></pre></td></tr></table></figure>

<p>该命令默认将jdk安装到了/usr/java目录下。</p>
<li>移动安装目录</li>

<p> 将jdk安装目录，重命名并且移动到目录/usr/local/下。并查看是否移动成功。</p>
 <figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">mv</span> /usr/java/jdk<span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_<span class="number">45</span> /usr/local/jdk<span class="number">1</span>.<span class="number">8</span></span><br></pre></td></tr></table></figure>

 <li>rpm包的卸载</li>

<p>   输入命令查看rpm包安装信息，如果第一条未出现信息，可以使用第二条命令查看，如果都没  有可能是未安装或者是tar包安装的<br>  <figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">rpm -<span class="keyword">qa</span> | <span class="keyword">grep</span> jdk</span><br></pre></td></tr></table></figure><br>  我用上述rpm包安装之后，用命令查看，提示如下：<br>  <figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>master100 local]# rpm -qa | grep jdk</span><br><span class="line">jdk1<span class="number">.8</span><span class="number">-1.8</span><span class="number">.0</span>_181-fcs.x86_64</span><br></pre></td></tr></table></figure><br>  知道安装的rpm包名后就可以卸载了，卸载命令如下：<br>  <figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">rpm</span> -e --nodeps jdk<span class="number">1</span>.<span class="number">8</span>-<span class="number">1</span>.<span class="number">8</span>.<span class="number">0</span>_<span class="number">181</span>-fcs.x<span class="number">86</span>_<span class="number">64</span></span><br></pre></td></tr></table></figure><br>  卸载完成后删除环境变量<br>  <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><br> </p></ol><p></p>
<h5 id="tar包安装"><a href="#tar包安装" class="headerlink" title="tar包安装"></a>tar包安装</h5> <ol>

 <li>下载 jdk-8u231-linux-x64.tar.gz</li>

 <figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">wget</span> https://download.oracle.com/otn/java/jdk/<span class="number">8</span>u<span class="number">231</span>-b<span class="number">11</span>/<span class="number">5</span>b<span class="number">13</span>a<span class="number">193868</span>b<span class="number">4</span>bf<span class="number">28</span>bcb<span class="number">45</span>c<span class="number">792</span>fce<span class="number">896</span>/jdk-<span class="number">8</span>u<span class="number">231</span>-linux-x<span class="number">64</span>.tar.gz</span><br></pre></td></tr></table></figure>

 <li>解压文件，命令如下，输入后会出现一长串的提示：</li>

 <figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">tar</span> -zxvf /usr/local/jdk-<span class="number">8</span>u<span class="number">231</span>-linux-x<span class="number">64</span>.tar.gz</span><br></pre></td></tr></table></figure>

 <li>解压后文件夹名为：jdk1.8.0_231</li>

<p> 在这里修改一下文件名，将jdk1.8.0_231改成java，方便我们后面配置环境变量，在这也可以不修改，在配置环境变量时要注意文件名不能写错，修改文件名命令如下：</p>
 <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mv <span class="regexp">/usr/</span>local<span class="regexp">/jdk1.8.0_231 /u</span>sr<span class="regexp">/local/</span>java</span><br></pre></td></tr></table></figure>

 <li>tar包的卸载</li>

<p> 将安装包删除，然后把配置文件内添加的环境变量删除</p>
<p> 删除安装包的命令如下：</p>
 <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">rm -rf <span class="regexp">/usr/</span>local/java</span><br></pre></td></tr></table></figure>
<p> 修改配置文件的方法和上述配置环境变量一样</p>
 </ol>

<h4 id="二、配置环境变量"><a href="#二、配置环境变量" class="headerlink" title="二、配置环境变量"></a>二、配置环境变量</h4> <ol>

  <li>用vi命令 打开文件,打开后默认是命令模式,输入a或i可进入编辑模式</li>

  <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vi <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure>

  <li>在文件最后配置如下变量,编辑完成按ESC键退出编辑,然后输入:wq或者:x保存退出.</li>

  <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">set java environment</span><br><span class="line">JAVA_HOME=<span class="regexp">/usr/</span>local<span class="regexp">/java/</span>jdk1.<span class="number">8.0</span>_231        </span><br><span class="line">JRE_HOME=<span class="regexp">/usr/</span>local<span class="regexp">/java/</span>jdk1.<span class="number">8.0</span>_231/jre     </span><br><span class="line">CLASS_PATH=.:<span class="variable">$JAVA_HOME</span><span class="regexp">/lib/</span>dt.jar:<span class="variable">$JAVA_HOME</span><span class="regexp">/lib/</span>tools.jar:<span class="variable">$JRE_HOME</span>/lib</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span><span class="regexp">/bin:$JRE_HOME/</span>bin</span><br><span class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure>

  <li>然后输入source /etc/profile命令，使配置文件生效。</li>

   <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line"></span><br></pre></td></tr></table></figure>

   <li>建立软连接</li>

<p>   <code>tar形式</code></p>
   <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">ln -s <span class="regexp">/usr/</span>local<span class="regexp">/java/</span>jdk1.<span class="number">8.0</span>_231<span class="regexp">/bin/</span>java <span class="regexp">/usr/</span>bin/java</span><br></pre></td></tr></table></figure>

  <li>检测配置是否成功</li>

   <figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">java -<span class="built_in">version</span></span><br></pre></td></tr></table></figure>

  </ol>

<p>  <code>有问题参考：</code><a href="/post/4824a74d.html" title="linux之使用alternatives 切换Java版本">linux之使用alternatives 切换Java版本</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Jdk</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot之统一包装响应</title>
    <url>/post/88151b22.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;SpringBoot 中可以基于 <code>ControllerAdvice</code> 和 <code>HttpMessageConverter</code> 实现对数据返回的包装。</p>
<p>&emsp;&emsp;实现如下，先来写一个 POJO 来定义一下返回格式：</p>
<a id="more"></a>


<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.demo.common.exception.base.ErrorCode;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Response</span>&lt;<span class="type">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> int code = HttpStatus.OK.value();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg = <span class="string">&quot;success&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> T <span class="keyword">data</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Response(T <span class="keyword">data</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.<span class="keyword">data</span> = <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Response(int code, String msg) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Response(int code, T <span class="keyword">data</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.<span class="keyword">data</span> = <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Response(ErrorCode errorCode) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = errorCode.getCode();</span><br><span class="line">        <span class="keyword">this</span>.msg = errorCode.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Response(ErrorCode errorCode, T <span class="keyword">data</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = errorCode.getCode();</span><br><span class="line">        <span class="keyword">this</span>.msg = errorCode.getMessage();</span><br><span class="line">        <span class="keyword">this</span>.<span class="keyword">data</span> = <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<pre><code>这里用到了lombok，lombok的使用介绍不在本文范围内。</code></pre>
<p>用一个 ResponseBodyAdvice 类的实现包装 Controller 的返回值：<br>以下是我以前的实现方式：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> com.example.demo.common.RequestContextHolder;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.slf4j.Logger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.slf4j.LoggerFactory;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.core.MethodParameter;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.core.annotation.Order;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.http.MediaType;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.http.server.ServerHttpRequest;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.http.server.ServerHttpResponse;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice;</span></span><br><span class="line"></span><br><span class="line">@ControllerAdvice</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FormatResponseBodyAdvice</span> <span class="keyword">implements</span> <span class="title">ResponseBodyAdvice</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(FormatResponseBodyAdvice.class);</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> boolean supports(MethodParameter returnType, Class converterType) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Object beforeBodyWrite(Object body, MethodParameter returnType, MediaType selectedContentType, Class selectedConverterType, ServerHttpRequest request, ServerHttpResponse response) &#123;</span><br><span class="line"></span><br><span class="line">        Object wrapperBody = body;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!(body <span class="keyword">instanceof</span> Response)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (body <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">                    wrapperBody = objectMapper.writeValueAsString(<span class="keyword">new</span> Response&lt;&gt;(body));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    wrapperBody = <span class="keyword">new</span> Response&lt;&gt;(body);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;request uri path: &#123;&#125;, format response body error&quot;</span>, request.getURI().getPath(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> wrapperBody;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note primary no-icon"><p>为什么要对返回类型是 String 时进行特殊处理呢？因为如果直接返回 new Response&lt;&gt;(body) 的话，在使用时返回 String 类型的话，会报类型转换异常，当时也没有理解什么原因导致的，所以最后使用了 jackson 对 Response 又做了一次序列化。</p>
</div>

<p>今天找到了导致这个异常的原因：</p>
<div class="note primary no-icon"><p>因为在所有的 HttpMessageConverter 实例集合中，StringHttpMessageConverter 要比其它的 Converter 排得靠前一些。我们需要将处理 Object 类型的 HttpMessageConverter 放得靠前一些，这可以在 Configuration 类中完成：</p>
</div>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.context</span><span class="selector-class">.annotation</span><span class="selector-class">.Configuration</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.http</span><span class="selector-class">.converter</span><span class="selector-class">.HttpMessageConverter</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.http</span><span class="selector-class">.converter</span><span class="selector-class">.json</span><span class="selector-class">.MappingJackson2HttpMessageConverter</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.servlet</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span><span class="selector-class">.WebMvcConfigurer</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.List</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@Configuration</span></span><br><span class="line">public class WebConfiguration implements WebMvcConfigurer &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@Override</span></span><br><span class="line">    public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) &#123;</span><br><span class="line">        <span class="selector-tag">converters</span><span class="selector-class">.add</span>(0, <span class="selector-tag">new</span> <span class="selector-tag">MappingJackson2HttpMessageConverter</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后 FormatResponseBodyAdvice 就可以修改为如下实现：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.core.MethodParameter;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.http.MediaType;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.http.server.ServerHttpRequest;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.http.server.ServerHttpResponse;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.http.server.ServletServerHttpRequest;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@ControllerAdvice</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FormatResponseBodyAdvice</span> <span class="keyword">implements</span> <span class="title">ResponseBodyAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> boolean supports(MethodParameter returnType, Class converterType) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Object beforeBodyWrite(Object body, MethodParameter returnType, MediaType selectedContentType,</span><br><span class="line">                                  Class selectedConverterType, ServerHttpRequest request, ServerHttpResponse response) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(body <span class="keyword">instanceof</span> Response)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Response&lt;&gt;(body);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> body;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>比之前的实现方式优雅了很多而且不用再处理 jackson 的异常了。</p>
<p>写一个 Controller 来尝试一下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(<span class="meta-string">&quot;/hello&quot;</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String hello() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>请求这个端点得到结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;code&quot;</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">&quot;msg&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: <span class="string">&quot;hello world!&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>说明我们的配置是成功的，同时可以在相应头中看到：</p>
<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line"><span class="title">content</span>-<span class="keyword">type</span>: application/json;charset=<span class="type">UTF</span>-8</span><br></pre></td></tr></table></figure>

<p>如果是之前的实现方式，这里的值就是：</p>
<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line"><span class="title">content</span>-<span class="keyword">type</span>: html/text</span><br></pre></td></tr></table></figure>

<p>也不太符合 <code>restful</code> 规范.</p>
]]></content>
      <categories>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo之404 跳转</title>
    <url>/post/20e74403.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="新建-404-页面"><a href="#新建-404-页面" class="headerlink" title="新建 404 页面"></a>新建 404 页面</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>404</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="编辑-404-md"><a href="#编辑-404-md" class="headerlink" title="编辑 404.md"></a>编辑 <code>404.md</code></h4><p>&emsp;&emsp;添加 Front-matter 信息 permalink: /404 并替换自己的网站地址，下面的网址是腾讯公益信息宝贝回家，寻找失踪儿童的信息。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">404</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-11-08 21:19:51</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">/404</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">type=&quot;text/javascript&quot;</span> <span class="string">src=&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;</span> <span class="string">charset=&quot;utf-8&quot;</span> <span class="string">homePageUrl=&quot;https://pzb568.github.io&quot;</span> <span class="string">homePageName=&quot;回到我的主页&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo之永久链接</title>
    <url>/post/2c523943.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;设置永久链接，所有的文章都是中文的以至于网站地址特别长，不方便记忆，不美观。利用 hexo-abbrlink 这个插件可以解决。</p>
<a id="more"></a>

<h4 id="安装-hexo-abbrlink"><a href="#安装-hexo-abbrlink" class="headerlink" title="安装 hexo-abbrlink"></a>安装 hexo-abbrlink</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-abbrlink <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<h4 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h4><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">permalink:</span> post/:abbrlink.html</span><br><span class="line"><span class="symbol">abbrlink:</span></span><br><span class="line"><span class="symbol">  alg:</span> crc32  <span class="meta"># 算法：crc16(default) and crc32</span></span><br><span class="line"><span class="symbol">  rep:</span> hex    <span class="meta"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo之主题更新问题处理</title>
    <url>/post/58bb50d8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;由于 next 主题经常更新，自己又在本地大量修改主题，更新中会有很多问题，经过很多次折腾及网络上其他朋友的教程，我找到了不错的处理方法。</p>
<a id="more"></a>

<h3 id="进入主题目录并更新"><a href="#进入主题目录并更新" class="headerlink" title="进入主题目录并更新"></a>进入主题目录并更新</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">cd</span> <span class="string">themes/next</span></span><br><span class="line"><span class="attr">git</span> <span class="string">pull</span></span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;因为修改了很多的配置项目，所以更新<code>失败</code>了</p>
<h4 id="一，解决更新"><a href="#一，解决更新" class="headerlink" title="一，解决更新"></a>一，解决更新</h4><h5 id="1，将修改储藏到暂存区"><a href="#1，将修改储藏到暂存区" class="headerlink" title="1，将修改储藏到暂存区"></a>1，将修改储藏到暂存区</h5><p>&emsp;&emsp;我们可以通过 <code>git stash</code> 这句命令将对主题文件的修改储存到本地的暂存区：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git stash</span></span><br></pre></td></tr></table></figure>

<h5 id="2，执行更新"><a href="#2，执行更新" class="headerlink" title="2，执行更新"></a>2，执行更新</h5><p>&emsp;&emsp;我们现在需要再次使用 git pull 命令来获取最新的主题文件，别担心，这次不会再有上面的错误了</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git pull</span></span><br></pre></td></tr></table></figure>

<h5 id="3，从暂存区取出修改"><a href="#3，从暂存区取出修改" class="headerlink" title="3，从暂存区取出修改"></a>3，从暂存区取出修改</h5><p>&emsp;&emsp;我们现在要通过执行 git stash pop 这句命令来从暂存区取出修改。</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">git stash <span class="keyword">pop</span></span><br></pre></td></tr></table></figure>

<h4 id="二，报错"><a href="#二，报错" class="headerlink" title="二，报错"></a>二，报错</h4><p>&emsp;&emsp;如果报错如下内容需要进入提示的文件修改</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">$ git stash pop</span><br><span class="line">Auto-merging _config.yml</span><br><span class="line"><span class="keyword">CONFLICT</span> (content): Merge <span class="keyword">conflict</span> <span class="keyword">in</span> _config.yml</span><br></pre></td></tr></table></figure>

<h5 id="1，进入文件"><a href="#1，进入文件" class="headerlink" title="1，进入文件"></a>1，进入文件</h5><p>&emsp;&emsp;可以看到文中 &lt;&lt;&lt;&lt;&lt;&gt;&gt;&gt;&gt;&gt;b8e436 中间是你自己的分支，删掉一个就可以了</p>
<h5 id="2，提交记录"><a href="#2，提交记录" class="headerlink" title="2，提交记录"></a>2，提交记录</h5><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> _config.yml</span></span><br><span class="line">git commit -m <span class="string">&quot;冲突处理&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="3，在更新"><a href="#3，在更新" class="headerlink" title="3，在更新"></a>3，在更新</h5><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git pull</span></span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
<p>主题升级成功。</p>

</blockquote>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux之hosts主机名不对</title>
    <url>/post/2cf589fe.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="现象："><a href="#现象：" class="headerlink" title="现象："></a>现象：</h4><div class="note info no-icon"><p>[root@bogon ~]#<br>[root@bogon ~]# hostname<br>bogon</p>
</div>

<a id="more"></a>

<h4 id="查看几个相关文件，都正确"><a href="#查看几个相关文件，都正确" class="headerlink" title="查看几个相关文件，都正确"></a>查看几个相关文件，都正确</h4><div class="note info no-icon"><p>[root@bogon ~]# vi /etc/sysconfig/network</p>
<p>NETWORKING=yes<br>HOSTNAME=localhost.localdomain</p>
<p>[root@bogon ~]# vi /etc/hosts</p>
<p>127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</p>
</div>

<h4 id="继续，dns的的配置"><a href="#继续，dns的的配置" class="headerlink" title="继续，dns的的配置"></a>继续，dns的的配置</h4><div class="note info no-icon"><p>[root@bogon logs]# vi /etc/resolv.conf<br>#Generated by NetworkManager<br>search com (大爷的，这行不知道咋来的，删不掉)<br>nameserver 10.211.55.1</p>
</div>

<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h4><div class="note success no-icon"><p>[root@bogon ~]# hostname localhost<br>[root@localhost logs]# hostname<br>localhost</p>
</div>

<h4 id="又变回去"><a href="#又变回去" class="headerlink" title="又变回去"></a>又变回去</h4><p>若4操作后重启发现hostname又变回去了，如下操作</p>
<div class="note default"><p><code>vi /etc/hosts</code>，追加 本机IP localhost</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"><span class="addition">+ 10.211.55.12 localhost（追加的）</span></span><br></pre></td></tr></table></figure>
</div>

<hr>
<h3 id="centos6修改主机名"><a href="#centos6修改主机名" class="headerlink" title="centos6修改主机名"></a>centos6修改主机名</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">第一种方式：临时修改</span><br><span class="line">临时修改主机名，但是重启后又会恢复</span><br><span class="line">修改方式如下：</span><br><span class="line">shell#hostname &lt;主机名&gt;</span><br><span class="line">第二种方式：永久修改</span><br><span class="line">修改配置文件，使其永久生效</span><br><span class="line">shell# sed -i “s/<span class="attribute">HOSTNAME</span>=localhost/HOSTNAME=&lt;主机名&gt;/g” /etc/sysconfig/network</span><br><span class="line">意思就是修改配置文件/etc/sysconfig/network文件，将新的主机名加入到配置文件里面</span><br></pre></td></tr></table></figure>

<h3 id="centos7修改主机名"><a href="#centos7修改主机名" class="headerlink" title="centos7修改主机名"></a>centos7修改主机名</h3><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line">第一种方式：临时修改</span><br><span class="line">这个和<span class="string">centos6一</span>样，都是直接在命令行敲<span class="string">hostname </span>+新的主机名，<span class="string">eg：</span><span class="string">hostname </span>&lt;主机名&gt;</span><br><span class="line">第二种方式： 永久修改</span><br><span class="line">这种方式和<span class="string">centos6有</span>所不同，我们看一下如何操作</span><br><span class="line"><span class="string">shell#</span> <span class="string">hostnamectl </span><span class="built_in">set-hostname</span> &lt;主机名&gt;</span><br><span class="line">还可以直接修改配置文件/<span class="string">etc/</span><span class="string">hostname直</span>接将新的主机名加入到配置文件中</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>bootstrap-table 显示行号</title>
    <url>/post/644b0626.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="动态生成行号"><a href="#动态生成行号" class="headerlink" title="动态生成行号"></a>动态生成行号</h4><p>思想：借助bootstrap-table 本身的<code>index</code>属性和<code>options</code>的对象， 巧妙的的通过<code>formatter</code> 实现</p>
<a id="more"></a>

<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;field: <span class="string">&quot;Number&quot;</span>,title: <span class="string">&quot;序号&quot;</span>,halign: &#x27;center&#x27;,align:&#x27;center&#x27;,</span><br><span class="line">    formatter:function (<span class="name">value</span>, row, index) &#123;</span><br><span class="line">        var options = $table.bootstrapTable(<span class="string">&quot;getOptions&quot;</span>)<span class="comment">;</span></span><br><span class="line">        return (<span class="name">options.pageNumber-1</span>)*(<span class="name">options.pageSize</span>)+index+1;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>BootStrap</category>
        <category>table</category>
      </categories>
      <tags>
        <tag>BootStrap</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins之shell 部署脚本</title>
    <url>/post/5f2bf15a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="记录一下，以防遗忘。"><a href="#记录一下，以防遗忘。" class="headerlink" title="记录一下，以防遗忘。"></a>记录一下，以防遗忘。</h4><a id="more"></a>

<img src="/post/5f2bf15a/shell.jpg" class title="部署脚本示例图">
]]></content>
      <categories>
        <category>Jenkins</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins之SSH Publishers时踩的坑</title>
    <url>/post/4995ab80.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="source相对路径问题"><a href="#source相对路径问题" class="headerlink" title="source相对路径问题"></a>source相对路径问题</h4><p><code>source</code>相对路径问题，不是<mark class="label danger">.Jenkins/workspace</mark>，而是<mark class="label success">.jenkins/workspace/[project]/</mark></p>
<a id="more"></a>


<img src="/post/4995ab80/jkp.jpeg" class title="相对路径示例图">]]></content>
      <categories>
        <category>Jenkins</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo之修改文章样式</title>
    <url>/post/346628a2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="文章样式"><a href="#文章样式" class="headerlink" title="文章样式"></a>文章样式</h4><p>修改<code>themes/next/source/css/_custom/custom.styl</code>文件，加入自定义样式</p>
<a id="more"></a>


<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*******************文章样式*****************************/</span></span><br><span class="line"><span class="comment">// 文章</span></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">45px</span> <span class="number">36px</span> <span class="number">36px</span> <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章标题字体</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章标题动态效果</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: linear-gradient(<span class="number">90deg</span>, <span class="number">#a166ab</span> <span class="number">0%</span>, <span class="number">#ef4e7b</span> <span class="number">25%</span>, <span class="number">#f37055</span> <span class="number">50%</span>, <span class="number">#ef4e7b</span> <span class="number">75%</span>, <span class="number">#a166ab</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章元数据（meta）留白更改</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章的描述description</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> <span class="selector-class">.post-description</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之修改[Read More]按钮样式</title>
    <url>/post/3f27960.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="修改-Read-More-按钮样式"><a href="#修改-Read-More-按钮样式" class="headerlink" title="修改[Read More]按钮样式"></a>修改[Read More]按钮样式</h4><p> 修改<code>themes/next/source/css/_custom/custom.styl</code>文件，加入自定义样式</p>
<a id="more"></a>


 <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// [Read More]按钮样式</span></span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">border</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: unset;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">background-image</span>: linear-gradient(<span class="number">90deg</span>, <span class="number">#a166ab</span> <span class="number">0%</span>, <span class="number">#ef4e7b</span> <span class="number">25%</span>, <span class="number">#f37055</span> <span class="number">50%</span>, <span class="number">#ef4e7b</span> <span class="number">75%</span>, <span class="number">#a166ab</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>git常用命令</title>
    <url>/post/423abe9e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h5 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">mkdir d:\git_test</span><br><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">&quot;Your name&quot;</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">&quot;you@example.com&quot;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h5 id="获取当前git配置"><a href="#获取当前git配置" class="headerlink" title="获取当前git配置"></a>获取当前git配置</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">git --version</span><br><span class="line">git<span class="built_in"> config </span>--global user.name         # 获取当前登录的用户</span><br><span class="line">git<span class="built_in"> config </span>--global user.email        # 获取当前登录用户的邮箱</span><br></pre></td></tr></table></figure>

<h5 id="创建文件并写入内容"><a href="#创建文件并写入内容" class="headerlink" title="创建文件并写入内容"></a>创建文件并写入内容</h5><p>如果文件不存在，则创建文件</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;hello git&quot;</span></span><br><span class="line">&gt; <span class="built_in">index</span>.html                          # 将<span class="string">&#x27;hello git&#x27;</span>写入到<span class="built_in">index</span>.html中</span><br></pre></td></tr></table></figure>
<p>单个<code>&gt;</code>箭头表示写入，<code>&gt;&gt;</code>表示追加</p>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">git init                        # 初始化当前所在目录的这个项目</span><br><span class="line">git status                      # 查看项目状态，有没有添加或者修改文件</span><br><span class="line">git add .                       # 给目前的项目制作一个快照snapshot（快照只是登记留名，快照不等于记录在案，git管快照叫做索引<span class="keyword">index</span>）</span><br><span class="line">git <span class="keyword">commit</span>                      # 将快照里登记的内容永久写入git仓库</span><br><span class="line">git <span class="keyword">commit</span> -a                   # 直接提交所有修改，省去了<span class="symbol">``</span>git add<span class="symbol">``</span>和<span class="symbol">``</span>git diff<span class="symbol">``</span>和<span class="symbol">``</span>git <span class="keyword">commit</span><span class="symbol">``</span>的工序</span><br><span class="line">                                # 无法把新增文件或文件夹加入进来，所以，如果你新增了文件或文件夹，那么就要老老实实的先<span class="symbol">``</span>git add ..<span class="symbol">``</span>，再<span class="symbol">``</span>git <span class="keyword">commit</span><span class="symbol">``</span></span><br><span class="line">git push                        # 把更新推送到远程分支</span><br><span class="line">git <span class="built_in">log</span> -p                      # git不但会给出开发日志，而且会显示每个开发版本的代码区别所在</span><br><span class="line">git <span class="built_in">log</span> --online                # 查看版本</span><br><span class="line">git diff                        # 比较暂存区和工作区的差别</span><br><span class="line">git diff --cached               # 比较暂存区和历史区的差别</span><br><span class="line">git diff master                 # 比较历史区和工作区的差别（修改）</span><br><span class="line">git checkout <span class="keyword">index</span>.html         # 用暂存区中的内容或者版本库中的内容覆盖掉工作区</span><br><span class="line">git reset HEAD <span class="keyword">index</span>.html       # 取消增加到暂存区的内容（添加时）</span><br><span class="line">git rm <span class="keyword">index</span>.html --cached      # 使用--cached表示只删除缓冲区中的内容</span><br><span class="line">git reset --hard HEAD/commit_id # 回滚版本</span><br><span class="line">git reflog                      # 回滚到未来</span><br></pre></td></tr></table></figure>
<p>总结：先git add修改过的文件，再git diff并git status查看确认，然后git commit提交，然后输入开发日志，然后git push推送到远程分支，最后git log再次确认。</p>
<h5 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h5><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">branch </span>                     <span class="comment"># 查看分支列表</span></span><br><span class="line">git <span class="keyword">branch </span>experiment           <span class="comment"># 创建experiment分支</span></span><br><span class="line">git checkout experiment         <span class="comment"># 切换到experiment分支</span></span><br><span class="line">git checkout -<span class="keyword">b </span>experiment      <span class="comment"># 创建分支并切换分支</span></span><br><span class="line">git commit -a                   <span class="comment"># 在分支上提交工作</span></span><br><span class="line">git checkout master             <span class="comment"># 切换到主干道</span></span><br><span class="line">git merge experiment            <span class="comment"># 合并分支到主干道</span></span><br><span class="line">git <span class="keyword">branch </span>-d experiment        <span class="comment"># -d，表示“在分支已经合并到主干后删除分支”。如果使用大写的-D的话，则表示“不论如何都删除分支”</span></span><br></pre></td></tr></table></figure>

<h5 id="使用git-stash命令保存和恢复进度"><a href="#使用git-stash命令保存和恢复进度" class="headerlink" title="使用git stash命令保存和恢复进度"></a>使用git stash命令保存和恢复进度</h5><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">git stash                       <span class="meta"># 保留当前工作区进度，会把暂存区和工作区的改动保存起来</span></span><br><span class="line">git stash <span class="keyword">save</span> &#x27;message...&#x27;     <span class="meta"># 保存当前工作区，并添加备注</span></span><br><span class="line">git stash list                  <span class="meta"># 显示保存进度的列表。也就意味着，git stash命令可以多次执行。</span></span><br><span class="line">git stash <span class="keyword">pop</span>                   <span class="meta"># 恢复最新的进度到工作区并删除。git默认会把工作区和缓存区的改动都恢复到工作区。</span></span><br><span class="line">git stash apply                 <span class="meta"># 恢复最新的进度到工作区不删除</span></span><br><span class="line">git stash <span class="built_in">drop</span> [stash_id]       <span class="meta"># 删除一个存储的进度，如果不指定stash_id，则默认删除最新的存储进度，stash_id从git stash list获取</span></span><br><span class="line">git stash <span class="keyword">clear</span>                 <span class="meta"># 删除所有存储的进度</span></span><br></pre></td></tr></table></figure>

<h5 id="撤销一次已经提交到Github的内容"><a href="#撤销一次已经提交到Github的内容" class="headerlink" title="撤销一次已经提交到Github的内容"></a>撤销一次已经提交到Github的内容</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard HEAD~1</span></span><br><span class="line">git push <span class="comment">--force</span></span><br></pre></td></tr></table></figure>

<p>该命令执行后，会隐藏掉Github库中的被撤销掉的记录，但是指定到该被隐藏掉的记录来访问，依旧可以访问。</p>
<h5 id="GitHub更新自己fork的代码"><a href="#GitHub更新自己fork的代码" class="headerlink" title="GitHub更新自己fork的代码"></a>GitHub更新自己fork的代码</h5><ol>
<li>clone已经fork到自己账号的代码</li>
</ol>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/shadow000902/</span>ApiTestEngine.git</span><br><span class="line">cd ApiTestEngine</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>查看远程分支列表</li>
</ol>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">╭─taoyi at TaoYi-Mac <span class="keyword">in</span> ~<span class="regexp">/git_projects/</span>GitHub/ApiTestEngine on master✔ using ‹› <span class="number">17</span>-<span class="number">08</span>-<span class="number">23</span> - <span class="number">15</span>:<span class="number">01</span>:<span class="number">23</span></span><br><span class="line">╰─○ git remote -v</span><br><span class="line">debugtalk	https:<span class="regexp">//gi</span>thub.com<span class="regexp">/debugtalk/</span>ApiTestEngine.git (fetch)</span><br><span class="line">debugtalk	https:<span class="regexp">//gi</span>thub.com<span class="regexp">/debugtalk/</span>ApiTestEngine.git (push)</span><br><span class="line">origin	https:<span class="regexp">//gi</span>thub.com<span class="regexp">/shadow000902/</span>ApiTestEngine.git (fetch)</span><br><span class="line">origin	https:<span class="regexp">//gi</span>thub.com<span class="regexp">/shadow000902/</span>ApiTestEngine.git (push)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>fetch原始源代码的新版本到本地</li>
</ol>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git fetch debugtalk</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>合并两个版本的代码</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">merge</span> debugtalk/<span class="keyword">master</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li><p>如果合并代码后有冲突，解决冲突</p>
</li>
<li><p>把合并好的最新的代码提交到自己的GitHub账号上</p>
</li>
</ol>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure>

<h5 id="git撤销最后一次commit"><a href="#git撤销最后一次commit" class="headerlink" title="git撤销最后一次commit"></a>git撤销最后一次commit</h5><ol>
<li>使用git log查看commit记录</li>
</ol>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">commit</span>-id<span class="number">1</span></span><br><span class="line"><span class="attribute">commit</span>-id<span class="number">2</span></span><br><span class="line"><span class="attribute">commit</span>-id<span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>如果想要撤销commit-id1的话，就要选择commit-id2</p>
<ol start="2">
<li>使用命令撤销提交</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">reset</span> <span class="keyword">commit</span>-id2				<span class="comment"># 只是撤销提交，修改的内容不变</span></span><br></pre></td></tr></table></figure>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">git </span><span class="string">reset </span><span class="built_in">--hard</span> <span class="string">commit-id2	</span>		<span class="comment"># 撤销提交，并撤销修改的内容</span></span><br><span class="line"><span class="string">git </span><span class="string">push </span><span class="string">origin </span><span class="string">HARD </span><span class="built_in">--force</span>		<span class="comment"># 撤销后，强制提交并push到远程分支</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>修改最新一次已提交但未 push 的 message</li>
</ol>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">commit</span> <span class="comment">--amend -m &quot;your new message&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之显示当前浏览进度</title>
    <url>/post/e28ea32e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h2><p>修改<code>themes/*/_config.yml</code>，把 <code>false</code> 改为 <code>true</code>：</p>
<a id="more"></a>


<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Back to top in sidebar</span></span><br><span class="line"><span class="attr">b2t:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scroll percent label in b2t button</span></span><br><span class="line"><span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之主页文章添加边框阴影效果</title>
    <url>/post/35232b4b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="主页文章添加边框阴影效果"><a href="#主页文章添加边框阴影效果" class="headerlink" title="主页文章添加边框阴影效果"></a>主页文章添加边框阴影效果</h2><p>打开 <code>themes/*/source/css/_custom/custom.styl</code> ,向里面加代码:</p>
<a id="more"></a>

<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 主页文章添加阴影效果</span></span><br><span class="line">.post &#123;</span><br><span class="line">   margin-top: <span class="number">0</span>px;</span><br><span class="line">   margin-bottom: <span class="number">60</span>px;</span><br><span class="line">   padding: <span class="number">25</span>px;</span><br><span class="line">   -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>);</span><br><span class="line">   -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之修改访问URL路径</title>
    <url>/post/e9980575.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="修改访问URL路径"><a href="#修改访问URL路径" class="headerlink" title="修改访问URL路径"></a>修改访问URL路径</h2><p>默认情况下访问URL路径为：<code>domain/2018/10/18/</code>关于本站,修改为 <code>domain/About/</code>关于本站。 编辑 Hexo 站点下的 <code>_config.yml</code> 文件，修改其中的 <code>permalink</code>字段：</p>
<a id="more"></a>

<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">permalink:</span> <span class="symbol">:category/</span><span class="symbol">:title/</span></span><br></pre></td></tr></table></figure>

<br>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之博文置顶</title>
    <url>/post/c53d9800.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h2><h4 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1. 安装插件"></a>1. 安装插件</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">uninstall</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-<span class="keyword">index</span>-pin-top <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>然后在需要置顶的文章的Front-matter中加上<code>top</code>即可：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">2018</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-10-25 16:10:03</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">10</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h4 id="2-设置置顶标志"><a href="#2-设置置顶标志" class="headerlink" title="2. 设置置顶标志"></a>2. 设置置顶标志</h4><p>打开：<code>/themes/*/layout/_macro/post.swig</code>，定位到</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> post.top %&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">7D26CD</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之静态资源压缩</title>
    <url>/post/2299cf25.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="静态资源压缩"><a href="#静态资源压缩" class="headerlink" title="静态资源压缩"></a>静态资源压缩</h2><p>在<code>站点目录</code>下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> gulp -g</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>安装<code>gulp</code>插件：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> gulp-minify-css <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> gulp-uglify <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> gulp-htmlmin <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> gulp-htmlclean <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> gulp-imagemin <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在 <code>Hexo 站点</code>下新建 <code>gulpfile.js</code>文件，文件内容如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">&#x27;gulp-minify-css&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlmin&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-imagemin&#x27;</span>);</span><br><span class="line"><span class="comment">// 压缩css文件</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-css&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/**/*.css&#x27;</span>)</span><br><span class="line">  .pipe(minifycss())</span><br><span class="line">  .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩html文件</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-html&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">  .pipe(htmlclean())</span><br><span class="line">  .pipe(htmlmin(&#123;</span><br><span class="line">    removeComments: <span class="literal">true</span>,</span><br><span class="line">    minifyJS: <span class="literal">true</span>,</span><br><span class="line">    minifyCSS: <span class="literal">true</span>,</span><br><span class="line">    minifyURLs: <span class="literal">true</span>,</span><br><span class="line">  &#125;))</span><br><span class="line">  .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩js文件</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-js&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">&#x27;./public/**/.js&#x27;</span>,<span class="string">&#x27;!./public/js/**/*min.js&#x27;</span>])</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩 public/demo 目录内图片</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-images&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    gulp.src(<span class="string">&#x27;./public/demo/**/*.*&#x27;</span>)</span><br><span class="line">        .pipe(imagemin(&#123;</span><br><span class="line">           optimizationLevel: <span class="number">5</span>, <span class="comment">//类型：Number  默认：3  取值范围：0-7（优化等级）</span></span><br><span class="line">           progressive: <span class="literal">true</span>, <span class="comment">//类型：Boolean 默认：false 无损压缩jpg图片</span></span><br><span class="line">           interlaced: <span class="literal">false</span>, <span class="comment">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span></span><br><span class="line">           multipass: <span class="literal">false</span>, <span class="comment">//类型：Boolean 默认：false 多次优化svg直到完全优化</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public/uploads&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 默认任务</span></span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>, [</span><br><span class="line">  <span class="string">&#x27;minify-html&#x27;</span>,<span class="string">&#x27;minify-css&#x27;</span>,<span class="string">&#x27;minify-js&#x27;</span>,<span class="string">&#x27;minify-images&#x27;</span></span><br><span class="line">]);</span><br></pre></td></tr></table></figure>

<p>只需要每次在执行 <code>generate</code> 命令后执行 <code>gulp</code> 就可以实现对静态资源的压缩，压缩完成后执行 <code>deploy</code> 命令同步到服务器：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">gulp</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之实现点击出现桃心效果</title>
    <url>/post/862b573a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h2><p><font style="font-size:18px;"> 在<code>/themes/*/source/js/src</code>下新建文件<code>click.js</code>，接着把以下粘贴到<code>click.js</code>文件中。</font></p>
<a id="more"></a>


<p><font style="font-size:18px;"> 代码如下：</font><br>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure></p>
<p><font style="font-size:18px;">在<code>\themes\*\layout\_layout.swig</code>文件末尾添加:</font></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之网站标题栏背景颜色</title>
    <url>/post/91a443ec.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="网站标题栏背景颜色"><a href="#网站标题栏背景颜色" class="headerlink" title="网站标题栏背景颜色"></a>网站标题栏背景颜色</h2><p>打开 <code>themes/*/source/css/_custom/custom.styl</code> ,在里面写下如下代码：</p>
<a id="more"></a>

<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$blue</span>; <span class="comment">//修改为自己喜欢的颜色</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之修改内容区域的宽度</title>
    <url>/post/e20d3e6e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="修改内容区域的宽度"><a href="#修改内容区域的宽度" class="headerlink" title="修改内容区域的宽度"></a>修改内容区域的宽度</h2><p>编辑主题的 <code>source/css/_variables/custom.styl</code> 文件，新增变量：</p>
<a id="more"></a>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 修改成你期望的宽度</span><br><span class="line"><span class="variable">$content</span>-desktop = <span class="number">700</span>px</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 当视窗超过 <span class="number">1600</span>px 后的宽度</span><br><span class="line"><span class="variable">$content</span>-desktop-large = <span class="number">900</span>px</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之修改Logo字体</title>
    <url>/post/6d38bae0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="修改Logo字体"><a href="#修改Logo字体" class="headerlink" title="修改Logo字体"></a>修改Logo字体</h2><p>在 <code>themes/*/source/css/_custom/custom.styl</code> 中添加如下代码：</p>
<a id="more"></a>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Zitiming;</span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;/fonts/Zitiming.ttf&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span> <span class="meta">!important</span>;</span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">&#x27;Zitiming&#x27;</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中字体文件在 <code>themes/next/source/fonts</code> 目录下，里面有个 <code>.gitkeep</code> 的隐藏文件，打开写入你要保留的字体文件，比如我的是就是写入 <code>Zitiming.ttf</code> ，具体字库自己从网上下载即可。</p>
]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之添加背景图</title>
    <url>/post/2db94f1a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="添加背景图"><a href="#添加背景图" class="headerlink" title="添加背景图"></a>添加背景图</h2><p>在 <code>themes/*/source/css/_custom/custom.styl</code> 中添加如下代码：</p>
<a id="more"></a>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(/images/bg.jpg);</span><br><span class="line">    <span class="attribute">background-size</span>:cover;</span><br><span class="line">    <span class="attribute">background-repeat</span>:no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo之文章加密访问</title>
    <url>/post/78491cc3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p>下载 <code>hexo-blog-encrypt</code>，它将会被存储在本地浏览器的localStorage中：</p>
<a id="more"></a>

<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install </span>--save hexo-<span class="keyword">blog-encrypt</span></span><br><span class="line"><span class="keyword"></span></span><br></pre></td></tr></table></figure>

<h5 id="文章信息头，将-password-字段添加到文章信息头："><a href="#文章信息头，将-password-字段添加到文章信息头：" class="headerlink" title="文章信息头，将 password 字段添加到文章信息头："></a>文章信息头，将 <code>password</code> 字段添加到文章信息头：</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2016-03-30 21:18:02</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">abcd1234xxx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">加密文章tag</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-10-26 20:22:58</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">mikemessi</span></span><br><span class="line"><span class="attr">abstract:</span> <span class="string">该文章已加密,</span> <span class="string">请输入密码查看。</span></span><br><span class="line"><span class="attr">message:</span> <span class="string">该文章已加密,</span> <span class="string">请输入密码查看。</span></span><br><span class="line"><span class="attr">wrong_pass_message:</span> <span class="string">密码不正确，请重新输入！</span></span><br><span class="line"><span class="attr">wrong_hash_message:</span> <span class="string">文章不能被校验,</span> <span class="string">不过您还是能看看解密后的内容！</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>再使用<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>在本地预览加密的文章。</p>
<h5 id="或者-修改-config-yml"><a href="#或者-修改-config-yml" class="headerlink" title="或者,修改_config.yml"></a><code>或者</code>,修改<code>_config.yml</code></h5><figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="xml"># Security</span></span><br><span class="line"><span class="xml">encrypt: # hexo-blog-encrypt</span></span><br><span class="line"><span class="xml">  abstract: 有东西被加密了, 请输入密码查看.</span></span><br><span class="line"><span class="xml">  message: 您好, 这里需要密码.</span></span><br><span class="line"><span class="xml">  tags:</span></span><br><span class="line"><span class="xml">  - &#123;name: tagName, password: 密码A&#125;</span></span><br><span class="line"><span class="xml">  - &#123;name: tagName, password: 密码B&#125;</span></span><br><span class="line"><span class="xml">  template: <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hexo-blog-encrypt&quot;</span> <span class="attr">data-wpm</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">hbeWrongPassMessage</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">data-whm</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">hbeWrongHashMessage</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hbe-input-container&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;hbePass&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">hbeMessage</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">hbeMessage</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;hbeData&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hbeData&quot;</span> <span class="attr">data-hmacdigest</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">hbeHmacDigest</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">hbeEncryptedData</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span></span><br><span class="line"><span class="xml">  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注：若文章中采用<code>_config.yml</code>中的全局配置，则文章的tags只能有一个，若有多个tags，则失效。</p>
<p>注：<code>文章信息头</code> &gt;<code> _config.yml</code> (站点根目录下的) &gt; 默认配置</p>
]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse安装SVN插件的几种方式</title>
    <url>/post/ddb18259.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="SVN"><a href="#SVN" class="headerlink" title="SVN"></a>SVN</h2><h4 id="方式一：通过Eclipse-Marketplace在线安装"><a href="#方式一：通过Eclipse-Marketplace在线安装" class="headerlink" title="方式一：通过Eclipse Marketplace在线安装"></a><font color="red">方式一：通过Eclipse Marketplace在线安装</font></h4><p>  Help–&gt;Eclipse Marketplace，搜索svn</p>
  <a id="more"></a>


  <img src="/post/ddb18259/em_svn_1.png" class title="第一步">

  <img src="/post/ddb18259/em_svn_2.png" class title="第二步">

<p>  点击Install开始安装<br>  <img src="/post/ddb18259/em_svn_3.png" class title="第三步"><br>  一步一步往下点，然后接受协议，安装完成后重启eclipse即可生效。</p>
<h4 id="方式二：通过Install-New-Software在线安装"><a href="#方式二：通过Install-New-Software在线安装" class="headerlink" title="方式二：通过Install New Software在线安装"></a><font color="red">方式二：通过Install New Software在线安装</font></h4><p>  Help -&gt; Install New Software</p>
<p>  点击add按钮，在弹出窗口中，输入name(自己为变量命的名)和插件的URL，然后点击add</p>
<p>  SVN插件与Subversion版本的对应关系如下：</p>
<p>  <a href="http://subclipse.tigris.org/update_1.6.x/">http://subclipse.tigris.org/update_1.6.x/</a> （Subversion 1.6.x）</p>
<p>  <a href="http://subclipse.tigris.org/update_1.8.x/">http://subclipse.tigris.org/update_1.8.x/</a> （Subversion 1.7.x）</p>
<p>  <a href="http://subclipse.tigris.org/update_1.10.x/">http://subclipse.tigris.org/update_1.10.x/</a> （Subversion 1.8.x）</p>
<p>  <a href="https://dl.bintray.com/subclipse/releases/subclipse/4.2.x/">https://dl.bintray.com/subclipse/releases/subclipse/4.2.x/</a> （Subversion 1.9.x）</p>
  <img src="/post/ddb18259/em_svn_4.png" class title="第四步">

<p>  全部勾选，然后点击Next</p>
  <img src="/post/ddb18259/em_svn_5.png" class title="第五步">

<p>  一步一步往下点，然后接受协议，安装完成后重启eclipse即可生效。</p>
<h4 id="方式三：通过下载插件，离线安装"><a href="#方式三：通过下载插件，离线安装" class="headerlink" title="方式三：通过下载插件，离线安装"></a><font color="red">方式三：通过下载插件，离线安装</font></h4><p>   1、下载需要的插件包，<a href="https://github.com/subclipse/subclipse/wiki">https://github.com/subclipse/subclipse/wiki</a></p>
   <img src="/post/ddb18259/em_svn_6.png" class title="第一步">

<p>   这里有最新版的插件下载地址，也有旧版本的插件下载地址，根据自己的需要选择下载。</p>
   <img src="/post/ddb18259/em_svn_7.png" class title="第二步">

<p>   下载的包里会有”plugins”和”features”两个文件夹</p>
   <img src="/post/ddb18259/em_svn_8.png" class title="第三步">

<p>   2、找到eclipse目录下”plugins”和”features”文件夹，将下载好的的svn插件对应名称文件夹下的内容复制到eclipse的同名文件夹中</p>
<p>   3、重启eclipse即可生效</p>
]]></content>
      <categories>
        <category>Eclipse</category>
      </categories>
      <tags>
        <tag>Eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>idea注册码</title>
    <url>/post/90442fa1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="以下注册码仅供参考"><a href="#以下注册码仅供参考" class="headerlink" title="以下注册码仅供参考"></a>以下注册码仅供参考</h2><h4 id="2020年4月5日"><a href="#2020年4月5日" class="headerlink" title="2020年4月5日"></a>2020年4月5日</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">MNQ043JMTU</span>-eyJsaWNlbnNlSWQiOiJNTlEwNDNKTVRVIiwibGljZW<span class="number">5</span>zZWVOYW<span class="number">1</span>lIjoiR<span class="number">1</span>VPIEJJTiIsImFzc<span class="number">2</span>lnbmVlTmFtZSI<span class="number">6</span>IiIsImFzc<span class="number">2</span>lnbmVlRW<span class="number">1</span>haWwiOiIiLCJsaWNlbnNlUmVzdHJpY<span class="number">3</span>Rpb<span class="number">24</span>iOiIiLCJjaGVja<span class="number">0</span>NvbmN<span class="number">1</span>cnJlbnRVc<span class="number">2</span>UiOmZhbHNlLCJwcm<span class="number">9</span>kdWN<span class="number">0</span>cyI<span class="number">6</span>W<span class="number">3</span>siY<span class="number">29</span>kZSI<span class="number">6</span>IklJIiwiZmFsbGJhY<span class="number">2</span>tEYXRlIjoiMjAxOS<span class="number">0</span>wNC<span class="number">0</span>wNSIsInBhaWRVcFRvIjoiMjAyMC<span class="number">0</span>wNC<span class="number">0</span>wNCJ<span class="number">9</span>XSwiaGFzaCI<span class="number">6</span>IjEyNjIxNDIwLzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF<span class="number">1</span>dG<span class="number">9</span>Qcm<span class="number">9</span>sb<span class="number">25</span>nYXRlZCI<span class="number">6</span>ZmFsc<span class="number">2</span>UsImlzQXV<span class="number">0</span>b<span class="number">1</span>Byb<span class="number">2</span>xvbmdhdGVkIjpmYWxzZX<span class="number">0</span>=-tltrJHc<span class="number">5</span>lqCKLnza<span class="number">1</span>bcLhMzDkfJeBqhRWbvcrPF<span class="number">9</span>Gqo+X+iFWeKQXoEUOlrG<span class="number">38</span>uSzzmX<span class="number">05</span>ph//PgXgyVfP<span class="number">5</span>RXKsaRMfrv/thoouS<span class="number">5</span>sA<span class="number">0</span>aTemm<span class="number">3</span>z<span class="number">6</span>uRiFirTDj<span class="number">60</span>KSGr<span class="number">5</span>XZoP/WAXO<span class="number">4</span>nuti<span class="number">6</span>SRKZUbr/VSAtRPQRiCJvevq+<span class="number">3</span>gWPDGu<span class="number">2</span>aZ<span class="number">0</span>AemiNLq<span class="number">4</span>qIVWH<span class="number">3</span>wxTN<span class="number">7</span>lK<span class="number">2</span>h<span class="number">5</span>uJssZsyy<span class="number">35</span>Yy<span class="number">9</span>O<span class="number">703</span>c<span class="number">5</span>PFU<span class="number">0</span>fxCj<span class="number">2</span>HRgXq<span class="number">7</span>H/<span class="number">91</span>X+ZNLvvAZAVU<span class="number">9</span>B<span class="number">7</span>bOqnY<span class="number">4</span>ZzNNV/cjY<span class="number">8</span>B<span class="number">5</span>gNo<span class="number">53</span>Lo<span class="number">6</span>s<span class="number">2</span>szEV<span class="number">7</span>DsZ+<span class="number">8</span>e<span class="number">7</span>k<span class="number">8</span>P<span class="number">4</span>Yo<span class="number">81</span>DKxneCBoe<span class="number">4</span>wiZmRaCIT<span class="number">6</span>wK<span class="number">3</span>/<span class="number">27</span>KrtQTFMcGeZMA==-MIIElTCCAn<span class="number">2</span>gAwIBAgIBCTANBgkqhkiG<span class="number">9</span>w<span class="number">0</span>BAQsFADAYMRYwFAYDVQQDDA<span class="number">1</span>KZXRQcm<span class="number">9</span>maWxlIENBMB<span class="number">4</span>XDTE<span class="number">4</span>MTEwMTEyMjk<span class="number">0</span>NloXDTIwMTEwMjEyMjk<span class="number">0</span>NlowaDELMAkGA<span class="number">1</span>UEBhMCQ<span class="number">1</span>oxDjAMBgNVBAgMBU<span class="number">51</span>c<span class="number">2</span>xlMQ<span class="number">8</span>wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby<span class="number">4</span>xHTAbBgNVBAMMFHByb<span class="number">2</span>QzeS<span class="number">1</span>mcm<span class="number">9</span>tLTIwMTgxMTAxMIIBIjANBgkqhkiG<span class="number">9</span>w<span class="number">0</span>BAQEFAAOCAQ<span class="number">8</span>AMIIBCgKCAQEAxcQkq+zdxlR<span class="number">2</span>mmRYBPzGbUNdMN<span class="number">6</span>OaXiXzxIWtMEkrJMO/<span class="number">5</span>oUfQJbLLuMSMK<span class="number">0</span>QHFmaI<span class="number">37</span>WShyxZcfRCidwXjot<span class="number">4</span>zmNBKnlyHodDij/<span class="number">78</span>TmVqFl<span class="number">8</span>nOeD<span class="number">5</span>+<span class="number">07</span>B<span class="number">8</span>VEaIu<span class="number">7</span>c<span class="number">3</span>E<span class="number">1</span>N+e<span class="number">1</span>doC<span class="number">6</span>wht<span class="number">4</span>I<span class="number">4</span>+IEmtsPAdoaj<span class="number">5</span>WCQVQbrI<span class="number">8</span>KeT<span class="number">8</span>M<span class="number">9</span>VcBIWX<span class="number">7</span>fD<span class="number">0</span>fhexfg<span class="number">3</span>ZRt<span class="number">0</span>xqwMcXGNp<span class="number">3</span>DdJHiO<span class="number">0</span>rCdU+Itv<span class="number">7</span>EmtnSVq<span class="number">9</span>jBG<span class="number">1</span>usMSFvMowR<span class="number">25</span>mju<span class="number">2</span>JcPFp<span class="number">1</span>+I<span class="number">4</span>ZI+FqgR<span class="number">8</span>gyG<span class="number">8</span>oiNDyNEoAbsR<span class="number">3</span>lOpI<span class="number">7</span>grUYSvkB/xVy/VoklPCK<span class="number">2</span>h<span class="number">0</span>f<span class="number">0</span>GJxFjnye<span class="number">8</span>NT<span class="number">1</span>PAywoyl<span class="number">7</span>RmiAVRE/EKwIDAQABo<span class="number">4</span>GZMIGWMAkGA<span class="number">1</span>UdEwQCMAAwHQYDVR<span class="number">0</span>OBBYEFGEpG<span class="number">9</span>oZGcfLMGNBkY<span class="number">7</span>SgHiMGgTcMEgGA<span class="number">1</span>UdIwRBMD+AFKOetkhnQhI<span class="number">2</span>Qb<span class="number">1</span>t<span class="number">4</span>Lm<span class="number">0</span>oFKLl/GzoRykGjAYMRYwFAYDVQQDDA<span class="number">1</span>KZXRQcm<span class="number">9</span>maWxlIENBggkA<span class="number">0</span>myxg<span class="number">7</span>KDeeEwEwYDVR<span class="number">0</span>lBAwwCgYIKwYBBQUHAwEwCwYDVR<span class="number">0</span>PBAQDAgWgMA<span class="number">0</span>GCSqGSIb<span class="number">3</span>DQEBCwUAA<span class="number">4</span>ICAQAF<span class="number">8</span>uc+YJOHHwOFcPzmbjcxNDuGoOUIP+<span class="number">2</span>h<span class="number">1</span>R<span class="number">75</span>Lecswb<span class="number">7</span>ru<span class="number">2</span>LWWSUMtXVKQzChLNPn/<span class="number">72</span>W<span class="number">0</span>k+oI<span class="number">056</span>tgiwuG<span class="number">7</span>M<span class="number">49</span>LXp<span class="number">4</span>zQVlQnFmWU<span class="number">1</span>wwGvVhq<span class="number">5</span>R<span class="number">63</span>Rpjx<span class="number">1</span>zjGUhcXgayu<span class="number">7</span>+<span class="number">9</span>zMUW<span class="number">596</span>Lbomsg<span class="number">8</span>qVve<span class="number">6</span>euqsrFicYkIIuUu<span class="number">4</span>zYPndJwfe<span class="number">0</span>YkS<span class="number">5</span>nY<span class="number">72</span>SHnNdbPhEnN<span class="number">8</span>wcB<span class="number">2</span>Kz+OIG<span class="number">0</span>lih<span class="number">3</span>yz<span class="number">5</span>EqFhld<span class="number">03</span>bGp<span class="number">222</span>ZQCIghCTVL<span class="number">6</span>QBNadGsiN/lWLl<span class="number">4</span>JdR<span class="number">3</span>lJkZzlpFdiHijoVRdWeSWqM<span class="number">4</span>y<span class="number">0</span>t<span class="number">23</span>c<span class="number">92</span>HXKrgppoSV<span class="number">18</span>XMxrWVdoSM<span class="number">3</span>nuMHwxGhFyde<span class="number">05</span>OdDtLpCv+jlWf<span class="number">5</span>REAHHA<span class="number">201</span>pAU<span class="number">6</span>bJSZINyHDUTB+Beo<span class="number">28</span>rRXSwSh<span class="number">3</span>OUIvYwKNVeoBY+KwOJ<span class="number">7</span>WnuTCUq<span class="number">1</span>meE<span class="number">6</span>GkKc<span class="number">4</span>D/cXmgpOyW/<span class="number">1</span>SmBz<span class="number">3</span>XjVIi/zprZ<span class="number">0</span>zf<span class="number">3</span>qH<span class="number">5</span>mkphtg<span class="number">6</span>ksjKgKjmx<span class="number">1</span>cXfZAAX<span class="number">6</span>wcDBNaCL+Ortep<span class="number">1</span>Dh<span class="number">8</span>xDUbqbBVNBL<span class="number">4</span>jbiL<span class="number">3</span>i<span class="number">3</span>xsfNiyJgaZ<span class="number">5</span>sX<span class="number">7</span>i<span class="number">8</span>tmStEpLbPwvHcByuf<span class="number">59</span>qJhV/bZOl<span class="number">8</span>KqJBETCDJcY<span class="number">6</span>O<span class="number">2</span>aqhTUy+<span class="number">9</span>x<span class="number">93</span>ThKs<span class="number">1</span>GKrRPePrWPluud<span class="number">7</span>ttlgtRveit/pcBrnQcXOl<span class="number">1</span>rHq<span class="number">7</span>ByB<span class="number">8</span>CFAxNotRUYL<span class="number">9</span>IF<span class="number">5</span>n<span class="number">3</span>wJOgkPojMy<span class="number">6</span>jetQA<span class="number">5</span>Ogc<span class="number">8</span>Sm<span class="number">7</span>RG<span class="number">6</span>vg<span class="number">1</span>yow==</span><br></pre></td></tr></table></figure>


<a id="more"></a>

<h4 id="2020年3月11日"><a href="#2020年3月11日" class="headerlink" title="2020年3月11日"></a>2020年3月11日</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">56ZS5PQ1RF</span>-eyJsaWNlbnNlSWQiOiI<span class="number">1</span>NlpTNVBRMVJGIiwibGljZW<span class="number">5</span>zZWVOYW<span class="number">1</span>lIjoi<span class="number">5</span>q<span class="number">2</span>j<span class="number">54</span>mI<span class="number">5</span>o<span class="number">6</span>I<span class="number">5</span>p<span class="number">2</span>DIC<span class="number">4</span>iLCJhc<span class="number">3</span>NpZ<span class="number">25</span>lZU<span class="number">5</span>hbWUiOiIiLCJhc<span class="number">3</span>NpZ<span class="number">25</span>lZUVtYWlsIjoiIiwibGljZW<span class="number">5</span>zZVJlc<span class="number">3</span>RyaWN<span class="number">0</span>aW<span class="number">9</span>uIjoiRm<span class="number">9</span>yIGVkdWNhdGlvbmFsIHVzZSBvbmx<span class="number">5</span>IiwiY<span class="number">2</span>hlY<span class="number">2</span>tDb<span class="number">25</span>jdXJyZW<span class="number">50</span>VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt<span class="number">7</span>ImNvZGUiOiJJSSIsInBhaWRVcFRvIjoiMjAyMC<span class="number">0</span>wMy<span class="number">0</span>xMCJ<span class="number">9</span>LHsiY<span class="number">29</span>kZSI<span class="number">6</span>IkFDIiwicGFpZFVwVG<span class="number">8</span>iOiIyMDIwLTAzLTEwIn<span class="number">0</span>seyJjb<span class="number">2</span>RlIjoiRFBOIiwicGFpZFVwVG<span class="number">8</span>iOiIyMDIwLTAzLTEwIn<span class="number">0</span>seyJjb<span class="number">2</span>RlIjoiUFMiLCJwYWlkVXBUbyI<span class="number">6</span>IjIwMjAtMDMtMTAifSx<span class="number">7</span>ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMC<span class="number">0</span>wMy<span class="number">0</span>xMCJ<span class="number">9</span>LHsiY<span class="number">29</span>kZSI<span class="number">6</span>IkRNIiwicGFpZFVwVG<span class="number">8</span>iOiIyMDIwLTAzLTEwIn<span class="number">0</span>seyJjb<span class="number">2</span>RlIjoiQ<span class="number">0</span>wiLCJwYWlkVXBUbyI<span class="number">6</span>IjIwMjAtMDMtMTAifSx<span class="number">7</span>ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI<span class="number">6</span>IjIwMjAtMDMtMTAifSx<span class="number">7</span>ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAyMC<span class="number">0</span>wMy<span class="number">0</span>xMCJ<span class="number">9</span>LHsiY<span class="number">29</span>kZSI<span class="number">6</span>IlJEIiwicGFpZFVwVG<span class="number">8</span>iOiIyMDIwLTAzLTEwIn<span class="number">0</span>seyJjb<span class="number">2</span>RlIjoiUEMiLCJwYWlkVXBUbyI<span class="number">6</span>IjIwMjAtMDMtMTAifSx<span class="number">7</span>ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMC<span class="number">0</span>wMy<span class="number">0</span>xMCJ<span class="number">9</span>LHsiY<span class="number">29</span>kZSI<span class="number">6</span>IldTIiwicGFpZFVwVG<span class="number">8</span>iOiIyMDIwLTAzLTEwIn<span class="number">0</span>seyJjb<span class="number">2</span>RlIjoiREIiLCJwYWlkVXBUbyI<span class="number">6</span>IjIwMjAtMDMtMTAifSx<span class="number">7</span>ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMC<span class="number">0</span>wMy<span class="number">0</span>xMCJ<span class="number">9</span>LHsiY<span class="number">29</span>kZSI<span class="number">6</span>IlJTVSIsInBhaWRVcFRvIjoiMjAyMC<span class="number">0</span>wMy<span class="number">0</span>xMCJ<span class="number">9</span>XSwiaGFzaCI<span class="number">6</span>IjEyMjkxNDk<span class="number">4</span>LzAiLCJncmFjZVBlcmlvZERheXMiOjAsImF<span class="number">1</span>dG<span class="number">9</span>Qcm<span class="number">9</span>sb<span class="number">25</span>nYXRlZCI<span class="number">6</span>ZmFsc<span class="number">2</span>UsImlzQXV<span class="number">0</span>b<span class="number">1</span>Byb<span class="number">2</span>xvbmdhdGVkIjpmYWxzZX<span class="number">0</span>=-SYSsDcgL<span class="number">1</span>WJmHnsiGaHUWbaZLPIe<span class="number">2</span>oI<span class="number">3</span>QiIneDtaIbh/SZOqu<span class="number">63</span>G<span class="number">7</span>RGudSjf<span class="number">3</span>ssPb<span class="number">1</span>zxroMti/bK<span class="number">9</span>II<span class="number">1</span>ugHz/nTjw<span class="number">31</span>Uah<span class="number">7</span>D<span class="number">0</span>HqeaCO<span class="number">7</span>Zc<span class="number">0</span>q<span class="number">9</span>BeHysiWmBZ+<span class="number">8</span>bABs<span class="number">5</span>vr<span class="number">25</span>GgIa<span class="number">5</span>pO<span class="number">7</span>CJhL<span class="number">7</span>RitXQbWpAajrMBAeZ<span class="number">2</span>En<span class="number">3</span>wCgNwT<span class="number">6</span>D<span class="number">6</span>hNmiMlhXsWgwkw<span class="number">2</span>OKnyHZ<span class="number">2</span>dl<span class="number">8</span>yEL+oV<span class="number">5</span>SW<span class="number">14</span>t<span class="number">7</span>bdjYGKQrYjSd<span class="number">4</span>+<span class="number">2</span>zc<span class="number">4</span>FnaX<span class="number">88</span>yLnGNO<span class="number">9</span>B<span class="number">3</span>U<span class="number">6</span>G+BuM<span class="number">37</span>pxS<span class="number">5</span>MjHrkHqMTK<span class="number">8</span>W<span class="number">3</span>I<span class="number">66</span>mIj<span class="number">6</span>IB<span class="number">6</span>dYXD<span class="number">5</span>nvKKO<span class="number">1</span>OZREBAr<span class="number">6</span>LV<span class="number">0</span>BqRYSbuJKFhZ<span class="number">8</span>nd<span class="number">6</span>YDG<span class="number">20</span>GvW<span class="number">6</span>leimv<span class="number">0</span>rHVBFmA<span class="number">0</span>w==-MIIElTCCAn<span class="number">2</span>gAwIBAgIBCTANBgkqhkiG<span class="number">9</span>w<span class="number">0</span>BAQsFADAYMRYwFAYDVQQDDA<span class="number">1</span>KZXRQcm<span class="number">9</span>maWxlIENBMB<span class="number">4</span>XDTE<span class="number">4</span>MTEwMTEyMjk<span class="number">0</span>NloXDTIwMTEwMjEyMjk<span class="number">0</span>NlowaDELMAkGA<span class="number">1</span>UEBhMCQ<span class="number">1</span>oxDjAMBgNVBAgMBU<span class="number">51</span>c<span class="number">2</span>xlMQ<span class="number">8</span>wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby<span class="number">4</span>xHTAbBgNVBAMMFHByb<span class="number">2</span>QzeS<span class="number">1</span>mcm<span class="number">9</span>tLTIwMTgxMTAxMIIBIjANBgkqhkiG<span class="number">9</span>w<span class="number">0</span>BAQEFAAOCAQ<span class="number">8</span>AMIIBCgKCAQEAxcQkq+zdxlR<span class="number">2</span>mmRYBPzGbUNdMN<span class="number">6</span>OaXiXzxIWtMEkrJMO/<span class="number">5</span>oUfQJbLLuMSMK<span class="number">0</span>QHFmaI<span class="number">37</span>WShyxZcfRCidwXjot<span class="number">4</span>zmNBKnlyHodDij/<span class="number">78</span>TmVqFl<span class="number">8</span>nOeD<span class="number">5</span>+<span class="number">07</span>B<span class="number">8</span>VEaIu<span class="number">7</span>c<span class="number">3</span>E<span class="number">1</span>N+e<span class="number">1</span>doC<span class="number">6</span>wht<span class="number">4</span>I<span class="number">4</span>+IEmtsPAdoaj<span class="number">5</span>WCQVQbrI<span class="number">8</span>KeT<span class="number">8</span>M<span class="number">9</span>VcBIWX<span class="number">7</span>fD<span class="number">0</span>fhexfg<span class="number">3</span>ZRt<span class="number">0</span>xqwMcXGNp<span class="number">3</span>DdJHiO<span class="number">0</span>rCdU+Itv<span class="number">7</span>EmtnSVq<span class="number">9</span>jBG<span class="number">1</span>usMSFvMowR<span class="number">25</span>mju<span class="number">2</span>JcPFp<span class="number">1</span>+I<span class="number">4</span>ZI+FqgR<span class="number">8</span>gyG<span class="number">8</span>oiNDyNEoAbsR<span class="number">3</span>lOpI<span class="number">7</span>grUYSvkB/xVy/VoklPCK<span class="number">2</span>h<span class="number">0</span>f<span class="number">0</span>GJxFjnye<span class="number">8</span>NT<span class="number">1</span>PAywoyl<span class="number">7</span>RmiAVRE/EKwIDAQABo<span class="number">4</span>GZMIGWMAkGA<span class="number">1</span>UdEwQCMAAwHQYDVR<span class="number">0</span>OBBYEFGEpG<span class="number">9</span>oZGcfLMGNBkY<span class="number">7</span>SgHiMGgTcMEgGA<span class="number">1</span>UdIwRBMD+AFKOetkhnQhI<span class="number">2</span>Qb<span class="number">1</span>t<span class="number">4</span>Lm<span class="number">0</span>oFKLl/GzoRykGjAYMRYwFAYDVQQDDA<span class="number">1</span>KZXRQcm<span class="number">9</span>maWxlIENBggkA<span class="number">0</span>myxg<span class="number">7</span>KDeeEwEwYDVR<span class="number">0</span>lBAwwCgYIKwYBBQUHAwEwCwYDVR<span class="number">0</span>PBAQDAgWgMA<span class="number">0</span>GCSqGSIb<span class="number">3</span>DQEBCwUAA<span class="number">4</span>ICAQAF<span class="number">8</span>uc+YJOHHwOFcPzmbjcxNDuGoOUIP+<span class="number">2</span>h<span class="number">1</span>R<span class="number">75</span>Lecswb<span class="number">7</span>ru<span class="number">2</span>LWWSUMtXVKQzChLNPn/<span class="number">72</span>W<span class="number">0</span>k+oI<span class="number">056</span>tgiwuG<span class="number">7</span>M<span class="number">49</span>LXp<span class="number">4</span>zQVlQnFmWU<span class="number">1</span>wwGvVhq<span class="number">5</span>R<span class="number">63</span>Rpjx<span class="number">1</span>zjGUhcXgayu<span class="number">7</span>+<span class="number">9</span>zMUW<span class="number">596</span>Lbomsg<span class="number">8</span>qVve<span class="number">6</span>euqsrFicYkIIuUu<span class="number">4</span>zYPndJwfe<span class="number">0</span>YkS<span class="number">5</span>nY<span class="number">72</span>SHnNdbPhEnN<span class="number">8</span>wcB<span class="number">2</span>Kz+OIG<span class="number">0</span>lih<span class="number">3</span>yz<span class="number">5</span>EqFhld<span class="number">03</span>bGp<span class="number">222</span>ZQCIghCTVL<span class="number">6</span>QBNadGsiN/lWLl<span class="number">4</span>JdR<span class="number">3</span>lJkZzlpFdiHijoVRdWeSWqM<span class="number">4</span>y<span class="number">0</span>t<span class="number">23</span>c<span class="number">92</span>HXKrgppoSV<span class="number">18</span>XMxrWVdoSM<span class="number">3</span>nuMHwxGhFyde<span class="number">05</span>OdDtLpCv+jlWf<span class="number">5</span>REAHHA<span class="number">201</span>pAU<span class="number">6</span>bJSZINyHDUTB+Beo<span class="number">28</span>rRXSwSh<span class="number">3</span>OUIvYwKNVeoBY+KwOJ<span class="number">7</span>WnuTCUq<span class="number">1</span>meE<span class="number">6</span>GkKc<span class="number">4</span>D/cXmgpOyW/<span class="number">1</span>SmBz<span class="number">3</span>XjVIi/zprZ<span class="number">0</span>zf<span class="number">3</span>qH<span class="number">5</span>mkphtg<span class="number">6</span>ksjKgKjmx<span class="number">1</span>cXfZAAX<span class="number">6</span>wcDBNaCL+Ortep<span class="number">1</span>Dh<span class="number">8</span>xDUbqbBVNBL<span class="number">4</span>jbiL<span class="number">3</span>i<span class="number">3</span>xsfNiyJgaZ<span class="number">5</span>sX<span class="number">7</span>i<span class="number">8</span>tmStEpLbPwvHcByuf<span class="number">59</span>qJhV/bZOl<span class="number">8</span>KqJBETCDJcY<span class="number">6</span>O<span class="number">2</span>aqhTUy+<span class="number">9</span>x<span class="number">93</span>ThKs<span class="number">1</span>GKrRPePrWPluud<span class="number">7</span>ttlgtRveit/pcBrnQcXOl<span class="number">1</span>rHq<span class="number">7</span>ByB<span class="number">8</span>CFAxNotRUYL<span class="number">9</span>IF<span class="number">5</span>n<span class="number">3</span>wJOgkPojMy<span class="number">6</span>jetQA<span class="number">5</span>Ogc<span class="number">8</span>Sm<span class="number">7</span>RG<span class="number">6</span>vg<span class="number">1</span>yow==</span><br></pre></td></tr></table></figure>

<br>


<blockquote>
<p>其他相关链接</p>
<blockquote>
<p><a href="https://songzixian.com/">宋子宪博客</a><br><a href="https://zhile.io/2018/08/25/jetbrains-license-server-crack.html">知了</a></p>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>Idea</category>
      </categories>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo之基本操作</title>
    <url>/post/343aa4a8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><pre><code>git

Node.js</code></pre>
<h4 id="Hexo安装：npm-install-hexo-g"><a href="#Hexo安装：npm-install-hexo-g" class="headerlink" title="Hexo安装：npm install hexo -g"></a>Hexo安装：npm install hexo -g</h4><a id="more"></a>

<p>安装完成后检查：<code>hexo -v</code></p>
<h6 id="Hexo基本操作"><a href="#Hexo基本操作" class="headerlink" title="Hexo基本操作"></a>Hexo基本操作</h6><p>初始化文件夹：<code>hexo init</code></p>
<p>开启服务器：<code>hexo s</code></p>
<p>Ctrl+C为退出服务器，开启服务器后在 <a href="http://localhost:4000/">http://localhost:4000/</a> 中预览博客</p>
<p>清除缓存：<code>hexo clean</code></p>
<p>生成页面：<code>hexo g</code></p>
<p>上传到github：<code>hexo d</code></p>
<p>查看帮助：<code>hexo help</code></p>
<p>查看版本：<code>hexo version</code></p>
<p>新建文章：<code>hexo new &quot;name&quot;</code></p>
<p>新建页面：<code>hexo new page &quot;name&quot;</code></p>
<p>安装插件：<code>npm install --save hexo-admin(插件名)</code></p>
<p>卸载插件：<code>npm uninstall hexo-admin(插件名)</code></p>
<h6 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h6><p>ssh key</p>
<blockquote>
<p>hexo主要配置文件：_config.yml</p>
</blockquote>
<p>首次上传到github安装插件：<code>npm install hexo-deployer-git --save</code></p>
<h6 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h6><p><code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></p>
<blockquote>
<p>配置文件：post_asset_folder: true</p>
</blockquote>
<p>坑点：图片链接要写”/“，不要写”&quot;</p>
]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo之踩坑</title>
    <url>/post/ad07d2fa.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="hexo-本身-marldown不好用"><a href="#hexo-本身-marldown不好用" class="headerlink" title="hexo 本身 marldown不好用"></a>hexo 本身 marldown不好用</h3><h5 id="hexo-renderer-markdown-it-插件"><a href="#hexo-renderer-markdown-it-插件" class="headerlink" title="hexo-renderer-markdown-it 插件"></a>hexo-renderer-markdown-it 插件</h5><p>为了更好地写markdown文档</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm i hexo-renderer-markdown-<span class="keyword">it</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>

<p>添加到<code>根目录</code>_config.yml文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">&#x27;“”‘’&#x27;</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span>  <span class="comment"># add emoji</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&#x27;v&#x27;</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">¶</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo之图片问题</title>
    <url>/post/172c7c2b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="一、插件安装与配置"><a href="#一、插件安装与配置" class="headerlink" title="一、插件安装与配置"></a>一、插件安装与配置</h5><p>首先我们需要安装一个图片路径转换的插件，这个插件名字是hexo-asset-image</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br><span class="line"></span><br><span class="line">  npm install hexo-asset-image --save  (推荐这个)</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>但是这个插件的内容需要修改【不然可能会出Bug】</p>
<p>打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</p>
<figure class="highlight javascript"><figcaption><span>完整代码</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">    	<span class="keyword">var</span> link = data.permalink;</span><br><span class="line">	<span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">	   <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	   <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">	<span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: <span class="literal">false</span>,</span><br><span class="line">        xmlMode: <span class="literal">false</span>,</span><br><span class="line">        lowerCaseTags: <span class="literal">false</span>,</span><br><span class="line">        decodeEntities: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> ($(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">			<span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">			<span class="keyword">var</span> src = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">			<span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="line">			   !<span class="regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="line">			  <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">			  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">			  <span class="keyword">var</span> linkArray = link.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">				<span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">			  &#125;);</span><br><span class="line">			  <span class="keyword">var</span> srcArray = src.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">				<span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">			  &#125;);</span><br><span class="line">			  <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">				srcArray.shift();</span><br><span class="line">			  src = srcArray.join(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">			  $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class="line">			  <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">			<span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="built_in">this</span>));</span><br><span class="line">		&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>打开_config.yml文件，修改下述内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h5 id="二、问题推测"><a href="#二、问题推测" class="headerlink" title="二、问题推测"></a>二、问题推测</h5><h6 id="一-本地图片没有有效上传至github仓库中，导致引用无效"><a href="#一-本地图片没有有效上传至github仓库中，导致引用无效" class="headerlink" title="(一)本地图片没有有效上传至github仓库中，导致引用无效"></a>(一)本地图片没有有效上传至github仓库中，导致引用无效</h6><pre><code>解决方案：安装插件（回看前文）</code></pre>
<h6 id="（二）本地图片没有存放在同名文件夹中"><a href="#（二）本地图片没有存放在同名文件夹中" class="headerlink" title="（二）本地图片没有存放在同名文件夹中"></a>（二）本地图片没有存放在同名文件夹中</h6><pre><code>解决方案：将需要引用的本地图片存放在与文章名相同的文件夹中</code></pre>
<h6 id="（三）图片路径出错"><a href="#（三）图片路径出错" class="headerlink" title="（三）图片路径出错"></a>（三）图片路径出错</h6><p>解决方案：打开_config.yml修改下述内容<br><img style="margin-left:30px;" src="https://img-blog.csdnimg.cn/20181115112941162.png"></p>
<h6 id="（四）相对路径引用的标签插件"><a href="#（四）相对路径引用的标签插件" class="headerlink" title="（四）相对路径引用的标签插件"></a>（四）相对路径引用的标签插件</h6><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页</span><br><span class="line">上显示不正确。在Hexo <span class="number">2</span>时代，社区创建了很多插件来解决这个问题。但是，随着Hexo <span class="number">3</span> 的  </span><br><span class="line">发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</span><br></pre></td></tr></table></figure>

<p><small><strong>也就是说在存档页和主页不能使用和文章内容中的常规语法来引用图片。</strong></small></p>
<!-- 注释 -->



<blockquote><p>比如说：当你打开文章资源文件夹功能后，你把一个 <code>example.jpg</code> 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](/example.jpg)</code>，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）</p>
</blockquote>


<p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 编辑器日常使用语法记录</title>
    <url>/post/9c39465b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="段首缩进"><a href="#段首缩进" class="headerlink" title="段首缩进"></a>段首缩进</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span></span><br></pre></td></tr></table></figure>
<p>下面用菜根谭中一段做例<br>&emsp;&emsp;好丑心太明，则物不契；贤愚心太明，则人不亲。士君子须是内精明而外浑厚，使好丑两得其平，贤愚共受其益，才是生成的德量。</p>
<a id="more"></a>

<h4 id="文本局中"><a href="#文本局中" class="headerlink" title="文本局中"></a>文本局中</h4><blockquote class="blockquote-center">
<p>夜宿山寺<br>唐 · 李白<br>危楼高百尺，手可摘星辰。<br>不敢高声语，恐惊天上人。</p>

</blockquote>

<h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">![]<span class="comment">(/post/1.jpg)</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="meta">%</span> asset_img jkp.jpeg 相对路径示例图 <span class="meta">%</span>&#125;  推荐</span><br></pre></td></tr></table></figure>

<p><img src="/post/child01.jpg" alt="小女孩"></p>
<img src="/post/9c39465b/child01.jpg" class title="小女孩">

<h4 id="分页显示"><a href="#分页显示" class="headerlink" title="分页显示"></a>分页显示</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">escape</span>&gt;</span><span class="comment">&lt;!-- more --&gt;</span><span class="tag">&lt;/<span class="name">escape</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><ol>
  <li>文字链接</li>

  <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">github</span>](<span class="link">www.github.com</span>)</span><br></pre></td></tr></table></figure>
  <li>网址链接</li>

  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">www</span><span class="selector-class">.Google</span><span class="selector-class">.hk</span>&gt;</span><br></pre></td></tr></table></figure>
</ol>




<h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string"> 姓名 </span>|<span class="string"> 性别 </span>|<span class="string"> 电话 </span>|</span><br><span class="line">|<span class="string"> :--- </span>|<span class="string"> :----: </span>|<span class="string"> ----: </span>|</span><br><span class="line">|<span class="string"> 张三 </span>|<span class="string"> 男 </span>|<span class="string"> 123456789123 </span>|</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">姓名</th>
<th align="center">性别</th>
<th align="right">电话</th>
</tr>
</thead>
<tbody><tr>
<td align="left">张三</td>
<td align="center">男</td>
<td align="right">123456789123</td>
</tr>
</tbody></table>
<h4 id="图片墙"><a href="#图片墙" class="headerlink" title="图片墙"></a>图片墙</h4><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">&#123;% grouppicture [<span class="keyword">group</span>]-[<span class="keyword">layout</span>] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class="line">&#123;% gp [<span class="keyword">group</span>]-[<span class="keyword">layout</span>] %&#125;&#123;% endgp %&#125;</span><br><span class="line"></span><br><span class="line">[<span class="keyword">group</span>]  : 要在组中添加的图片总数。</span><br><span class="line">[<span class="keyword">layout</span>] : 要显示的组下的默认图片。</span><br></pre></td></tr></table></figure>


<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">&#123;% gp <span class="number">4</span><span class="number">-4</span> %&#125;</span><br><span class="line">  ![](<span class="regexp">/photos/im</span>ages/<span class="number">1.</span>jpg)</span><br><span class="line">  ![](<span class="regexp">/photos/im</span>ages/<span class="number">2.</span>jpg)</span><br><span class="line">  ![](<span class="regexp">/photos/im</span>ages/<span class="number">3.</span>jpg)</span><br><span class="line">  ![](<span class="regexp">/photos/im</span>ages/<span class="number">4.</span>jpg)</span><br><span class="line">&#123;% endgp %&#125;</span><br></pre></td></tr></table></figure>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="/photos/images/1.jpg"></div><div class="group-picture-column"><img src="/photos/images/2.jpg"></div><div class="group-picture-column"><img src="/photos/images/3.jpg"></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="/photos/images/10.jpg"></div></div></div>


<h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">button</span> #, 开始 %&#125;</span></span><br></pre></td></tr></table></figure>

<a class="btn" href="#">开始</a>

<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">btn</span> #, Text %&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name">btn</span> #, 取消,, Title %&#125;</span></span><br></pre></td></tr></table></figure>

<a class="btn" href="#">Text</a> <a class="btn" href="#" title="Title">取消</a>


<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">button</span> url, text, icon [class], [title] %&#125;</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 标签别名 --&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name">btn</span> url, text, icon [class], [title] %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">url     : 绝对或相对URL</span></span><br><span class="line"><span class="xml">text    : 按钮文字，如果未指定图标则为必须</span></span><br><span class="line"><span class="xml">icon    : FontAwesome图标名称（开头没有&#x27;fa-&#x27;）。如果未指定文本，则为必需</span></span><br><span class="line"><span class="xml">[class] : FontAwesome类：fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5X ，可选参数。</span></span><br><span class="line"><span class="xml">[title] : 鼠标悬停时的工具提示，可选参数。</span></span><br></pre></td></tr></table></figure>

<p>使用：</p>
<p>最好添加<code>&lt;div&gt;标签</code>，测试时没加div，下面显示不完全，加上非常美观。</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-tag">&#123;% <span class="name">btn</span> https://www.zhyong.cn ,首页,home fa-2x,这是YouForever的首页%&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>显示：</p>
<div><a class="btn" href="https://blog.xiaosige.com/" title="这是leeze的首页"><i class="fa fa-home fa-fw"></i>首页</a></div>


<h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&#123;% label [class]@Text %&#125;</span><br><span class="line"></span><br><span class="line">[class] :<span class="built_in"> default </span>| primary | success | <span class="builtin-name">info</span> | <span class="builtin-name">warning</span> | danger.</span><br><span class="line">          <span class="string">&#x27;@Text&#x27;</span> 可以指定是否有空格</span><br><span class="line">          例如。 <span class="string">&#x27;success @text&#x27;</span>类似于<span class="string">&#x27;success @ text&#x27;</span>。</span><br><span class="line">          如果未指定，则将选择默认类。</span><br></pre></td></tr></table></figure>

<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml">Lorem </span><span class="template-tag">&#123;% <span class="name">label</span> @ipsum %&#125;</span><span class="xml"> </span><span class="template-tag">&#123;% <span class="name">label</span> primary@dolor sit %&#125;</span><span class="xml"> amet, consectetur </span><span class="template-tag">&#123;% <span class="name">label</span> success@adipiscing elit, %&#125;</span><span class="xml"> sed </span><span class="template-tag">&#123;% <span class="name">label</span> info@do eiusmod %&#125;</span><span class="xml"> tempor incididunt ut labore et dolore magna aliqua.</span></span><br><span class="line"></span><br><span class="line"><span class="xml">Ut enim *</span><span class="template-tag">&#123;% <span class="name">label</span> warning @ad %&#125;</span><span class="xml">* minim veniam, quis **</span><span class="template-tag">&#123;% <span class="name">label</span> danger@nostrud %&#125;</span><span class="xml">** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span></span><br><span class="line"></span><br><span class="line"><span class="xml">Duis aute irure dolor in reprehenderit in voluptate ~~</span><span class="template-tag">&#123;% <span class="name">label</span> default @velit %&#125;</span><span class="xml">~~ <span class="tag">&lt;<span class="name">mark</span>&gt;</span>esse<span class="tag">&lt;/<span class="name">mark</span>&gt;</span> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></span><br></pre></td></tr></table></figure>

<p>Lorem <mark class="label default">ipsum</mark> <mark class="label primary">dolor sit</mark> amet, consectetur <mark class="label success">adipiscing elit,</mark> sed <mark class="label info">do eiusmod</mark> tempor incididunt ut labore et dolore magna aliqua.</p>
<p>Ut enim <em><mark class="label warning">ad</mark></em> minim veniam, quis <strong><mark class="label danger">nostrud</mark></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
<p>Duis aute irure dolor in reprehenderit in voluptate <del><mark class="label default">velit</mark></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<h4 id="标注"><a href="#标注" class="headerlink" title="标注"></a>标注</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&#123;%<span class="built_in"> note </span>[class] [no-icon] %&#125;</span><br><span class="line">任何内容（支持内联标签）</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   :<span class="built_in"> default </span>| primary | success | <span class="builtin-name">info</span> | <span class="builtin-name">warning</span> | danger.</span><br><span class="line">[no-icon] : 禁用备注中的图标</span><br><span class="line"></span><br><span class="line">所有参数都是可选的。</span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note %&#125;</span><br><span class="line">无任何样式</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">成功的笔记</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line"><span class="section">#### Primary Header</span></span><br><span class="line"><span class="strong">**Welcome**</span> to [<span class="string">Hexo!</span>](<span class="link">https://hexo.io</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<div class="note primary"><h5 id="Primary-Header"><a href="#Primary-Header" class="headerlink" title="Primary Header"></a>Primary Header</h5><p><strong>Welcome</strong> to <a href="https://hexo.io/">Hexo!</a></p>
</div>

<h4 id="pdf-文件"><a href="#pdf-文件" class="headerlink" title="pdf 文件"></a>pdf 文件</h4><p>1,第一方法</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;http://lc-0ww4yxjs.cn-n1.lcfile.com/510df791fa9b2590c109/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89.pdf&quot;</span> width=<span class="string">&quot;830&quot;</span> height=<span class="string">&quot;800&quot;</span> scroll=<span class="string">&quot;no&quot;</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br></pre></td></tr></table></figure>

<p>2,第二方法</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">&lt;embed src=<span class="string">&quot;http://lc-0ww4yxjs.cn-n1.lcfile.com/510df791fa9b2590c109/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89.pdf&quot;</span> width=<span class="string">&quot;840&quot;</span> height=<span class="string">&quot;800&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>这两种方法效果是一样的，但是不够完美，pdf 文件不能随窗口大小变化，后读发现方法在更新。</p>
<p>启用PDF标签插件：<a href="https://github.com/theme-next/theme-next-pdf">https://github.com/theme-next/theme-next-pdf</a></p>
<p>官方教程<br><a href="https://theme-next.org/docs/tag-plugins/pdf">https://theme-next.org/docs/tag-plugins/pdf</a></p>
<p>使用：</p>
<figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">&#123;<span class="comment">% pdf url [height] %&#125;</span></span><br><span class="line"></span><br><span class="line">[url]    : 相对路径</span><br><span class="line">[height] : 可选参数，pdf展示的高度, e.g. <span class="number">800</span>px.</span><br></pre></td></tr></table></figure>
<p>示例1：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;% pdf http<span class="variable">s:</span>//zhyong-<span class="keyword">cn</span>-<span class="keyword">file</span>.oss-<span class="keyword">cn</span>-shanghai.aliyuncs.<span class="keyword">com</span>/books%<span class="number">2</span>Fbyte-of-<span class="keyword">python</span>-chinese-edition.pdf %&#125;</span><br></pre></td></tr></table></figure>

<div class="pdfobject-container" data-target="https://zhyong-cn-file.oss-cn-shanghai.aliyuncs.com/books%2Fbyte-of-python-chinese-edition.pdf" data-height="500px"></div>

<p>示例2：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">&#123;% pdf http://lc<span class="number">-0</span>ww<span class="number">4</span>yxjs.cn-n<span class="number">1</span>.lcfile.com/<span class="number">510</span>df<span class="number">791</span>fa<span class="number">9</span>b<span class="number">2590</span><span class="keyword">c</span><span class="number">109</span>/Python<span class="symbol">%E5</span><span class="symbol">%9</span>F<span class="symbol">%BA</span><span class="symbol">%E7</span><span class="symbol">%A1</span><span class="symbol">%80</span><span class="symbol">%E6</span><span class="symbol">%95</span><span class="symbol">%99</span><span class="symbol">%E7</span><span class="symbol">%A8</span><span class="symbol">%8</span>B<span class="symbol">%EF</span><span class="symbol">%BC</span><span class="symbol">%88</span><span class="symbol">%E7</span><span class="symbol">%AC</span><span class="symbol">%AC3</span><span class="symbol">%E7</span><span class="symbol">%89</span><span class="symbol">%88</span><span class="symbol">%EF</span><span class="symbol">%BC</span><span class="symbol">%89</span>.pdf %&#125;</span><br></pre></td></tr></table></figure>

<div class="pdfobject-container" data-target="http://lc-0ww4yxjs.cn-n1.lcfile.com/510df791fa9b2590c109/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89.pdf" data-height="500px"></div>

<h4 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h4><p>用于页内跳转。其中定义id地方，虽然不太美观，不过只能写HTML。<br>语法</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">点击我跳转到锚点</span>](<span class="link">#jump</span>)</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;jump&quot;</span>&gt;</span></span>我是一个锚点，跳到我这里来<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>使用 # 号可标记1 - 6级标题，一级标题对应 1 个 # 号，二级标题对应 2 个 # 号，以此类推。</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">*斜体文本*</span><br><span class="line"><span class="symbol">_</span>斜体文本<span class="symbol">_</span></span><br><span class="line">**粗体文本**</span><br><span class="line"><span class="symbol">__</span>粗体文本<span class="symbol">__</span></span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>显示效果如下：</p>
<p><em>斜体文本</em></p>
<p><em>斜体文本</em></p>
<p><strong>粗体文本</strong> </p>
<p><strong>粗体文本</strong></p>
<p><strong><em>粗斜体文本</em></strong></p>
<p><strong><em>粗斜体文本</em></strong></p>
<h4 id="字号及颜色"><a href="#字号及颜色" class="headerlink" title="字号及颜色"></a>字号及颜色</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">1</span>&gt;</span>大小为1的字体<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">6</span>&gt;</span>大小为6的字体<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">gray</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>gray颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">green</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>green颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">hotpink</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>hotpink颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">LightCoral</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>LightCoral颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">LightSlateGray</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>LightSlateGray颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">orangered</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>orangered颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>red颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">springgreen</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>springgreen颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">Turquoise</span> <span class="attr">size</span>=<span class="string">4</span>&gt;</span>Turquoise颜色的字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p><font size="1">大小为1的字体</font><br><br><font size="6">大小为6的字体</font><br><br><font color="gray" size="4">gray颜色的字</font><br><br><font color="green" size="4">green颜色的字</font><br><br><font color="hotpink" size="4">hotpink颜色的字</font><br><br><font color="LightCoral" size="4">LightCoral颜色的字</font><br><br><font color="LightSlateGray" size="4">LightSlateGray颜色的字</font><br><br><font color="orangered" size="4">orangered颜色的字</font><br><br><font color="red" size="4">red颜色的字</font><br><br><font color="springgreen" size="4">springgreen颜色的字</font><br><br><font color="Turquoise" size="4">Turquoise颜色的字</font></p>
<h4 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h4><p>有多种方法都可以建立分隔线：3个以上的星号，3个以上的减号，3个以上的下划线，也可以在星号、减号、下划线中间插入空格，这几种方式都可以建立分隔线。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">*</span> <span class="emphasis">* *</span></span></span><br><span class="line"><span class="strong">**</span><span class="strong">****</span></span><br><span class="line"><span class="bullet">-</span> - -</span><br><span class="line"><span class="emphasis">_ _</span> <span class="emphasis">_</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure>
<p>显示效果如下：</p>
<hr>
<hr>
<hr>
<hr>
<hr>
<h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">我没有删除线</span><br><span class="line">我也没有删除线</span><br><span class="line">~~我有删除线~~</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>显示效果如下：</p>
<p>我没有删除线<br>我也没有删除线<br><del>我有删除线</del></p>
<h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><p>Markdown中并无下划线的原生语法，可以通过HTML的<u>标签来实现。</u></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>我带下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>显示效果如下：</p>
<p><u>我带下划线</u></p>
<h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>无序列表使用星号，加号或是减号作为标记。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">* 列表项<span class="number">1</span></span><br><span class="line">* 列表项<span class="number">2</span></span><br><span class="line"></span><br><span class="line">+ 列表项<span class="number">1</span></span><br><span class="line">+ 列表项<span class="number">2</span></span><br><span class="line"></span><br><span class="line">- 列表项<span class="number">1</span></span><br><span class="line">- 列表项<span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>显示效果如下：</p>
<ul>
<li>列表项1</li>
<li>列表项2</li>
</ul>
<ul>
<li>列表项1</li>
<li>列表项2</li>
</ul>
<ul>
<li>列表项1</li>
<li>列表项2</li>
</ul>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>有序列表使用数字加上 . 号来表示，注意 . 号和实际内容之间需要加一个空格。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 有序列表项<span class="number">1</span></span><br><span class="line"><span class="number">2.</span> 有序列表项<span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>显示效果如下：</p>
<ol>
<li>有序列表项1</li>
<li>有序列表项2</li>
</ol>
<h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><p>列表嵌套只需要在子列表选项的前面添加 4 个空格即可。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">* 无序列表<span class="number">1</span></span><br><span class="line">    <span class="number">1.</span> 有序列表<span class="number">1.1</span></span><br><span class="line">    <span class="number">2.</span> 有序列表<span class="number">1.2</span></span><br><span class="line">* 无序列表<span class="number">2</span></span><br><span class="line">    - 无序列表<span class="number">2.1</span></span><br><span class="line">    - 无序列表<span class="number">2.2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>无序列表1<ol>
<li>有序列表1.1</li>
<li>有序列表1.2</li>
</ol>
</li>
<li>无序列表2<ul>
<li>无序列表2.1</li>
<li>无序列表2.2</li>
</ul>
</li>
</ul>
<h4 id="Markdown区块"><a href="#Markdown区块" class="headerlink" title="Markdown区块"></a>Markdown区块</h4><p>区块使用 &gt; 符号，后面加上一个空格。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块</span></span><br><span class="line"><span class="quote">&gt; Markdown</span></span><br><span class="line"><span class="quote">&gt; 用Markdown写文章，爽！</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>显示效果如下：</p>
<blockquote>
<p> 区块 Markdown 用Markdown写文章，爽！</p>
</blockquote>
<p>区块嵌套：每一层嵌套加上 &gt; 符号和空格</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 区块</span></span><br><span class="line"><span class="quote">&gt; &gt; 嵌套1</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 嵌套2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>区块</p>
<blockquote>
<p>嵌套1</p>
<blockquote>
<p>嵌套2</p>
</blockquote>
</blockquote>
</blockquote>
<h4 id="其他标记"><a href="#其他标记" class="headerlink" title="其他标记"></a>其他标记</h4><p> <del>这是一条删除线</del></p>
<p> <em>这里不会显示斜体</em></p>
<p> <code>code</code></p>
<p> <code>more code</code></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/post/4a17b156.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<a id="more"></a>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>Test</tag>
      </tags>
  </entry>
</search>
